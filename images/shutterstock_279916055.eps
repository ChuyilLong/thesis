%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: avatars_mixed2.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Irie
%%CreationDate: 10/05/2015
%%BoundingBox: 0 0 933 815
%%HiResBoundingBox: 0 0 932.9532 814.4590
%%CropBox: 0 0 932.9532 814.4590
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/postscript"
   xmp:MetadataDate="2015-05-12T17:37:54-04:00"
   xmp:ModifyDate="2015-05-10T15:33:43-04:00"
   xmp:CreateDate="2015-05-10T15:33:42-04:00"
   xmp:CreatorTool="Adobe Illustrator CS6 (Macintosh)"
   xmpMM:InstanceID="xmp.iid:01518D274C20681180839F70521555CB"
   xmpMM:DocumentID="xmp.did:253EC78D59206811822A8F92A716DD05"
   xmpMM:OriginalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
   xmpMM:RenditionClass="proof:pdf"
   illustrator:StartupProfile="Print"
   xmpTPg:HasVisibleOverprint="False"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:NPages="1"
   pdf:Producer="Adobe PDF library 10.01">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Cartoon Avatars</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Irina Mir</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Set of diverse round avatars isolated on white background. Different nationalities, clothes and hair styles. Cute and simple flat cartoon style.</rdf:li>
    </rdf:Alt>
   </dc:description>
   <dc:subject>
    <rdf:Bag>
     <rdf:li>people</rdf:li>
     <rdf:li>business</rdf:li>
     <rdf:li>man</rdf:li>
     <rdf:li>woman</rdf:li>
     <rdf:li>person</rdf:li>
     <rdf:li>happy</rdf:li>
     <rdf:li>diverse</rdf:li>
     <rdf:li>diversity</rdf:li>
     <rdf:li>team</rdf:li>
     <rdf:li>group</rdf:li>
     <rdf:li>businessman</rdf:li>
     <rdf:li>professional</rdf:li>
     <rdf:li>work</rdf:li>
     <rdf:li>cheerful</rdf:li>
     <rdf:li>businesspeople</rdf:li>
     <rdf:li>young</rdf:li>
     <rdf:li>suit</rdf:li>
     <rdf:li>smart</rdf:li>
     <rdf:li>caucasian</rdf:li>
     <rdf:li>staff</rdf:li>
     <rdf:li>positive</rdf:li>
     <rdf:li>elegant</rdf:li>
     <rdf:li>colleagues</rdf:li>
     <rdf:li>company</rdf:li>
     <rdf:li>african american</rdf:li>
     <rdf:li>formal</rdf:li>
     <rdf:li>casual</rdf:li>
     <rdf:li>black</rdf:li>
     <rdf:li>hispanic</rdf:li>
     <rdf:li>race</rdf:li>
     <rdf:li>nationality</rdf:li>
     <rdf:li>vector</rdf:li>
     <rdf:li>illustration</rdf:li>
     <rdf:li>cartoon</rdf:li>
     <rdf:li>flat</rdf:li>
     <rdf:li>cute</rdf:li>
     <rdf:li>male</rdf:li>
     <rdf:li>female</rdf:li>
     <rdf:li>glasses</rdf:li>
     <rdf:li>set</rdf:li>
     <rdf:li>collection</rdf:li>
     <rdf:li>head</rdf:li>
     <rdf:li>face</rdf:li>
     <rdf:li>avatar</rdf:li>
     <rdf:li>profile picture</rdf:li>
     <rdf:li>user</rdf:li>
     <rdf:li>blank</rdf:li>
     <rdf:li>interface</rdf:li>
     <rdf:li>web</rdf:li>
    </rdf:Bag>
   </dc:subject>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="224"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA4AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpz3VtAK&#xA;zypEPF2Cj8cIiTyYymI8zSnBqOnztxguopW8EkVj+BwmBHMIjljLkQURkWbsVdirsVUZr2zgNJp4&#xA;4j4O6r+s5VPPjh9UgPeWyOKUuQJXQ3VtOKwypKP8hg36sMMsJ/SQfcUSxyjzBCpljB2KuxV2KoeT&#xA;UtOjbjJdQo3Ti0ig/icWByRHUK0U0Uq8onWRf5lII/DFkCDyXYpdirsVad0RSzsFUbliaAYpAtBf&#xA;p/Qufp/pG19T+T1o6/dywW3flstXwy+RRqOjqGRgyncMDUHC0kU3ih2KuxVbLNFEvOV1jT+ZiFH3&#xA;nCBaDIDmh49V0uRuEd5A7fyrIhP3A4TCQ6MBmgeRHzRWRbHYq7FXYq7FXYqxHzR5ue3kex09gJV+&#xA;GafrxP8AKvv4nMvBp73Lq9XreE8MOfe8v1nzlY287h3e8uq/HQ1of8pz/bjm12PHsNz5MdP2Vmze&#xA;o7A9SkbefbvmClrGq+BZifvFP1ZhntSX80OyHYMK3kbemeTvPtz9WgkuGM9nIBzQtzeI9wG708D+&#xA;GZohHLASjsXWnNPT5DCe8R+LemRSxyxrLGweNwGRh0IPQ5iEU7UEEWG2ZVUsxCqoqxOwAGRJAFlk&#xA;BbCdc81XNzI0Fk5hthtzXZ3969hnJ6/teeQmOM8MPtLvtL2fGIue8vuYTJ5m0xZyhZ233lAqtfvr&#xA;+GanwpHd3I08qbtfNFg1wixtJE5ICSEUFT7g1GEY5R3CJ6Y1vu9A8u+aZGkSz1BuXL4Yrg9a9g/9&#xA;c33Zva5JEMp9x/W6HWaAAcUPkyzOkdMoXt5BZWslzO3GOMVPiT2A9zixnMRFl5p5t88rDZz32pXQ&#xA;sdLhFWWpAp2Bpu7HsPuGQMnWyyTyyofJ5Ncf85A+U0lZIbK9mQbCTjEoPuAXrT55V4gckdl5O8Mn&#xA;8k/m15e128EGl3M1lqVCy204EbuF3bgVZkeg3pWtO2SjMFoy6XJh36d4ezeW/Mg1EfVrmi3iioI2&#xA;Dgdx7+Iy0FyNPqOPY80+wuUk3mnzNaaBYevIPUuJKrbQVoXYdSfBVrvgJpzNFo5Z50OQ5l4Z5z/M&#xA;CUL9a1q6Z+RJgtI+nyRK0FPE/flUp1zemjDDpo7D9ZYGfzVh9Wg01vSr9r1hyp/q8KfjlXjeTT/K&#xA;Yv6ftZ35L/MKU/6Ro108bLQz2cnTf+ZKlSD4jLYTvk3GOHVR3H6w9z8q+Z7XX7AzRj0rmKi3MFa8&#xA;SehHip7ZaDbzOt0csEqO4PIp1hcNj3mjzQumD6tbUe9cVJO6xg9z7+AzIw4OLc8nB1er8PYfU851&#xA;HV5ZZjJdSvPMfE1I/pg1XaOLT+nnLuH6XG0vZ2fVer+HvP6EGupoTuhA8aj+zMKHb8Cd4kBzp+zs&#xA;wNpAn5Mi0LzVfWBUxyGe0/agc1FP8mv2Tm0j4eePFEus8TLpp8Mvl+p6TYX1vfWkd1btyjkFR4g9&#xA;wfcZhyiYmi7nHkE48QRGRZuxV2KoHXL5rHSbm6X7cafAf8pjxX8Tk8ceKQDTqMnBAyeO6vPLHpt5&#xA;MpPqrFIwbvy4nfNhnlw45EdzotJESzRB6yH3seh/KzzBNbxTCe2X1EDlHaQMvIVoaIwrnInMH0Dg&#xA;Lcf5U+Y2PxTWqDxLufuomPjBeAony1pV5pWpapYXDBjAYgSpJUllLAitP2SM3fZBsSPTZ5r2gocH&#xA;fv8AoeveQb95rCa0c1NswMdf5Hrt9BBzK1UKN97i9m5LiY9yL843rQaYIUNGuW4k/wCQN2/gM5zt&#xA;vOYYeEfxH7Ho+zcXFks/wvJ/NdxKkEMSNxSQsZKGleNKD5b5y+AbvVaaIJJQ+leStV1KxS7ieOJH&#xA;YhVlLAlRT4hRW675scenlIWubWwhLhNpdqWiapprH61A0aB+Cy/sMdyOLD2GVTxyjzDfizwnyLKN&#xA;Cu5LnTY3kYtIpKux7kHb8KZgZI1Jw80ak9W8v3rXmkwSuayAFHPiVNK/T1ztuzs5y4IyPPl8nktZ&#xA;i4MhA5Me883zNcQWSn4EX1XHizVA+4D8czC6bWT3EXz5+dsVzqmo6PoscxhgEc13OaVBIKxoaVFS&#xA;Kn78xdRPhDm9kYr4i80PkK5qON2hHeqEfxOYv5gdzuvBXjy1e6IU1e2vAbmwdbiNQhXeNg32uR/V&#xA;ko57PJjkwXEgvqe1uJba4juIjSSJgy/RmxeOjIg2HqcEqzQxyr9mRQ6/JhXJu7BsW8X8+arJqHmW&#xA;6q1YrVjbwr2AjNG+9q5WXsuzcIx4R3y3eB61HrPmLzHfizt5Lk2pYemgqI4Ym4cj2Aqan55hZJ77&#xA;ut1MzPIWSaV+RHnO5vIUvhBZ2bBWluPVWQhSAWVVStWFaeFe9MoOeLUMRRWt+SE8h3Oh6jZ6k2ox&#xA;X1zJBcSqgSL024gKKNJv9o/a7e2TwZbk3YD4cwQ9N8iaq+n+ZbQ8qRXLC3mHYiQ0X7noc2Idl2lh&#xA;GTCe8b/J7TNKsMMkrfZjUu3yUVy0Cy8ZI0LeQaheS3E093MeUjlpG/XTNlkl4eMkfwgn5POYwc2U&#xA;A/xSH2lIFSaeSiK0kjdlBJP0DOAlIyJJ3JfRIQEQIjkE50/ypez0a5P1ePw6ufo7fThGMskFZiWC&#xA;7kt5BRlqrL/lKc3HYeYxymHSQ+0Oh7fwCWIT6xP2Fnn5f37rdT2LH93IvqoPBloDT5g/hnQ6qO1u&#xA;j7NyeoxZzmC7h2KuxVJfOUbP5eueO/Eox+QcVy7Tn1hxNcLxF5sljHfrLZu3ETxugPuykDL+0Mhh&#xA;hkQ6/srFGeoiCfP4jdHDQJh5qg1P0bRrWO0MbzMjG7FwCFXi9eKx+mSKeOchxbU93W63zBo8+uWe&#xA;lyRRWzlJ4Zrhbr1CBA28vpcCP3nTiTjE1aSFuqabHb3Vxd8qyXkocr4KkSRgfehP05vuxchIlHo8&#xA;x7Q4xcZXvyZH+XcbGe9k/ZCop+ZJP8M2OrOwdd2YN5FG+e0YxWb/ALKtIp+ZCkfqzkPaCJqB9/6H&#xA;ruyTvIe55xAum33mZrbUZPTWNUW0ZTSsnJWoTuKncb/rzVaOETzegmZxxXH4sg0WHXbTUdaub9re&#xA;SxluIxpMcBl9RYjRXEvP4a8jX4fftQDeEB054uRUtR0S6ufNhurxbRtCaxZG5B/rIuA32qn92EEf&#xA;45GUYmO7LHOY+ljmmS2ltr1xZ6fI01i4pHI25JRalqim1a9s0OqjHp0d1MSljEpbSeueTUZdGBPR&#xA;5HZflsP4Z0nYkSMHvJeU7SN5fgx3zmjLrZJ6PGhX5bj9Yzal5vVj1vBvzafUJtet1jBS2t4THIY1&#xA;rKyzFWLJ17rQ7Zr9RP1UXddk4gMfEOp3YNp41mCARQ/aZCW9ZCo9WjGkdfTNCAK12rlEuEu0jakN&#xA;PvpZLqKFpALmqFp4yB6bIeRfZBy5048cPENkUX0jptxLc6fbXEqenLNEjunShZQT1zZQNgF43NAR&#xA;mYjkC9b0tGTTLRGFGWGNWHuEAy4O2xioj3PDPMEbx67qKOKMtzNX/gzlZe80pvFE/wBEfcxb8rrR&#xA;NS8v+bdOtFtl1hrkPBPdQLcKCa+kWRg1QjoSNjQmtD0OqzfUHSiNmQ83sFtZiOzGmNDD9WjtkiKL&#xA;EFgYkMrKIq8QlB9ivQ0zFJ6sqeT/AJjx/oXyPoWk3xtTqc2pLPcPaW620TekGDOsaBdwropNN8yc&#xA;O87YkcNX3sg0CN5Nd05EFWa5hAH+zGbYO71RrFI/0T9z3PVo2k0q8jXdnglVfmUIy/GakPe8BmFw&#xA;kPIvH7j+4k/1G/VmbrP7mf8AVl9zotD/AH8P68fvTC3tLy5g0WaxaCKCFuV8HiLtIqjjxVgycDy3&#xA;rQ7ge9eKx1wvotIvXrLUNT0meC0MENyso9J7mE3CURtz6fJNyKgb5IVe6KS7WI7aLUrZIo1jcQfG&#xA;FFBQfCop7AZndk/4yPcXUdu/4ufeE68jxs2vIw6JG7N8qcf1nOm1J9Dy3Z4/e/B6Nmud87FXYqp3&#xA;NvHc28tvKKxyqUcezCmGJo2xnESBB6vKNT065069e2mFGQ1R+zL2YfPNrCQkLeay45Y5UUxsdSW4&#xA;jW2kZknI4iRe9O/ffOc1/ZpgTOP0fc9X2Z2vHIBjn9fL3qsk8dgpM00k8kn2Q1BsOw4hVHXfMTS6&#xA;Kef6dgHP1vaOPTj1czyCRzSy3NwXILSSGiqN+vQDOsw4o4oCI5B4fUZ5ZshlLmfxT0ryvpDaZpax&#xA;yClxKfUm9iRsv0DMHNk4pO70mDw4UeZRGuab+kdOkgX+9HxxE/zr0+/pms1+l8fEY9eY97s9Ln8O&#xA;Yl06vBvMltPa6zMHQxNUEdQagUJ+dRnIwBAo8w9vp5CUBW7JtA82w6rNbaXft6V8Q3ozqU/eFVNa&#xA;o4IrT2+7Nvpc0pdOXV1mr0XADKPLuS/XvOUMtrLpOlkm3RmhmuiwZn4sQwXj2J/DKtVmkCY1TkaX&#xA;RVU5fJC+StKur7Vh6EfKgKhq7Bj4+1K5r/ClkIhHmW7W5o44WXu1laR2lpFbR/ZiULXxPc/Sc7TB&#xA;hGOAgOQeIy5DORkeqSecdJe7tFuoV5TW1eSjqYz1/wCB65YQ4GrxcQsdHmPmHQ4dY09rdiEmHxQS&#xA;kV4sP4HvlGXEJinH0eqOGfF06vK9a0DU9NulhuiYmcVQoVZWFaVU0JBzWTgYGi9Vg1EMsbiWYeUv&#xA;JVzBcpfamqgRisNuSGJYj7T0228PHMrBpyDcnUdodpRlHgx/EvS/L+kvqV+iEf6PGQ07duP8vzbM&#xA;4B0+DFxy8npGTdw8u/M/y5LBffpmBa29xRbmg+xIBQE+zD8fnkJB6XsfVgx8M8xy9z54Oo6/5E83&#xA;SahY7RzMxUOCYpoXbkY2pTofpB3zBy4r2atTjOKZ7nskHn2xm8hSec209BcwNT9HC46y+oqdaUqQ&#xA;/P7FaZT+RyXTR+bg8em1fXvP/m6G8vQBbwFf3SA+lDArcuIr1Z/E9T7Da3FirZu08DlmO59Cflh5&#xA;dknvv0zOlLa2qtvX9uUihI9lB+/5ZnxDf2xqxGPhjmefueo5N5l5T5x0abS551RT9Wlq1uw6cSd1&#xA;+a5ZrsplpZVzr9O/2Ou0mnENXEH6b2+W32pVoOr3VtytxF69u27LWhWvUg9M5PBGUjURb2sYmR2T&#xA;c6jZWqLJYq91O8ZKxtKz8FBG1GLd/DMuWmyUduTYcMu5jYu7i51L15TWR23HYClKD5DI9mykNRGu&#xA;91XasQdPO+56l5I0aSzs3vJ14zXQHBT1WMbj/guudRqclmh0ec7PwGMeI8yybMZ2DsVdirsVQOr6&#xA;LY6pAIrlfiX+7lXZ1J8D/DLMeQxOzTmwRyCi8Wv/AMqPzTsfNdlrEGpRaxaWl0ksEUJW1kjQNVv3&#xA;Uv7rdfh+2x8clLLxc2WHDDGKAQd9+W/50a+2jtczCwvLC3kjkvrq4hIDtcSNsLYSFuUPAbr16nIw&#xA;Ijy2bcgjMVIW9d8oeTTo1nA2p3K6lqyLSW7EfpJX/Ijq1PCv4Dpkp55SFOJi0cIS4gP2MmylynYq&#xA;kHmXyVo2vUkuE4XSAhJ1qD/sgCOWa/V9nwzbj0y7/wBbn6PtHJg2G8e54xrX5I+e01F57MQ3QDl7&#xA;eaGcRugr8P8AeenRhQdMvw4vDgI10ehh2zp5D1WPh+q0Z5S/JDzXHeq+ptDY2ZBEqLIJJdxUcVQM&#xA;n2vFhler03jRrke9hm7bwxHouRey+X/LWl6Fa+hZR/EQBJMwHNyPEgDJaXRwwjbmerzmq1k88rl8&#xA;k1zLcV2KsR82+R7jUbaR9Duk06+c1JdOcbeNKfYPvQ/LvlWSEiPSaLjT0sSbDBdP8sfmzpUFnZSW&#xA;iamun6mL6G5E1s/KF4pBInK4KSKfU4cSB0Y+AyvDGQFSF9zfiuIpHeUfy38+/XnvfMWpRRQ3Mrz3&#xA;NmhMz85WLsqHZYxVtuLEe2RxY8gNk7OPLTiRs7PU7GwtbG3EFsgSMdfEnxJ7nMtvhARFBXxZrJ4I&#xA;Z4XhnRZYZBxeNwCpB7EHFlGRibGxeTfmT+Sd1rOlSweXLiKKSR1c294W4gKeVI5FV2B7Co+nAAAX&#xA;ZZO05ZMXBIb97AY/yo/N5PJkvlT9GRmB75L1ZxdQceSwtE37fKh+Ht2y3iDgbXzZ3+Wn5IXui6Ys&#xA;PmS6imZZDIttZlivFgDxeRlQ9a1oPpyqQBLn4e05YsfBEb971yCCG3hSCBFihjAVI1FFAHYAYXWy&#xA;kZGzuV+LFD6hp1nqFq1tdxiSJ+x6g+IPY4QaYzgJc2GT/l/c2jH9GussLNyZZDSSlNh04n78qx4I&#xA;QvhFW7nRdoiEayWT3oeLyfr5aT9wsRdqq7OhH2QKniSe2WU5x7UwjvPwTrRfIdhZ3X128pPck1EY&#xA;/u1Pjv8Aa+nK8eKEJGUR6j1dDrc3jy/od362U5Y0OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpT5h8z6XoNsJbx6yPX0bdK&#xA;GRyPAdh7nITyCPNpzZ44xu8/uvzM80Xzn9G20dtCD8J4+o30s3w/8LmDk1vDzIDj456jN/dx2/HX&#xA;kpR/mB54tm9SdY50HVWiFKfOMqchDXgnmGU8esxi5QNe79TMfK35g6ZrbrazL9Tvz9mJjVH/ANRt&#xA;t/Y/jmdjzCW3VODVxnsdiyrLnLdirHPM3njTNEJgA+tX1K/V0NAtf523p8uuY+bURhtzLtuz+yMm&#xA;o9X0w7/1PJtW/wCcjLSC6eM6rawFeqQRPOB/sgsoJzGOfKeTtRodBj2lIyPx/wB6i/L3/OQUF9dL&#xA;DHfWt8xP9y6tbyN7JUJU/wCxOI1OSPML/JmizbY5cMvx0L1ny75q0vXYSbZjHcIKy2z05r7j+Zff&#xA;MvFmjPk6PXdnZNMfVvHoU4y5wHYqw/zB+YlnYyPbaegu7hNmlJpEp8Nt2+j78ycenJ3Lq9T2nGBq&#xA;PqP2MXk/MTzM7llmjjB/ZWNaD/guR/HLxp4OuPaeY9R8kfpn5m6jG4XUIEuIu7x/BIP+NT+GQlph&#xA;0bsXa0x9QsM+0vVbHU7VbqzkEkZ2PZlP8rDscxJQMTRd1hzRyRuJReRbVlxcQW8LzzusUMYLSSMa&#xA;AAdycEpACyyhAyIAFkvOfMP5uxW/qDS4kEMdeV7ckqtPELVaD3Y/Rmqy9pb1APSabsAAcWaVeQ/S&#xA;WGf8r4ufW4fpm2rXp6acOvTlSn45V+Z1H4DkfkdByv7Syjy9+emj3FytpqctuxYqouLVwwBY0AKV&#xA;atf8k19syMWul/HH4uFqOx8Z/uZgnuJH2F6hb3EFxAk8DiSGQBo5FNQQe4zZRkCLDoJwMSQRRCph&#xA;Yoe+v7WxgM9y4RBsPEnwA7nKdRqIYo8UzQbMWKWQ1EMUvfO147EWkSxJ2Z/if+gzm8/b2Qn0AAee&#xA;5dzi7LiPqNoRPN+tq1TIjD+UoKfhTMYdtagdQfg2ns3F3fanmk+cLe5dYbxRbytssgP7sn6fs5t9&#xA;H21HIeHIOE9/T9jgajs2UBcdx9rIs3jrHYq7FXYqoX15DZWU95OaQ26NI59lFdsBNC2MpCIJLwbU&#xA;tTu9c1lrq6b47hwoUHZErQKvsozVZshoydNjBz5gD/FIBkCRLGgRF4ouwHhmhkSTZfRMeOMIiMRQ&#xA;CpFDJLII0WrHtiASaZk0xvWoDa6gGjrG5o/w7FXB7U9xm10kyY79Hh+3NPHHnuO3EL+L1/yL5hbW&#xA;9DSWY1vLc+jcnxIFQ/8Ash+Nc3WGfEGelzccN+YRPmzXP0Nok12lPrDUitgenqN0P0AE4M+Tgjbu&#xA;OzdJ+YzCJ+nmfc+Tvze843MEZ0iJ2N3fr615cFvi9NmI4161cg8vb55rsUbPEXp+1tV4cRihtY+z&#xA;ueP0IoelehzJeacCQQQaEbg4pe+flH54vrqyinMxOraY4WR2NTJGR8LN48hVW8fpzFlcJWHqdFkj&#xA;qsBx5NzyP6C+o9K1GHUdOt76HZLhA/HrQ91+g7ZtoS4gC8VqcBxZDA84ljf5h6/LY2MdhbNxnvAf&#xA;UcdViGx/4I7ffmVp8dmz0dL2nqTCPCOcvueOa7qzWEKrEAZ5a8SeigdT/TJazU+ENvqLi9k9nDUS&#xA;Jl9EftYtJqV/I5d7iQk/5RA+4HNJLPMmzIvXw0WGIoQj8ky0nX7mKdIrlzJC5Aq25Wvep3zL0utl&#xA;GQEjcXWdo9kY5wMsY4Zju5F6J5U16XR9VjlLH6rKQl0nYoT9r5r1zcZcfEHl9HqDinfQ83sgNdx0&#xA;zWvVPLPzQ8xyz3/6Ggci2tqNc0/blIqAfZQfv+WaTtHOTLgHIPXdg6IRh4p+qXL3fteAee31nUtZ&#xA;/RdlBPcQ20au0MCNJVnFebBAe2wrkdLECN97HtXNKWTg6BhUsMsMhjlRo5F2ZHBVgfcHMt1Ke+UN&#xA;Jv5db0+49J4rb1eSzuh4MY15lVYihJA+jrlOeQEC5mggZZo+/wC59Lflf5jlt9Q/Q07k211VrcH9&#xA;iUCpA9nA+/IdnZyJcB5Fze3dEJQ8UfVHn5j9j1TN28g851/VX1G/dwf3EZKQL24jv/suucN2jqzn&#xA;yE/wjl+PN6fSacY4V1PN8u/mF+aus63qVxa6bdSWujxOY4EhcoZQpp6kjLRm5dQtaAdq75udH2fD&#xA;HEGQuTh59SZGhyYfpWoa+t/CNMuLr66zcYVt3k9Qk9l4HlmdPHAjcCmiMpXs9/8Ayn89ahr0F3pO&#xA;simtaWQJWYcWdORQ81AFHRhRqe3vnN9o6MYiJR+mTs9NmMtjzD3jyfqz3Vs9pM3KW3A4E9TGdv8A&#xA;hc3fYusOSBhLnH7v2Or7S04hLiHI/eyHN26x2KuxVjP5jyvH5QveJpzMSE+xkWuVZz6S4usP7svI&#xA;dFtJbrUoo4qclq5r4IK0+npmqz/QXE7LxmWohXQ38noAkle99BgDbr9lTBJ2X/fpPDr7ZicL3FtX&#xA;N06xwzW1FEw5EehLKWBoRUxfZ69xjwoYv50sZY7mO6NOEnwUH8wAJPyNcu021vN+0GM3CXSqT/8A&#xA;J6WQXWpxf7rZInPhVSwH/Es2mm5l1vZ53IR35tyuLfTIh9h3lZvCqhAP+JHK9cdg937NRHFM9dv0&#xA;vl3zPoFxrn5rQaYAQlz6BZvCFE5SMK+AVsojLhha9qQJ1JHuZxov5feU7ptb0u4trdrKC5rGsV08&#xA;s1tIw6AmKIpyTjUc3FRQ9MollkKLjxxRNhK9a/Kny82pWPl61CwStFJLFfvcg3TIrVblbiJUkVC1&#xA;B8asR3ouTjnNWxlhF0lf5c6Fb6V5w1+w5C6fTqQR3ZUoftEN8NSBWn4bZPLK4guz7FgBkl5Pqb8s&#xA;pXfywqt0jnkVPkaN+tjmboz6HVdvxA1PviGLfmPI7eZGVq0SGNVr4btt9Jzc6b6XgO1D+9+AebeY&#xA;rOaXUbRmgnlt5AIlMKqaycieIZ2RAdx1OartSXrH9X9b0Hs6P3J/r/oCr5e1HyZFprXdxot9fr6b&#xA;XYuAbeaP0Y2KErxmQbMCCKHNVLivm9CCFLXNUj1++ltLHQDZ6jHd/VWeKWOZi0cTMY5EjP7oqi12&#xA;qNiK7Yw25lBN9GQkEGh652L5eQ9w0ORpNE0+RzVntoWY+5jBOauf1F67Tm8cT/RH3PDfMEjy69qM&#xA;jmrNczE/8jDnKZzc5e8vpujiBhgB/NH3LraDUtC0XXtSWSSwlMts5uY7Q3kjw+igCxRckDEPJudw&#xA;N/mL8Y2AdBrZg5ZEM5aJ5LL0Wkjkv44ARcSQ8lEjKQJDFVTQsteAYeFci0PP7i31zX9N0DUJppL8&#xA;xT3kxnazawKIsLRhZImeWhLBuJqK1GTyAAEBv0U6yxJ/HRV0B3j13TnQ0ZbmEg/89BmPgNTj7w7/&#xA;AFgBwzB/mn7nu2puyabduv2lhkYfMKTnQ6qVYpkfzT9z57gF5IjzDyTWWZdHvmU0ZbeUgjsQhzgs&#xA;X1D3vVS5F856J+WMlzZ6NqN9qFtFaaxKIoIBIyTMSaBVYxyLzND1FK7V3zsJZqJAHJ08cV0T1ewx&#xA;6F5a8jaHcX2l2tvG8IUT3d07BiGYKecqpK/Uj4VWlcxOKUzRcrhEBskug2D2X5z3FwqpEuraT9ak&#xA;jjbmnJmjD8WotR6kda0Fcxu0DeAeUv1pwisvvD2zyc7LrSAdHR1b5Ur+sZjdiyI1A8wV7SF4viz3&#xA;OyeddirsVSzzPpbapoF7YpvJLH+6Hi6EOg/4JRkMkbiQ1Z4cUCHg9vcXVldCWImK4iJG43B6EEHN&#xA;YRexdHiyyxy4ompB6BpeuRahZK8BQ3oA9S3duHxD7VNmNPA0zEnCi9rotdDPEb+rqFZLr6nATeiK&#xA;1t4lCxD1C5oop3VfopXI1fJysuaGMXI0GC65rU+p3RYki2Qn0I9hQeJp3OZcIcIeK1+tlnn/AERy&#xA;D0X8p9JkttJuNQkFDeuBFX/fcVRX6WY/dmw08aFuRoMdRMu9GfmZpUl5oIuYhyksX9Rh39Nhxf7t&#xA;jkdXC433PV9gakY8/CeUxXx6PnLzbe2mh+cPLnmKXkBE8ltdsASBA6leR2p8PqsffNfAcUSHc9sR&#xA;AlCfwenT/VPQMsKckuyrtPAnPlsOLnhu3wqADvtmK6917e6fZ2cmrXoWCO1jdmmkADrHUFgD1+Li&#xA;Nu+3fEAnYKSBu84/LyBZ7K+11uX1rW7uW5lRgRxXm3BRXr9omo8cysnd3O57IxAYzPrIvprydpcm&#xA;meXbS2lBWcqZZlOxDSHlQ/6oNM2mCHDAB5HtTUDNnlIcuQ+DFPzP0x1u7bUlH7uRPRkI7MpJWvzB&#xA;/DNlpZbU8l2ti9Qn8GIWxsp4/wBH6igk0+Vw7A1BjkXdJEZSGVlIG4OU6/SeJHij9Y/FMux+0vAn&#xA;wy/u5Hfy8/1pzF5T0K0ikW2097uK6iMMzNMZQ8TqyshM8hKoQ5+xnMSkb32e7jwkWORY95p/QXlV&#xA;1k0pSdckr6bTSy3BgRhR3AmeQKzD4QetCcshcufJEiK25qmnWtzf3NvbRLWe4ZVA8C3WvsO+djxV&#xA;Gy+YjGZZOGO+73S3gS3t4oE+xEiovyUUGawmy9bGPCAB0eL+f9Jk0/zNdErSG7Y3MLdj6hq33PXO&#xA;b1uLgyHz3e+7I1AyaePfHY/D9iY+VvMBuVFldMomQAQN0LgbUNTu2VQk4+u0nD648uqamS7EryLG&#xA;PXZli9IhypjViQ/qAcBs1TvX2zIEY8N38HVWbqtu9K/NPmD6sn1O1ZTPICJm68FIpT/WOY85O10O&#xA;k4jxS5dEs8h6TJqPmW0+GsNqwuJm7ARmq/e1BluixceQeW7k9ragYsEu+Ww+P7HtcsayxPE32XUq&#xA;3yIpnQziJAg9Xg4yo28g80wtZaXq0U/wmC3nDn2WNt/uzgfClDLwHmJPVjIJQ4hyIeUfkv5u0y60&#xA;eDy9eyImoWEjvYJJT96jkt8Bb9tS7Cg349O+dNqIEG+9wdPkFUeb0WSaFLWc6hGlvZFWkuZJ3Xgt&#xA;TuG5AL/DMeuVbtwPe888oeaoPMn5w3F1aktZW2nSW1q5FC6JIrF6f5TMae1Mq7Rhw4P85hgnxZb8&#xA;n0L5Isma4mvWHwIvpofFmoT9w/Xg7BwEyOToNvx+OrT2plqIh8WY51DpHYq7FXYq8/8APP5eSXs0&#xA;mqaQo+sP8VxabDme7oenI9x3+eY2XDe4dfqtJxHijzfPGt+cfMGlebhZANp62koVkdCknJhsz8hU&#xA;UJ6ffhjp4mG/Ny9HpI4iJHeX3IPWfzQ8zXtxZ3Us6SSBW5whR6ZXlxC0AFD8JO2HHpIAEOVq8ccw&#xA;HFze2eR/Iepa3FbahqUL2Ng6rI0bgrK9d+Kg0IX/ACiPllMMBJ35OljoDxkH6R9r2SGGKCFIYUEc&#xA;UahI0XYBQKADM0B2gFCgudFdGRwGRgQyncEHqDiyBINh5H59/K5TFM8FqNQ0lz6j2hXm8VDXZdyw&#xA;HYjfx8c1uXTSibjyeu0fbGLNDgz8/sP7fx5MHh8teXz5Qv3nvtU0bSdHjDx/o+WXl+9kpxcEv8Pw&#xA;7cht28DHFi4rJ5+5wddq8W0McaHfarrXk/R4tPsdIMl/rem30UN1btfNLJOzSA0+EEMNwaBRgy4j&#xA;GW3c26DV4JQ4csevPn/Z8HpPkP8ALb6iLa51GIQxWqqtnYH4iAgAQyVr9kDYdfHLsGmN8Uk9pdsR&#xA;4PCw8qq/LuH63o+Z7zCH1HT7XULOWzuk5wyijDoQeoIPiDkoyINhry4oziYy5F5L5m8p6loYmuGR&#xA;riwjDOLiMVoqgn4wPsmn0ZmjUx4ST0DoJdmZPEEI78UgAfea3ec2/wCYnmCzF3HBwCXcfp24/wB8&#xA;vUn1BsanjUfOhzlNRq5ZpcR6PrGi9ncGmgIRs95J5/q+CO8t2Vz5quRyt3n1G3KlzENnU9C9dhuN&#xA;ztm20eSOo3ntKFfEPJdu6HJ2eRHBcseW9juYnrR+PV7l5P8AJy6ODd3ZEmoOKCm6xqeoXxJ7nM3N&#xA;m4thydNodD4Xql9X3Moyh2KTeafLNpr+n/V5T6dxHVracCpRqd/FT3GY+p04yxo83O0Gulp58Q3B&#xA;5h4D57fVPJ86297p8rs9fSuQCLdqfyy0oTv06+NMxdF2JPMTxSEQPiS7btP2rxaeIMISmT8APee/&#xA;8Wxk/nP5t/Rn6O9GAfFT6xRufp1+x9rp79affm9/0P4e+XLv+14v/RTn4uOoXxXy6dzJfIs2p+b7&#xA;k21nYSpIu8twQTbr/rS0op9vuzR63sOeIjhkJA/AvZ9me1eLURPHCUCPiD7j3/i3v/lbyxaaBYeh&#xA;EfUuJKNczkULsOw8FHYZk6bTjFGhzdVr9dLUTs7RHIJzmQ4LFfzA8pS65oWoJYADUprWaGJSQqyF&#xA;4yqqSehqeuazW9nDLITjtMV8XO0usOMGJ+k/Y+TPKP5Q3bT68/m6KbSm0OGJ47CUGN7mWdyiBG/a&#xA;jHElmQ+G+WSNe9lfc9g83+UPJ3mKz8saVdzmC21IepBLC55WqmIRoDzJDUmqp5V+z1rkI44xN39X&#xA;4+9Ms0pCq5fj7mFfkZ+Vfm638/X00toyaLZfWbGTVnHCGUpJxDW/IgyhjH1Wo8TlWp0h1EREHa+b&#xA;OGoGI2efc+rLKzgs7ZLeBeMaCg8Se5Puc2WDDHFARjyDr8uQzkZHmrZa1uxV2KuxV2KoLU9D0TVV&#xA;VNU0+2v0T7C3UMcwFfAOGpiqGsfKPlPT7hbiw0WwtLhfszQWsMTj5Mig4rabYq7FXYq7FULd6TpV&#xA;4sqXdlBcpcKEnWWJHDqOgcMDyA98HCGXEe9UgsbK3Nbe3jhIURgxoq/Av2V2A2HYYgBBkSrYUOxV&#xA;2KuxVLJvK3lmeUyz6RZSyk1Mj28TMT41K1yBxxPQN0dRkiKEpD4lG2lnZ2cIhtII7eEbiKJFRa/6&#xA;qgDJAAcmqUiTZ3VsKHYq7FVk0MM8TwzRrLDICskbgMrA9QQdiMVSj/BHkvnz/QGm8+vL6pBXx68M&#xA;lxy72PBHuTeCCC3hSGCNYoYxRI0UKqjwAGwyLJfirsVdiqjeWNlew+jeW8dzDUH0pkWRajoeLAjA&#xA;Yg80gkckGvlry4rIy6VZhov7si3iBXevw/Dtua5Hw49wTxy70yybF2KuxV2KuxV2KuJABJNANyTi&#xA;rHdR/MDytYu0b3fryL9pYFMg/wCCHwfjmJPW44mrs+Ts8PZGomL4eEee37ULZ/mj5QuZAhuHhJNK&#xA;yIaf8IXx/OQ62PeFPZWU/SYzPlIMntbu1u4FntZknhf7MkbBlP0jMmMhIWDYdfkxygakKKrkmDsV&#xA;WTTRQxtLM6xxruzsQAPmThAvkiUgBZSW4866BCxVZXmI6mNCR97ccuGmmXElr8Q62vtPOGg3LBPX&#xA;MLHoJVKj/gt1/HBLTzHRMNdil1r3pyrKyhlIKncEbgjKXLBbxV2KoHWNd0fRrb6zql5FZwnZWlYA&#xA;sR2VerH2AxbcWCeQ1AElhdx+evkKKThHJc3C/wC/I4SF/wCShRvwwW7KPYmoI6D4p1oP5meS9cmW&#xA;3stRRbp9lt5w0Lk+C8wFY+yk4242fs7NiFyjt5bsowuC7FXYqh7rULO1/v5Qh7L1b7hvmNqNZiw/&#xA;XKm3HgnP6Qgv8S6Zyp8dP5uO368wP5c09/xfJyPyGTyRtrqFndf3EoZupXo33HfM/T6zFm+iV/e4&#xA;+TBOH1BEZktTsVdirF9f/M3yVoUzW97qSNdIaNbwBpnBHZuAIU+zEZfj0058g4WbtDDjNGW/lukl&#xA;t+e/kGWThJJdW6/78kgJX/kmXb8MtOhyeTjx7ZwHvHwZpo+vaNrVsbnSryK8hFAzRMCVJ7MvVT7E&#xA;ZjTxyiaIp2GLNDILibR+QbXYq7FXYq7FXjP5k/mJJOlxDayFNKt6qeBoZ26VP+TXoPp+Wq4parMM&#xA;UDUT+LelGLH2dppanKLmBsPM8h7+8vFL7Uby+mP1qUgOKpCp+BaHoV6H6c7HS6HFgFQHx6/N8s7R&#xA;7Z1OskTlka/m/wAI+H4KHQNG44n05P2GXZT9GZZAIoutjIxNg0XoX5c+e9W066ISQs8dDLCx+GVB&#xA;1De4rs3XOS7W0v5WQy4toS5jpb6X7Ndo/wAo45afUG8kBcZda/Z9v2vozSdUtdU0+G+tTWGZagHq&#xA;p6FT7g7ZLFkE4iQ6tWowSxTMJcwrXd1DaW0lzO3GKJSzH2Hh75bGJJoOPOYiCTyDyfzb5v8AUjlv&#xA;9Ql9Gyh/uoRuBXYAD9pj/ntmxjGOONunxwza3MMcBZPIdB5l5Prv5j3t9by2tlD9Uik+H1uRMvGv&#xA;YigWuYmTVGQobPddm+yeLBMTyS45DpXp/bTFrLUb6yuBcWs7wzA15KTv8/H6cxoyINh6bUaTFmhw&#xA;ZIiUX0b5J823drbWbXZra3McbzR1qI2dQSU9gT0zZTxccb/ifIvG/L55YwbgJEfI83qCsrKGU1Ui&#xA;oI6EHNe7cFj/AJ784WvlTQJdRlAkuGPpWVuf92SsCRX/ACVpVvb3wFzNDpDnycI5dfc+bZrnX/OG&#xA;uNNe3DT3L1Z5H+xEgPRVGyr4AZAl66csWkxbCh95ZBD5A0tUpLPNI9KFlKqPmBRv15DjdLPtvKTs&#xA;IgJP5g8nvp9u13aSNNAn94jAc1HjUdR9GSEnYaHtUZZcEhUnoP5O/mfdvdw+W9bmMyS0TTbqQ1cO&#xA;OkLsftBv2CenTuKTBcTtbs0AHLAe8fp/W9qyTzSVa5qxs4xFCf8ASJBUH+VfH+maftXtHwI8MfrP&#xA;2BzdHpvENn6Q+aPzS/Pa4tL/APR3lW5SS4hd11C+kj9Qc1IAWMv8Lb15NT5ZqtH2bx+vLe/n97sM&#xA;mbh2i82/5XJ+Y51CK9fWJGaEkiDhGsLAmpV40VVYb9982P8AJ2Cq4Wnx53zev/lF+clx5iuJNN12&#xA;S3ttVVl+oSxVjM9QSVCkn4149jvXp46nXaA4anjuvucjFl49pPoHQtWN5GYpj/pEYrXpyXx/rm67&#xA;J7R8ePDL6x9odbrNN4ZsfSU1zcOE8X/N/wDM28F+/lbQ5/Q4kR6jeq3FubdYVYfZC1+M/R2Ndjps&#xA;AjHxJC+tOg7R10pT8HGa3on8fawqy8rabAgM6/WJf2mevGvso/jnNart7PkPoPBHy5/N6LR+zmnx&#xA;D1jjl58vl+tFvomkuvE2kYB8BxP3ihzDj2pqYmxOX3udLsjSyFHHH5V9yTTS6h5S1W31PRbp7eRi&#xA;aLWootCVYdHQ+BzqeytedXAxyD1ReR7X7P8AyM45MRIjLp3frD6I8hec7TzZoMeoRqIrqM+le2wN&#xA;fTlArt34sN1/qMhnwnHKnZaLVjPDiHPqyPKXLdirsVSPzvfvY+V7+aM8ZGQRIR1/esEJHyDZjayf&#xA;DiJdh2XhGTURB5Xfy3fO3miJ5NIkK1PpsshUd6H+u+YfYOQR1IvqCHbe2WCU+z5GP8JiT7uX6bSe&#xA;L8vdd1LTY3t72GwuJaSxrMCZHUGvKg+yDTwObvtHtgRlwY+nM/o/W8P2N7P8cfEzDmNon7z+j5oq&#xA;/wDIGu2tuGZ4brcCsTFGJ8Qr03r2BOW6TtzHPafpP2ONr/ZnNjN4vXHu6/t/GyG8rWtyuqytKhja&#xA;BCk6sCCHqOIod9xU5V7QZ4+AADfEdvcHZew+kn+clIggQib955D7/k95/KK/dre/sGNVjZJox/rg&#xA;q/8AxEZpOy57GL13tFhAlGffYTr8wLto9Pt7ZTQTyFm9xGOn3sM3+ljuS8R2lOogd7wT81J5SNNt&#xA;VqUcyOVG9WHFV29uR+/DrTyD0fsTiH72fX0j7yf0JJ5b/L7WPMMUpsri1WeCQRz2kswE8a0+3JGv&#xA;J0FdhUVOaqeeMS9hk7QxQlV37mQ3P5R2NnJdWs+v28mpx2klxaaZHxW4kZIy1eDMW4cl6henhlY1&#xA;N9HGHaoJAA5lP/JrSN5Y08yVLenQV/lDEL+GdDp/oD5p7QADW5K/nfoF/a9l8nXbXGgwczVoS0RP&#xA;sp+H/hSMwtRGpuRoZ8WIeWzxn8/9VmuPNVrp1SILK2DKvb1JmJZv+BVRmOXt+wsQGIy6yP3JH+Wy&#xA;wma9aZljjX0jJK5ChYxzLkk9AAKnKM0qjbHtoWcY9/6HodlZaRqsLXelXqT2xJTlGQ4Vx1BPX6D8&#xA;8wBqpDYh1Z0oPIpNqI0+az1GC3vYLt7RHjv4onVmiYhlo469QR8wR2zJx5xI1yYQwyhOJHePveSQ&#xA;zSwzJNExSWNg8bjqGU1BHyOZj2hAIovsHRL/APSOjWGoUp9ctorinh6qB/45N88zY+Cco9xIeWfn&#xA;H5qbRPLWtakkjxXJDW1lJGAWWV/3cbb7Dj9qv8c4yYOo1hvlxfYHc4/RhHu+98cxxz3NwFQGSaVi&#xA;fmTuTnSbAOJzZDYeRdRnCvcypbxstRT941e2wov/AA2Uyzgcm2OEnmhLmO/8s65b3en3BEtuyzWl&#xA;0oB+JT3qOJ3G48MlQyRII5sZAxOz65/K3zZ+n9E0bWwCstwqx3Y48R6yn0puIqfh5glfbOcwxOn1&#xA;YA/nfYXJy/vMR9z0rWb8ado99qBFRZ28twQf+KkL/wAM7iEeKQHe87lnwQMu4Evj2S6nkumupW9S&#xA;d5DK7tuWcnkSfmc6KUAY8PR4SOQiXF1u2ZeVvN/ki00jT/8AE+vLLrFzza7iUpxhrIyIsgiUcCFA&#xA;qvXuds87yaX1Ghs+twyihZ3T7UvN35U6HbrdXGtQajycIsFrNHcvU1NSkBqBt1bbK46YnozOSI6s&#xA;B85ajo2oeZFuNCvlvdJksLaZFjfmsMsrS8kYVJSQrGpZW+IZ03s/j4ePZ5D2rlcYV5s4/wCcf9Xk&#xA;tvNlzpxb9xqFsxKV/wB2Qnkp+hS+bbtCFwvudN2JlrKY9JD7n0JmnepdirsVY95/tHufKV+qAlo1&#xA;WWg8I3DN/wAKDmJrY3iLsuyMgjqY312+YeHXFulzaXUDGnqQSqtDQ8jGab/PNBiNSBez12+GQq7C&#xA;K0Gxt9SutL8y28dmbeawXk3oI90JyqrtcfaARKoV+f0ZMjVh5yIuiidd0FNftdNeSK1cxSxzTC5h&#xA;Ew9FgDKkdT8LNtvgjLhtMo2lFtc2l7eaxfQOHDag0CMCCCtvbwxmlO3qB6ZDPdAHudp2VznQ683p&#xA;35Q2j11G8I+D93Ch8Tuzfd8OZ3ZcfqLge0eQeiPvKd/mHbs1paXAHwxOyN/swD/xpnRaQ7kPCdpx&#xA;9ILxvz95fOqQWMgcxrFMIp5VFSkM5VWkp34EA5LW4yY2OjsvZbXRxTyYpGhkjt7xf3glF6R+WutW&#xA;2vTXsiWmjQyTLIj6UywOSIfR9GJUhi4xNvKyszbgDf4mbmjLZ3ghuoXv5VapLrFzM4srnT5Y7iIa&#xA;pcFZ7hY5ZjL6pLwmT6zEn7tGEtBQN4q0oGyAObGVQBlLkE/0+zSysLe0j3SCNYwfHiKV+nOthHhA&#xA;Dwer1BzZZZD/ABSJ+b1DyTbtFoMTNt6zvIB7V4j/AIjmv1JubttBGsQ83i359afLb+dEuiv7q9tY&#xA;2V6bFoyUYfMAD78xi952HkBw13FR/KrXdOgeTSJouN5cyNJbXAoKn06emSf9U8fnmBrMciLHJv1+&#xA;AyqfczrSLc6NYWenXGpyXbwc3ubi9kUzMjlmBZjTYMaD2Ga6W5dXVeaD1Se28s2urajqNzc38F9c&#xA;pLBaTMrKjcVUQwg0onwcj7dq9bcUDMgDZsw6fxDQP7HiDHm5KrTkdlHv2Gbp6F9e+XLGSw8vaXYy&#xA;/wB5aWkED/60cSqf1ZN8+1ExPJKQ6yJ+15z+Z3lRvMWh6xofqGKa4q1u4PEeqjerFyNG+EsBy26Z&#xA;w+SZwaok9JH5H9jusY48Q9z5r0Pytq+my6ppWpWgtNQiIWOWdAyVod0c/C4Hwnb2zfHNGdGJsNWL&#xA;Gdx1T2CN4gluyqUWMcmVeKluhoBtvlZbQEtvPJms6tZ2el2Nul3fy3H99CnCKNWDHlKVHFBxUDfJ&#xA;HPHHcpGhTCeI0B1fQv5WeUD5a0TStF5CS5jYSXTqSVMrNzk41p8I7bZpI5DqNVEj+cPkGUxwYj7n&#xA;pfmKxfUPL+p2Ef27u0ngSnjLGyD9ed1jlUge4vN54cWOUe8EPkfSrqOx1a0up4vVjtp45JYT1IRg&#xA;SN++3fN9nxmeOUQaJBDxOlyjHljOQsRkDXuL1bStCS7iuNT8qawNP0rUpWuLm2kgeVorgBUkeL99&#xA;EqE8AaSI613GxzhNRililwTHqD6lpNTDPDjxn0lEQeUkjFp/h7VktZ7W1WzIdWuUltoWYwmQRS28&#xA;nNPUf4g/7RqDlPH3hyeGuTFPOceg6Fpd1oqM17r9/Ml3qV+ygVcu0gNKnjQSFUUdFO5zfdi6bIZj&#xA;LyhuPe8p7Sa3EMZwc8ho+78fcivyF0+S487m6Cn07K2ldm7BpKRqPp5H7s3evlWOu8vPdjQvNfcH&#xA;0XmmesdirsVakRJEaN1DI4Ksp3BB2IOAi0gkGw8Q84eVLnQr9l4l9PmJNrN1FOvBv8ofj1znNVpj&#xA;il/R6Pe9ndoR1EP6Y5j9PufOet+XvMOiXskCwSzaaJS0IUPJA4pX4lFRXj1rvmdiyRmPN0Gq0s8M&#xA;jY9N/BCWVv5ivpki0qzkgEg4/wCiq8alZB+3ITUqR/M1PDJSMYiyWnHinkNRD2vyH5UvoNNsNEto&#xA;/WvSCZePTm5LOSf5VrSvgM1sry5PT1eoxcOlwDjNVz976J8uaHDoukQ2EZ5MvxTSfzyN9pv4D2zo&#xA;NPhGOAi8TrdUc+UzPw9yJ1PT4dQsZbSXZZBQN3VhurfQcyIT4TbgZcYnExLyzUdOubC5e1uk4uv/&#xA;AALL4jxBzawmJCw85kxyxyo8030o3E8Po3qJJbcfgEgBJ8Nj2+ecxr9RpvEMYS/eXv3f2+563sn8&#xA;zwDjHorbv/s96jrct4FMSBVs1pT0/DsGzI7Lz6Yz4RK8v45fi3E7Z/M8J2/deX6fxSH0LRLnVbwR&#xA;RgrCpBnl7Kv9T2ze5cggHQafTnJKhy6vUYYY4YUhiXjHGoVFHYAUGasm93o4xAFBiH5o+R/8VaBw&#xA;tgBqlkTLYk0AYkfHESegcAfSB2yJDsuzNb4GTf6Zc/1vmiWK9sLxo5Fktby2ejKapIjqfoIIORIv&#xA;Z7PjiY8Vjhr4U9j/AC+1y91nSLmbVnjklsQrCYRMSsRVj6khUFeq9gMw8vZ+/p2eW1Gvw8XoBp5d&#xA;5n8xaxrN9y1GUH0dooYxxjQHf4VNeviTXMmGnGMUHednajDkj+759b5sx/J78vbjWdVh1u/iKaRZ&#xA;OJIuYIE8yn4QviiMKsfo8aWAON2trxjgYRPrl9gfQ2SeRSPzFpTzAXcC8pFFJUHUgdCPlnP9s9nm&#xA;f7yA3HN2Oh1Ij6TyYZrWl2Gp6fLa3w/cEci9eJQr+2CelM5rDklGQMebtZEAWeTzM/llbXFwt5ba&#xA;javpFeb6g7BPTcEUV0JAL77fI9KZ1MMGcwsxqXdbrB2hpyOISBj39HoXlbR9J03TEGmv60c9JHuS&#xA;QTIenbpTw7ZzWrnMzImKI6dzsMOSE4iUDcT1Z75d0p4h9bnXi7CkSnqAep+nOh7F7PMP3sxueX63&#xA;W67UCXoHxTzOgdc+ePzk/Lu50jVZ9fsIi+kXr85+I/uJnPxBgOiO26nx28K7nR6gSHCeYeV7V0Jx&#xA;yM4/QfsLE/JfmnVdJ1e2sLK4jVNQnjhME4LRlnIUNRfiBp3GY3aWPT5Npn19K5/j3uR2LPV4zeIf&#xA;uzzv6f7fc9b/ADF1a/8ALvlqfU7Ca2UwzJHMzgseMh4CSNRsfjIFTt1zQaXRQErzfT5fjk9Zr9Zm&#xA;MP8ABwDPz/R0t4YDf6rf1XneX13Jtxq7yOx7AdTnYYpYxAcNcAfO88MpyETB8QnrzfS/5V+RT5U0&#xA;ErdAHVb4rLekGoXiPgiBGx4VP0k5qNVn8SW3IPVdnaPwIb/Uef6maZiuwdirsVdiqld2dreW7291&#xA;Es0Ego8bgEH78jKIkKO4Z48koS4omiGCyflFYxa5Bqum6ncWnpSrN9XcCVV4tXjEaoVqNvi5YMWK&#xA;OMVEN2o1eTMbmSfu+SGl/J65vUsU1bzHc3htUZJJViWKVuUryfA3J1TZgv2T098nIAiiNmqGWUJc&#xA;USQWbaF5d0rRLUQWEXE0Aknf4pZKd3bv+rKseGEPpFNuo1eTMbmbTLLXGdiqF1DTLHUIfSu4hIo+&#xA;yejKfFSNxkozMeTXkxRmKkLSp/KcfL93clU7BkDH7wV/VnO5ewIk3GZHv3/U7WHaMhzAbj8pWxqt&#xA;xM0sZ2KKvCvzNWy7SdixwzE+ImUTfd+tq1GsOSJiQOEpza2ltaQrBbRrFEvRVFPpzdykSbLgwgIi&#xA;gKCrgZOxVjXm38vPLHmheWo25S7AAW+tyI5wB2LEMGH+sD7YhvhqckYGAPpPRj+gflHNolpqlra6&#xA;2zQ6lbNa0eCpQMwPI0kAb4eS9uuSMmg0paF+RPlmyu/reqXEurShiwicCKD25ICzNT3entjKVt+H&#xA;USxG4GiRT0eGGGGJIYUWKKMBY40AVVUbAADYDItJJJsr8UOxVI/MXlHT9asJ7Vne1a4FGmhpXqCa&#xA;ggjfvmH+QxeKMoFSH45J1EpZcMsRJ4ZfNgP/ACoKL1K/ptvT/l+rDl/wXq/wzY+Ka83m/wDQ9G/r&#xA;2937f0M58q+SNL8vWS20Ukl0ysXEk1NiaV4qAABtXvmDPSY55PEkLm7/AEcDp8XhRJ4bZDmS2OxV&#xA;bNDFNE8MyLJFIpWSNwGVlIoQQdiDiDSCARRea6h+QvlV/Men69pM0umXFjeQ3htQPWt39Jw5QIxV&#xA;l5lf5qDsMrliBlxdW2GQxjwj6apk/n/yTB5w8tyaHLcfU45WjLTpGHYLHIr8VBZacuGSnHiFMYS4&#xA;Tal5L/LPyp5RUtpkDSXbDi17csJJuPSikBVQePECveuMI8IockTPHLiPMMqySHYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FU&#xA;j8weZotN/cQqJbwipB+ygPQtT9WAlxs+oENhzYPqHmi9lkIuLuQn/faEqo+haDMfJqIx2LDFpc+Y&#xA;WNh8kPb+Y5o5AY7uWNvHkwH075COqifJsn2bqICwb9xZdofnJ2dYNSIKtstyABSv8wG1PcZlCTTi&#xA;1RupsuBBFR0yTnOxV5/5t/Mk280ljovFpIyVlvGAZQw6iMHY08TtkTJ32h7I4hxZPl+t4V5+/NLz&#xA;Xb6p9Utr+QuqhpJmcsQT+yq14qPozHyZCDQcnUzjiPBCMR8Ff8ufzV85T6i9pLfSMVjMqSAkj4WA&#xA;IaM1Q/a8MceQko04hnJjOIPnVPffJ3n+HV5Fsb9Vg1A/3bLtHLTwr9lvb/azIEnA1/ZhxDihvD7m&#xA;Y5J1CleXlrZWst3dyrBbQKXllc0VVG5JJwgEmgxlIRFnYB4F57/PnVLmWS30CUabpqkqLxgPXl9x&#xA;yr6YPYD4vftmzhpceMcWQvPZe0c2eXBgB/T+x5PdfmNrU0xke+vZmJHKSSeQsR36scxZdqYwajDZ&#xA;zodgZyLnk9Xx+G/7GR+Vvzm80aZcRrbapNMn/LHelpoiB+z8RJX/AGLDLoajT5jX0yPwcaek1ulB&#xA;lfHEfH7Ob6L/AC//ADE0rzfZOYl+ralbgG6smNSAduaHbklfu79q4+o05xnydhotdHONtpDmGWZj&#xA;ucgda1mx0ewe9vX4xrsqjdnY9FUdycqy5Y448RcjS6aeaYhDm8m1/wDMfXb4uYp/0dZrUhYm4sFH&#xA;d5Nj91Bmkza7JM7bDyew0vY2DELkOI955fJhX/KxNK9fj/iFPVrXl9Z71/m5U/HKeHLz9Tk+LpeV&#xA;w+xmnl/8x9csTGz3H6RsmoeMrcyVPdJdz+sZdh12SB33Hm42p7HwZhcRwnvHL5cnrWi61Y6xYJe2&#xA;b8o22dD9pGHVWHYjN3hzRyRsPH6rSzwTMJ8/vR2WuOxvzp5407yxaKZF+sX8wP1a0U0JA/bc/sr+&#xA;vIylTnaLQyznbaI5l49fec/PHmO5aKO5mAbcWtnyjQL78dyP9YnMeeWuZemxaHBhHIe8qLWHn2zH&#xA;1gG9jKb845WLD/gGJyoZ4nq2fuJbVH5Mh8qfm/q1lMlvrpN7ZEhTPQCaMeO1OY+e/vmRHJ3uBq+x&#xA;4SF4/TL7P2PZbS7tru2iuraQS28yh4pF3DKdwcveYnAxJB2IVcWLsVdiqH1G8FnYz3R39JCQPE9A&#xA;PvxYZJ8MSXll3cSv61xIxaRuTsx7nrlUzQJdVijx5AD/ABEKEfla9liSX1kBkAYg1qK7+GaMze3E&#xA;aFBcPKN5XeeMD25H+GPGmmreGWASW8pq0LlKjuKAj9ebTSSuDyva+MRzbdRb0PydqL3WmmCQ8pLU&#xA;hanrwO6/qIzMC6TJxRruQ/5ha1Jpnl91hbjcXjegjDqqkEuw/wBiKfTjIu87L04yZd+Ud3z95y1W&#xA;fTdAnngbhO5WKJ+6lzuR7ha0yiZoPS6vKYYyRzeTWWnanqVx6VlbTXlw25SFGlc1PUhQTmITXN5/&#xA;cp3q/lDzd5RisNVvoTZtcM3oFWDMjKAeMnGoHIH7JO++CGQE7MxxQIIeoaHqcl3p9nqMdYpZESUF&#xA;TQq432Ps3TM6JsW9FjkMkAT1D6C8s6t+ltDtL5qepIlJqbfvEPF9vmK5aC8ZrMHhZTHp+h5Z/wA5&#xA;B+aJ41svLlu5VJl+t3wH7ShisSn25KzEfLNp2fi5yLy3beoIrGPef0PnPVI76+1RbG0jkuZTQRW0&#xA;Ks7liKmiqCSaeGaztXMTkMb9Idz7P6eMcAnXqladR/k/+YskXqLpDAHhRWlgRvjFejOKU716ZqPG&#xA;j3vQeGUm1/yh5k8vsv6WsZLZHZkjlNGRinXiykjvtk4zB5MZRI5sv8l+ZrzQ9W0/WreoeIq00Y25&#xA;xttIh9mX+udjH99iF9Q+azP5bUnh5Rl9nc+v4J4riCOeJucUqq8bDurCoP3ZoyKeyiQRYeP/AJka&#xA;3Jf+YJLVW/0aw/dIvbn/ALsb51+H6M57X5uLJXSL3HYmlGPCJfxT3+HR85/mj5pubvVZNHt5Ctja&#xA;ELMqn+8l6nl7J0p45dpMIEeI8y4Pa2rMp+GPpj97BkR3dURSzsQFUCpJOwAAzMdO9E8g3uu+Xtct&#xA;9C1iCe0h1KMS29vcKUKl6lHVW3AcqV+fyzC1WMSjxDmHcdlamUJ8B+mX3voD8udbk0/zBFbFv9Gv&#xA;yIZF7cz/AHbfPlt9OVaDNw5K6Sc/trSjJhMv4ob/AK3sUsscUTyyHjHGpZ2PYKKk50DxAFmg+ZvM&#xA;Gs3Wva5cahMTyuJKRIeiR1oifQMxSbL3WDDHDjER0D03yrpdtp+jxJCBzk+KaWm7tUjf5ds1eoJM&#xA;y6iWoOX1FOMoYvN/zD0i3t75b2BQhmA9ZBsCx5fF9PHfNlpSTFztHqSZeGe62Ufkn5hlf63oMzFk&#xA;jX6zaV/ZFQsij6WBA+eZ2M9HA7c04FZB7j+h6tlrzzsVdiqT+buX6BuKdKpy+XMYC4+q/uy8/itx&#xA;cMYa0LqwHz4mmY2olUC43Z2MTzxB9/y3bby7IfONvrHoW7W6WrI87NKblZ9kUIK+mI/TLV265p+L&#xA;009jW9qup6Daa42m3s4cNbcZkC3FzCAW4t9mCSJWO3VgfxxEqSQF+o2oilkmrvM9QPYIo/WDmfoZ&#xA;GiHn+28YuMuvJPvIQf17wj7HBK/Opp/HNjF12i5lLfzeEno6WR/dhpg3zISn8cZPX9hVc/h+l5pL&#xA;5UsvM6Lpt3cG3T1I5QRSrBXAdFJ/aKFqe+YmpkRGwHba6PFD4sp8o6FF5fudYjt9P+paYk0aWHC7&#xA;knWZWALOYnYrEwdqbAV96VOsmbp1YhTXmXyx+nddeyv7Z20a4sWBu/rcoCXIYqii05emSobmH49R&#xA;12xjKhYQYE+5ilrpKaRaW+mLKsxtYo45JUNVMnAGTifDnWmbfESYi3daYEYwC9j/ACvD/wCF/i6G&#xA;eTh8qL/GuXx5PNds/wB/8A8c/PYSDz9Lz+ybaD0+v2aH/jaubzQ/3b572zfj/AKX5Z+QZXu/8VG6&#xA;C+pDPBbxoimaKTaMSozhk5U5Ddc5vtuY8Yj3PX+zkT+VBPefvei+WZ9QXSLL9KRXEN9dFi9vcyRT&#xA;SREAniZIlQEELXxFaZp5VezvxySbVPLN95it/MGkaj9ZjtJGVdPnuXhkidiFkE8aRKkiek3w8S1G&#xA;HXeuSEqohiRdvHb/AEttJvZ9ML+obJ2g5j9r0zx5fTTO+0hBxRI5cIfKu0RIaiYlz4i+tPJgkHk/&#xA;QhJX1Bp9rzr1r6CVrmlzfXL3l67Sf3UP6o+54vr4Ya7qIevP61Nyr1r6jVzks/1y95fT9J/cwr+a&#xA;PueWeUfy3TzOde1u4ilvLq21J7dNOjCFSS3OR5edxZVWjUAWZTXx6ZsTk4QAO55PLEnJInnxF7do&#xA;Hl/R9E0Ey6Zo9tbazHaCZkitQkpkdW4qVMsjn4lI4+uf9bvmPKRJ3OygUHm35tW2sXF/5M1m/tDb&#xA;akL82sqFI46rzjkjB9K4u1pXn/uz6BlkK4ZDyZ4b8WB68Q+9l2ghjrmnBa8vrMNKda+oMwsP1x94&#xA;ep1f9zP+qfue2+aBIfLOriP+8NlccKfzek1M6iXJ8/0teLC/5w+982abA1xqNrApCtNNHGGPQFmA&#xA;qcxJGhb3OX6T7npmp6frsdzosVhJObUTMmovDLDEqRcS4dkkjlZ6sAtFI/iNZKYkSXnIQMQAiPNM&#xA;V5eeX7wafDNPeRVMFvb3T2TyOjU4+vGVZR9O+Qjsd2yQ2STzvpMkfl+CX1GparDGyzO00hpUfFKx&#xA;q7VbcnrmVpsn8LkaKH76/wCjSC/KASnzrBw+yIZjL/q8f+aqZscfNu7YrwD7w96y95B2KuxVQv7R&#xA;buzmtm2EqFa+B7H6DixnHiBDy+4gmtrh4ZVKSxNRh7jKyHSkGJ8wk8vmnV9Bga1uNJvtYtBUWd1p&#xA;aRzXCp+zHLCzIaoNg68qild+utz6SjY5PT6HtKMwIy+v70Ho3n/WryM08r6xb6owaOMakiW9pGtR&#xA;RjIRESOhIWIt2yuOmMjsRTlajXQxD1c07tkmSBVnlM0+7Sy0oGdiWchaniORNB2zaQgIig8lqMxy&#xA;zMj1eieUdMez031JRxmuTzIPUKPsg/r+nLQ5+lx8MbPVR8+aHJq+gSJApa6tmE8Kjq3EEMo+ak09&#xA;8SHc9m6kYsov6TsXiysyMGU0ZTUHuCMrIewZro2tpqqi2Yvb3iKXZ4wvFqUBajBh37jNTn05hv0d&#xA;VqMHBveyF1/XltopNNgLyXCgpLcSUqA25pQDcg+GW6bT3UjybdNp79R5MXt4JrieOCBDJNKwSNF6&#xA;lmNABmxc+UhEEnkHu/l7Sl0rRrSwFC0KfvCOhdvic/8ABE5YA8Rqs3i5DPveYf8AOQHlSe5tbTzH&#xA;aoXNov1a+A3IiZuUb/JWZgfmM2fZ+WiYnq8z23piQMg6bF5v5D86TaDfpDdSudIlJE0X2gjNSkij&#xA;rtTcDt749p9nDPC4j94Pt8nH7F7WOmnwyP7o8/LzetpdPqXG60u5trm1A/dyK1WRyKHcBx0PQ0Oc&#xA;fPEcZqYIL6Fizwyx4oESHluxvzt5/ttN0w2Wm3iT6w4VGmhoyx0+2x6ryPQL2zadmdlyyT4sgqHn&#xA;1dF2z23DFAwxSvIe7ev2vOvKPl2+81eZrfT0LOZ5PUvJzuViBrLIxPfw8TnV5ZjHC+7k8Rp8Ms+W&#xA;u87n7y+tIoo4o0ijULHGoVFHQKBQAZzxL24FbPIvzL0KWx1xr9F/0W/+MMOglAo6n5/azQ9oYTGf&#xA;F0k9t2HqxkxcB+qH3dP1MV8nC30LXL+4B/0DVikl3FT+7uEqPVSnZw3xj6fbMcZtgD0Z6vs8mRnD&#xA;meYeg+sATfrcW/1RgA89Duik8Vry41qx3/DJWKdT4UuLho8XcwLze1rrOt2VwDW00r1GtY+gaaUB&#xA;Wlav8qiiD5nwpCWXah1dxo9AYyE58xyDJfy10KS/1xL51/0WwPqMx6GWnwKPkfizI7PwmU+LpFq7&#xA;b1Yx4eAfVP7uv6nr8iJIjRuOSOCrKehB2IzfvFg0+afNOgXXl/XbiwkDBY2520vTnETVHB/X75jS&#xA;jRe50moGbGJD4+9kvl3ztF9QMOo3iwTxA1uJyArL/MXagBHevzzFlgBPJ1ut08oEyj9P3I6381ad&#xA;HL8Wt2UgNeMUbx8mb7RNObkmgP2cTpx3OuxzlKVDcsQ80+Y5tWuyscjfUo6emh2DMK/GV+nb2yzH&#xA;jEXodJp/Djv9Rehfkr5blhhudeuEK/WF+r2de8YNZH+RZQB8jmVjHV03bepBIxjpuXqOWugdirsV&#xA;diqUa55ctdTpJX0bldhKBWo8GGAhozacT97cPl+wt4RHZqbe5FCt1QO4p13NV3Hbp7YgMseKMOQY&#xA;1+WNprGoeSbGfzZFM2oymcPa3du0EkVLhwpKkBgWQKant7YeEDYNmUCX1bp5aeT9PhvjctyaFSDF&#xA;btuAR/Me+/QYKcaOliJWn+FynYqwfzf+XMeoSSX+klYbx6tLbsaRyN1qD+yx+75ZExdzou1jjHDP&#xA;eLwu68p/mlp2qvcDS9SjvRVfWtI5JV4n9lXg5rx9q5mcOOUaNU489QZS4idyi/Lfkr8y73WxO+mX&#xA;oMzg3c16GgUqdizGbjyKjpSpyMxDhoV5Nmn1fhzEr26vePKPkS00Mi7uGFzqNCBIB8EYIoQgPf8A&#xA;ysxgGOu7Slm9I2h9/vZThdYsmhhnheGZFlhlUpJG4DKysKEEHYgjCDSCARReP67+QlmNUe70yaRt&#xA;Ncljp4IEiEmtFkbqnt9r55lZO0MohUQDJ0OXsWPFcT6e5X0vyzq+kRSW+lWUtvbE8yhikYs9Apqz&#xA;CtNuuc9qTmyyudk/juczTeJgiY47iClc/wCTUmrjnBA+n3JP72dwViLHckxtRqH/ACM22i12ojQn&#xA;vHz5/j3uDPsvxDYHCXpnkjyHo3lGwaCyBmupqG6vXADyEdtvsqOy5fnzyyHd22j0UMEaHPqWSZQ5&#xA;aF1TS7LVLKSzvYxJBJ27g9mU9iMhkxxmKPJuwZ54piUDRDCNM/K+3tNZaa+cXmlopaFKEOXqKCRV&#xA;6gDw65rcfZwjO5bxd9n7elPFUBw5Ov7GbfovSvq3o/U4fq/Hj6PpLx49acKfwzYeDDuHydF4+Tiv&#xA;iPF33+lhOp/lfb3esLLYuLPTHUNMhDFw9TURq3Yjx6fhmvydnCU7jtF3uDt6UMVTHFk6ftZtpel2&#xA;Wl2UdlZRiOGMfSx7sx7k5sseOMI0OTodRqJ5ZmczZKLybSkPm3ydpfmayEF2DFcRVNtdoKvGT1/1&#xA;lPcZGUbcvR62eCVjl1D5w/MH8sfzVsLiaC2017/SSeMc2nj12kWn7cY/fL7/AA09zhhAD3ubqu05&#xA;5bA9Me5hNj+X35lxXcclr5b1WKdT8DtZzoBXbcugXv3yw0ebgYshhISiaIe6/l1+T/mG4iS686xp&#xA;a8GBWxhcNJINj+9aMlUH+q1f9XKDjFuzl21PgqvX3/jr9j2uGGKCFIYUEcUahI0UUCqooAB7ZY6S&#xA;UiTZ5r8UOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV//9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="xmp.iid:213EC78D59206811822A8F92A716DD05"
    stRef:documentID="xmp.did:213EC78D59206811822A8F92A716DD05"
    stRef:originalDocumentID="uuid:5D20892493BFDB11914A8590D31508C8"
    stRef:renditionClass="proof:pdf"/>
   <xmpMM:History>
    <rdf:Seq>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:15367B94022168118083A697D000D963"
      stEvt:when="2015-04-10T20:20:44-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E73627BCCD2168118083A697D000D963"
      stEvt:when="2015-04-13T20:00:56-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:007134FF642968118083F964DA86D81D"
      stEvt:when="2015-04-13T20:10:31-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:B9BEBAF1672968118083F964DA86D81D"
      stEvt:when="2015-04-13T20:12:24-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:E93627BCCD2168118083A697D000D963"
      stEvt:when="2015-04-13T20:17:06-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01801174072068118083BBBBED5F0CD0"
      stEvt:when="2015-04-13T20:34:23-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F77F117407206811822AE0679C256E31"
      stEvt:when="2015-04-13T21:09:54-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:F87F117407206811822AE0679C256E31"
      stEvt:when="2015-04-13T21:10:47-03:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:02801174072068118083EA55D007C936"
      stEvt:when="2015-04-13T21:13:46-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:06801174072068118083EA55D007C936"
      stEvt:when="2015-04-13T21:14:19-03:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:213EC78D59206811822A8F92A716DD05"
      stEvt:when="2015-05-10T13:27:48-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="converted"
      stEvt:parameters="from application/postscript to application/vnd.adobe.illustrator"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:253EC78D59206811822A8F92A716DD05"
      stEvt:when="2015-05-10T15:33:43-04:00"
      stEvt:softwareAgent="Adobe Illustrator CS6 (Macintosh)"
      stEvt:changed="/"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:FF508D274C20681180839F70521555CB"
      stEvt:when="2015-05-12T17:37:23-04:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
     <rdf:li
      stEvt:action="saved"
      stEvt:instanceID="xmp.iid:01518D274C20681180839F70521555CB"
      stEvt:when="2015-05-12T17:37:54-04:00"
      stEvt:softwareAgent="Adobe Bridge CS6 (Macintosh)"
      stEvt:changed="/metadata"/>
    </rdf:Seq>
   </xmpMM:History>
   <xmpTPg:MaxPageSize
    stDim:w="932.953125"
    stDim:h="814.458984"
    stDim:unit="Points"/>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="0"
         xmpG:green="0"
         xmpG:blue="0"/>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="255"
         xmpG:green="255"
         xmpG:blue="255"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="RGB"
         xmpG:type="PROCESS"
         xmpG:red="35"
         xmpG:green="31"
         xmpG:blue="32"/>
        <rdf:li
         xmpG:swatchName="R=51 G=25 B=7"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="51"
         xmpG:green="24"
         xmpG:blue="7"/>
        <rdf:li
         xmpG:swatchName="R=134 G=91 B=47"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="133"
         xmpG:green="91"
         xmpG:blue="47"/>
        <rdf:li
         xmpG:swatchName="R=255 G=204 B=153"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="204"
         xmpG:blue="153"/>
        <rdf:li
         xmpG:swatchName="R=60 G=49 B=63"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="59"
         xmpG:green="49"
         xmpG:blue="63"/>
        <rdf:li
         xmpG:swatchName="R=84 G=72 B=90"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="84"
         xmpG:green="72"
         xmpG:blue="89"/>
        <rdf:li
         xmpG:swatchName="R=176 G=173 B=178"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="175"
         xmpG:green="172"
         xmpG:blue="177"/>
        <rdf:li
         xmpG:swatchName="R=58 G=30 B=10"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="58"
         xmpG:green="29"
         xmpG:blue="10"/>
        <rdf:li
         xmpG:swatchName="R=204 G=154 B=117"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="204"
         xmpG:green="154"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=186 G=134 B=99"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="186"
         xmpG:green="133"
         xmpG:blue="98"/>
        <rdf:li
         xmpG:swatchName="R=79 G=47 B=25"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="79"
         xmpG:green="47"
         xmpG:blue="24"/>
        <rdf:li
         xmpG:swatchName="R=50 G=24 B=6"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="49"
         xmpG:green="24"
         xmpG:blue="5"/>
        <rdf:li
         xmpG:swatchName="R=95 G=58 B=27"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="94"
         xmpG:green="58"
         xmpG:blue="26"/>
        <rdf:li
         xmpG:swatchName="R=86 G=50 B=23"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="86"
         xmpG:green="49"
         xmpG:blue="22"/>
        <rdf:li
         xmpG:swatchName="R=89 G=119 B=42"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="89"
         xmpG:green="119"
         xmpG:blue="42"/>
        <rdf:li
         xmpG:swatchName="R=70 G=89 B=28"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="70"
         xmpG:green="89"
         xmpG:blue="28"/>
        <rdf:li
         xmpG:swatchName="R=224 G=170 B=121"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="223"
         xmpG:green="170"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=71 G=44 B=24"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="70"
         xmpG:green="43"
         xmpG:blue="24"/>
        <rdf:li
         xmpG:swatchName="R=140 G=116 B=84"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="140"
         xmpG:green="116"
         xmpG:blue="84"/>
        <rdf:li
         xmpG:swatchName="R=173 G=142 B=108"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="172"
         xmpG:green="142"
         xmpG:blue="107"/>
        <rdf:li
         xmpG:swatchName="R=178 G=125 B=86"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="177"
         xmpG:green="124"
         xmpG:blue="86"/>
        <rdf:li
         xmpG:swatchName="R=163 G=110 B=70"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="163"
         xmpG:green="110"
         xmpG:blue="70"/>
        <rdf:li
         xmpG:swatchName="R=107 G=70 B=45"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="107"
         xmpG:green="70"
         xmpG:blue="45"/>
        <rdf:li
         xmpG:swatchName="R=137 G=99 B=73"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="137"
         xmpG:green="98"
         xmpG:blue="73"/>
        <rdf:li
         xmpG:swatchName="R=165 G=121 B=68"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="165"
         xmpG:green="121"
         xmpG:blue="68"/>
        <rdf:li
         xmpG:swatchName="R=193 G=148 B=76"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="193"
         xmpG:green="147"
         xmpG:blue="75"/>
        <rdf:li
         xmpG:swatchName="R=255 G=182 B=159"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="182"
         xmpG:blue="158"/>
        <rdf:li
         xmpG:swatchName="R=198 G=142 B=117"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="198"
         xmpG:green="142"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=255 G=212 B=174"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="212"
         xmpG:blue="174"/>
        <rdf:li
         xmpG:swatchName="R=113 G=163 B=80"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="112"
         xmpG:green="163"
         xmpG:blue="80"/>
        <rdf:li
         xmpG:swatchName="R=216 G=109 B=37"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="216"
         xmpG:green="109"
         xmpG:blue="36"/>
        <rdf:li
         xmpG:swatchName="R=163 G=214 B=133"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="163"
         xmpG:green="214"
         xmpG:blue="133"/>
        <rdf:li
         xmpG:swatchName="R=170 G=83 B=53"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="170"
         xmpG:green="82"
         xmpG:blue="52"/>
        <rdf:li
         xmpG:swatchName="R=214 G=114 B=148"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="214"
         xmpG:green="114"
         xmpG:blue="147"/>
        <rdf:li
         xmpG:swatchName="R=252 G=176 B=149"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="251"
         xmpG:green="175"
         xmpG:blue="149"/>
        <rdf:li
         xmpG:swatchName="R=255 G=156 B=189"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="255"
         xmpG:green="156"
         xmpG:blue="188"/>
        <rdf:li
         xmpG:swatchName="R=221 G=148 B=122"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="221"
         xmpG:green="147"
         xmpG:blue="121"/>
        <rdf:li
         xmpG:swatchName="R=142 G=95 B=53"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="142"
         xmpG:green="94"
         xmpG:blue="52"/>
        <rdf:li
         xmpG:swatchName="R=175 G=103 B=81"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="175"
         xmpG:green="103"
         xmpG:blue="80"/>
        <rdf:li
         xmpG:swatchName="R=45 G=126 B=158"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="45"
         xmpG:green="126"
         xmpG:blue="158"/>
        <rdf:li
         xmpG:swatchName="R=134 G=105 B=93"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="133"
         xmpG:green="105"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=104 G=77 B=68"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="103"
         xmpG:green="77"
         xmpG:blue="68"/>
        <rdf:li
         xmpG:swatchName="R=30 G=94 B=139"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="29"
         xmpG:green="93"
         xmpG:blue="138"/>
        <rdf:li
         xmpG:swatchName="R=236 G=111 B=70"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="235"
         xmpG:green="110"
         xmpG:blue="70"/>
        <rdf:li
         xmpG:swatchName="R=19 G=71 B=104"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="19"
         xmpG:green="70"
         xmpG:blue="103"/>
        <rdf:li
         xmpG:swatchName="R=135 G=198 B=219"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="135"
         xmpG:green="198"
         xmpG:blue="219"/>
        <rdf:li
         xmpG:swatchName="R=156 G=206 B=180"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="156"
         xmpG:green="205"
         xmpG:blue="179"/>
        <rdf:li
         xmpG:swatchName="R=243 G=180 B=62"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="242"
         xmpG:green="179"
         xmpG:blue="61"/>
        <rdf:li
         xmpG:swatchName="R=110 G=187 B=197"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="110"
         xmpG:green="186"
         xmpG:blue="196"/>
        <rdf:li
         xmpG:swatchName="R=198 G=59 B=33"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="198"
         xmpG:green="59"
         xmpG:blue="33"/>
        <rdf:li
         xmpG:swatchName="R=163 G=38 B=22"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="163"
         xmpG:green="38"
         xmpG:blue="22"/>
        <rdf:li
         xmpG:swatchName="R=179 G=54 B=94"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="179"
         xmpG:green="54"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=150 G=34 B=75"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="149"
         xmpG:green="33"
         xmpG:blue="75"/>
        <rdf:li
         xmpG:swatchName="R=221 G=111 B=142"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="221"
         xmpG:green="110"
         xmpG:blue="142"/>
        <rdf:li
         xmpG:swatchName="R=250 G=203 B=76"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="249"
         xmpG:green="202"
         xmpG:blue="75"/>
        <rdf:li
         xmpG:swatchName="R=57 G=159 B=133"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="56"
         xmpG:green="158"
         xmpG:blue="133"/>
        <rdf:li
         xmpG:swatchName="R=245 G=109 B=101"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="244"
         xmpG:green="109"
         xmpG:blue="100"/>
        <rdf:li
         xmpG:swatchName="R=194 G=151 B=109"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="193"
         xmpG:green="151"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=181 G=172 B=158"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="181"
         xmpG:green="172"
         xmpG:blue="158"/>
        <rdf:li
         xmpG:swatchName="R=153 G=130 B=110"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="153"
         xmpG:green="130"
         xmpG:blue="110"/>
        <rdf:li
         xmpG:swatchName="R=215 G=188 B=166"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="214"
         xmpG:green="188"
         xmpG:blue="165"/>
        <rdf:li
         xmpG:swatchName="R=76 G=47 B=25"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="75"
         xmpG:green="47"
         xmpG:blue="24"/>
        <rdf:li
         xmpG:swatchName="R=109 G=74 B=43"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="109"
         xmpG:green="73"
         xmpG:blue="42"/>
        <rdf:li
         xmpG:swatchName="R=124 G=124 B=137"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="124"
         xmpG:green="124"
         xmpG:blue="137"/>
        <rdf:li
         xmpG:swatchName="R=96 G=95 B=109"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="96"
         xmpG:green="94"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=104 G=75 B=117"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="103"
         xmpG:green="75"
         xmpG:blue="117"/>
        <rdf:li
         xmpG:swatchName="R=242 G=186 B=148"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="242"
         xmpG:green="186"
         xmpG:blue="147"/>
        <rdf:li
         xmpG:swatchName="R=244 G=205 B=152"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="244"
         xmpG:green="205"
         xmpG:blue="151"/>
        <rdf:li
         xmpG:swatchName="R=109 G=175 B=109"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="109"
         xmpG:green="175"
         xmpG:blue="109"/>
        <rdf:li
         xmpG:swatchName="R=232 G=172 B=93"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="232"
         xmpG:green="172"
         xmpG:blue="93"/>
        <rdf:li
         xmpG:swatchName="R=198 G=84 B=106"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="198"
         xmpG:green="84"
         xmpG:blue="106"/>
        <rdf:li
         xmpG:swatchName="R=28 G=97 B=140"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="28"
         xmpG:green="97"
         xmpG:blue="140"/>
        <rdf:li
         xmpG:swatchName="R=170 G=33 B=75"
         xmpG:type="PROCESS"
         xmpG:tint="100.000000"
         xmpG:mode="RGB"
         xmpG:red="170"
         xmpG:green="33"
         xmpG:blue="75"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                         
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -814.459 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 814.459 li
932.953 814.459 li
932.953 0 li
cp
clp
932.953 814.459 mo
0 814.459 li
0 0 li
932.953 0 li
932.953 814.459 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
696.974 497.92 mo
696.974 536.604 665.614 567.965 626.929 567.965 cv
588.243 567.965 556.884 536.604 556.884 497.92 cv
556.884 459.234 588.243 427.873 626.929 427.873 cv
665.614 427.873 696.974 459.234 696.974 497.92 cv
cp
.980392 .796078 .298039 rgb
f
613.026 514.117 mo
613.524 513.633 621.235 508.178 621.089 509.963 cv
620.782 513.764 624.278 510.789 626.106 511.594 cv
627.997 512.428 629.396 515.625 631.497 516.855 cv
634.944 518.875 642.815 522.18 646.114 518.252 cv
647.444 522.217 652.853 523.635 655.606 520.303 cv
660.714 523.996 666.581 519.189 665.948 513.543 cv
669.126 517.561 678.673 510.943 674.546 505.059 cv
679.968 505.246 681.397 497.236 676.497 495.547 cv
680.397 492.42 678.044 484.508 672.905 484.372 cv
675.589 481.223 672.679 475.693 668.798 475.345 cv
670.433 472.006 667.622 469.58 664.284 470.008 cv
665.882 466.42 664.868 459.256 655.519 461.598 cv
661.155 452.199 645.083 443.753 637.622 448.195 cv
635.646 439.814 623.706 441.645 621.562 446.555 cv
619.843 443.969 613.669 443.484 614.114 447.624 cv
608.843 442.939 593.194 449.022 598.136 456.486 cv
586.884 456.941 581.692 468.391 586.235 471.67 cv
578.698 470.577 577.116 479.106 580.491 483.984 cv
574.284 483.588 572.157 494.901 577.097 497.701 cv
573.046 504.498 577.868 507.77 580.89 507.111 cv
578.368 511.246 582.815 518.736 588.249 515.379 cv
586.688 523.406 595.327 524.283 596.845 520.715 cv
600.351 528.594 610.116 516.939 613.026 514.117 cv
cp
.2 .098039 .027451 rgb
f
655.37 469.402 mo
649.524 461.117 643.526 460.86 633.853 460.459 cv
623.337 460.459 li
613.661 460.86 607.661 461.117 601.819 469.402 cv
595.972 477.696 598.187 479.846 598.647 489.85 cv
598.997 497.408 594.479 492.105 597.606 513.127 cv
600.731 534.148 618.987 540.891 628.593 540.891 cv
638.2 540.891 655.087 535.254 659.585 513.127 cv
664.083 491 658.19 497.408 658.542 489.85 cv
659.001 479.846 661.216 477.696 655.37 469.402 cv
cp
.556863 .372549 .207843 rgb
f
634.483 555.279 mo
622.702 555.279 li
622.702 538.033 li
634.483 538.033 li
634.483 555.279 li
cp
f
626.509 520.863 mo
626.474 520.863 626.437 520.861 626.399 520.859 cv
625.741 520.799 625.255 520.217 625.313 519.559 cv
625.478 517.744 625.731 510.613 625.731 508.432 cv
625.731 507.77 626.269 507.234 626.929 507.234 cv
627.589 507.234 628.126 507.77 628.126 508.432 cv
628.126 510.506 627.882 517.74 627.7 519.773 cv
627.644 520.395 627.122 520.863 626.509 520.863 cv
cp
.372549 .227451 .105882 rgb
f
628.116 530.344 mo
624.673 530.344 620.675 529.498 618.485 527.078 cv
618.042 526.588 618.079 525.83 618.569 525.387 cv
619.062 524.943 619.817 524.98 620.263 525.471 cv
621.843 527.221 625.405 528.182 629.353 527.908 cv
632.39 527.701 634.97 526.773 635.772 525.6 cv
636.146 525.053 636.89 524.912 637.438 525.287 cv
637.983 525.66 638.124 526.404 637.749 526.951 cv
636.499 528.779 633.421 530.031 629.513 530.297 cv
629.063 530.328 628.595 530.344 628.116 530.344 cv
cp
.337255 .196078 .090196 rgb
f
615.626 507.615 mo
615.626 510.402 613.722 512.66 611.374 512.66 cv
609.028 512.66 607.122 510.402 607.122 507.615 cv
607.122 504.83 609.028 502.568 611.374 502.568 cv
613.722 502.568 615.626 504.83 615.626 507.615 cv
cp
.227451 .117647 .039216 rgb
f
616.739 498.652 mo
616.38 498.652 616.024 498.504 615.769 498.216 cv
614.565 496.858 612.942 496.551 611.79 496.529 cv
609.981 496.5 608.087 497.189 607.081 498.249 cv
606.587 498.768 605.767 498.789 605.249 498.296 cv
604.729 497.803 604.708 496.983 605.202 496.464 cv
606.722 494.861 609.276 493.9 611.835 493.938 cv
614.196 493.979 616.282 494.887 617.708 496.496 cv
618.183 497.033 618.134 497.852 617.599 498.326 cv
617.351 498.546 617.044 498.652 616.739 498.652 cv
cp
f
641.505 498.508 mo
641.224 498.508 640.942 498.418 640.706 498.231 cv
640.144 497.789 640.044 496.975 640.485 496.412 cv
641.577 495.021 643.638 494.093 645.864 493.985 cv
648.214 493.877 650.376 494.701 651.917 496.318 cv
652.411 496.836 652.392 497.656 651.874 498.15 cv
651.354 498.645 650.534 498.625 650.042 498.106 cv
648.673 496.67 646.913 496.525 645.987 496.575 cv
644.321 496.654 643.024 497.376 642.526 498.013 cv
642.271 498.338 641.89 498.508 641.505 498.508 cv
cp
f
650.011 507.615 mo
650.011 510.402 648.104 512.662 645.759 512.662 cv
643.411 512.662 641.505 510.402 641.505 507.615 cv
641.505 504.828 643.411 502.568 645.759 502.568 cv
648.104 502.568 650.011 504.828 650.011 507.615 cv
cp
f
614.589 518.629 mo
614.589 520.92 611.901 522.777 608.583 522.777 cv
605.267 522.777 602.581 520.92 602.581 518.629 cv
602.581 516.338 605.267 514.48 608.583 514.48 cv
611.901 514.48 614.589 516.338 614.589 518.629 cv
cp
.686275 .403922 .317647 rgb
f
654.552 518.629 mo
654.552 520.92 651.864 522.777 648.546 522.777 cv
645.231 522.777 642.544 520.92 642.544 518.629 cv
642.544 516.338 645.231 514.48 648.546 514.48 cv
651.864 514.48 654.552 516.338 654.552 518.629 cv
cp
f
637.306 546.873 mo
634.483 544.018 li
634.483 544.018 629.747 547.404 628.495 547.807 cv
627.241 547.404 622.702 544.018 622.702 544.018 cv
620.034 546.627 li
615.575 549.182 li
617.216 558.459 624.297 556.744 628.467 564.811 cv
633.693 556.541 641.155 558.936 642.528 549.434 cv
637.306 546.873 li
cp
1 1 1 rgb
f
622.831 555.207 mo
619.905 547.48 li
619.774 547.137 619.948 546.752 620.294 546.621 cv
620.638 546.492 621.022 546.666 621.153 547.008 cv
623.343 552.787 li
628.019 548.035 li
628.276 547.773 628.7 547.77 628.962 548.027 cv
629.224 548.287 629.229 548.709 628.97 548.973 cv
622.831 555.207 li
cp
.690196 .678431 .698039 rgb
f
634.106 555.158 mo
628.019 548.973 li
627.761 548.709 627.765 548.287 628.026 548.027 cv
628.288 547.77 628.712 547.773 628.97 548.035 cv
633.694 552.836 li
636.222 547.232 li
636.374 546.896 636.771 546.746 637.106 546.896 cv
637.442 547.049 637.589 547.443 637.438 547.781 cv
634.106 555.158 li
cp
f
645.897 551.375 mo
645.052 550.684 644.05 550.021 642.745 549.291 cv
642.573 549.193 642.351 549.225 642.21 549.369 cv
638.981 552.672 633.677 554.723 628.362 554.723 cv
622.956 554.723 618.544 552.666 615.94 548.928 cv
615.812 548.744 615.567 548.684 615.37 548.789 cv
613.979 549.523 612.905 550.176 611.991 550.844 cv
611.892 550.916 611.825 551.025 611.812 551.148 cv
611.796 551.27 611.833 551.393 611.911 551.488 cv
615.874 556.234 621.005 558.959 628.495 558.959 cv
628.495 558.959 638.999 559.709 645.948 552.018 cv
646.028 551.926 646.069 551.807 646.062 551.686 cv
646.052 551.564 645.993 551.451 645.897 551.375 cv
cp
.27451 .34902 .109804 rgb
f
669.011 486.469 mo
668.634 479.57 662.774 470.04 657.153 466.697 cv
656.538 466.331 655.61 466.016 654.56 465.806 cv
653.739 459.453 644.606 452.867 643.427 459.33 cv
644.856 451.498 627.718 450.159 626.507 458.069 cv
621.067 452.564 606.681 454.18 606.142 462.168 cv
598.155 457.252 591.11 467.197 588.331 473.482 cv
586.126 478.469 584.489 484.645 585.821 490.084 cv
586.339 492.197 588.124 491.498 590.005 492.691 cv
592.665 494.377 593.606 496.576 596.497 497.468 cv
602.581 499.344 607.122 492.359 608.421 488.164 cv
608.421 488.164 616.739 491.029 620.601 483.525 cv
626.507 488.701 634.735 479.888 634.251 478.307 cv
638.427 483.051 643.313 479.86 647.813 475.565 cv
645.935 482.216 650.011 485.541 652.649 484.813 cv
649.509 488.701 653.642 495.173 658.179 492.857 cv
656.019 498.354 661.206 505.666 665.329 502.568 cv
669.442 499.477 669.271 491.243 669.011 486.469 cv
cp
.2 .098039 .027451 rgb
f
651.226 560.994 mo
649.167 554.586 648.056 552.264 642.745 549.291 cv
642.573 549.193 642.351 549.225 642.21 549.369 cv
638.981 552.672 633.677 554.723 628.362 554.723 cv
622.956 554.723 618.544 552.666 615.94 548.928 cv
615.812 548.744 615.567 548.684 615.368 548.789 cv
609.409 551.943 608.194 554.049 605.962 560.994 cv
605.739 561.691 605.434 562.898 605.073 564.467 cv
611.952 566.727 619.294 567.965 626.929 567.965 cv
635.714 567.965 644.112 566.332 651.86 563.381 cv
651.61 562.34 651.395 561.518 651.226 560.994 cv
cp
.223529 .623529 .521569 rgb
f
190.633 125.35 mo
190.633 164.034 159.272 195.395 120.587 195.395 cv
81.9014 195.395 50.541 164.034 50.541 125.35 cv
50.541 86.6646 81.9014 55.3032 120.587 55.3032 cv
159.272 55.3032 190.633 86.6646 190.633 125.35 cv
cp
.529412 .776471 .858824 rgb
f
137.221 179.17 mo
137.092 178.291 li
137.068 178.176 136.982 178.086 136.87 178.054 cv
132.696 176.512 li
132.688 176.509 132.66 176.508 132.645 176.508 cv
130.682 175.752 li
130.682 175.752 121.682 182.842 120.701 183.437 cv
120.6 183.391 120.809 183.43 120.701 183.437 cv
110.093 175.805 li
108.178 176.51 li
108.176 176.511 108.168 176.511 108.167 176.512 cv
103.993 178.054 li
103.881 178.086 103.795 178.176 103.771 178.291 cv
103.625 179.288 li
95.7183 181.985 90.8203 183.977 87.7476 187.222 cv
94.022 190.559 100.865 192.959 108.093 194.261 cv
110.329 194.665 112.602 194.96 114.906 195.146 cv
115.754 195.214 116.604 195.279 117.462 195.316 cv
118.498 195.362 119.539 195.395 120.587 195.395 cv
121.635 195.395 122.674 195.362 123.711 195.316 cv
124.463 195.283 125.207 195.226 125.951 195.17 cv
128.217 194.999 130.452 194.72 132.652 194.338 cv
140.041 193.054 147.033 190.624 153.434 187.217 cv
150.318 183.931 145.318 181.925 137.221 179.17 cv
cp
.235294 .192157 .247059 rgb
f
140.873 133.965 mo
139.748 140.362 143.541 145.688 149.348 146.836 cv
155.154 147.984 160.771 144.518 161.895 138.121 cv
163.02 131.724 159.227 125.608 153.42 124.459 cv
147.615 123.312 141.998 127.568 140.873 133.965 cv
cp
1 .8 .6 rgb
f
100.362 133.965 mo
101.487 140.362 97.6953 145.688 91.8877 146.836 cv
86.0815 147.984 80.4653 144.518 79.3418 138.121 cv
78.2163 131.724 82.0093 125.608 87.8154 124.459 cv
93.6206 123.312 99.2383 127.568 100.362 133.965 cv
cp
f
149.592 90.8726 mo
143.922 83.1714 135.083 78.1138 125.696 77.7407 cv
125.695 77.7407 125.512 77.7329 125.211 77.7212 cv
125.221 77.354 li
125.221 77.354 122.945 77.4438 120.596 77.5376 cv
118.246 77.4438 115.971 77.354 115.971 77.354 cv
115.98 77.7212 li
115.68 77.7329 115.496 77.7407 115.494 77.7407 cv
106.108 78.1138 97.2686 83.1714 91.6001 90.8726 cv
85.9272 98.5806 85.1729 108.29 85.6196 117.588 cv
85.958 124.614 87.2012 135.956 87.5503 142.981 cv
93.2437 164.28 107.408 167.918 120.596 167.918 cv
133.783 167.918 148.42 164.28 153.641 142.981 cv
153.989 135.956 155.232 124.614 155.571 117.588 cv
156.018 108.29 155.265 98.5806 149.592 90.8726 cv
cp
f
129.225 185.117 mo
111.967 185.117 li
111.967 163.985 li
129.225 163.985 li
129.225 185.117 li
cp
f
116.265 183.279 mo
120.048 180.452 li
120.014 180.423 li
119.731 180.193 119.689 179.777 119.92 179.495 cv
120.041 179.347 120.211 179.268 120.388 179.256 cv
111.967 174.038 li
110.093 175.805 li
110.656 178.097 li
114.906 195.146 li
115.754 195.214 116.604 195.279 117.462 195.316 cv
118.636 187.536 li
116.265 183.279 li
cp
1 1 1 rgb
f
111.803 187.624 mo
111.611 187.624 111.422 187.542 111.291 187.381 cv
111.061 187.098 111.102 186.682 111.385 186.452 cv
120.014 179.401 li
120.296 179.168 120.713 179.211 120.943 179.495 cv
121.174 179.777 121.132 180.193 120.85 180.423 cv
112.221 187.474 li
112.098 187.575 111.949 187.624 111.803 187.624 cv
cp
.690196 .678431 .698039 rgb
f
106.711 130.471 mo
106.711 133.067 104.938 135.172 102.749 135.172 cv
100.561 135.172 98.7866 133.067 98.7866 130.471 cv
98.7866 127.874 100.561 125.768 102.749 125.768 cv
104.938 125.768 106.711 127.874 106.711 130.471 cv
cp
.227451 .117647 .039216 rgb
f
142.755 130.471 mo
142.755 133.067 140.981 135.172 138.793 135.172 cv
136.605 135.172 134.83 133.067 134.83 130.471 cv
134.83 127.874 136.605 125.768 138.793 125.768 cv
140.981 125.768 142.755 127.874 142.755 130.471 cv
cp
f
97.2085 121.841 mo
96.8823 121.841 96.5552 121.721 96.2998 121.479 cv
95.771 120.977 95.749 120.141 96.251 119.612 cv
98.5161 117.225 105.147 115.749 109.04 118.438 cv
109.64 118.852 109.791 119.675 109.376 120.276 cv
108.961 120.875 108.139 121.026 107.539 120.612 cv
104.697 118.649 99.5791 119.942 98.1665 121.43 cv
97.9072 121.704 97.5586 121.841 97.2085 121.841 cv
cp
.419608 .27451 .176471 rgb
f
144.602 121.952 mo
144.253 121.952 143.905 121.815 143.646 121.542 cv
141.622 119.418 136.797 119.477 133.906 121.661 cv
133.324 122.1 132.496 121.985 132.057 121.403 cv
131.617 120.821 131.732 119.993 132.314 119.553 cv
136.297 116.545 142.609 116.625 145.559 119.72 cv
146.061 120.249 146.041 121.084 145.513 121.587 cv
145.257 121.831 144.93 121.952 144.602 121.952 cv
cp
f
118.485 146.522 mo
118.453 146.522 118.422 146.521 118.389 146.519 cv
117.662 146.466 117.114 145.834 117.167 145.106 cv
117.338 142.729 117.604 133.385 117.604 130.528 cv
117.604 129.797 118.195 129.207 118.924 129.207 cv
119.654 129.207 120.245 129.797 120.245 130.528 cv
120.245 133.493 119.979 142.819 119.801 145.297 cv
119.752 145.992 119.172 146.522 118.485 146.522 cv
cp
.8 .603922 .458824 rgb
f
120.826 156.911 mo
117.387 156.911 113.516 156.014 111.246 153.772 cv
110.727 153.26 110.723 152.423 111.234 151.905 cv
111.748 151.385 112.584 151.38 113.103 151.893 cv
114.998 153.766 119.217 154.696 123.139 154.104 cv
125.761 153.708 127.755 152.67 128.472 151.329 cv
128.816 150.686 129.617 150.444 130.26 150.788 cv
130.902 151.131 131.145 151.932 130.801 152.575 cv
129.659 154.709 127.078 156.179 123.533 156.715 cv
122.691 156.842 121.775 156.911 120.826 156.911 cv
cp
.729412 .52549 .388235 rgb
f
87.6895 125.616 mo
87.9487 120.465 86.8745 107.009 92.9507 104.584 cv
95.6187 103.52 100.842 104.632 103.513 104.893 cv
113.17 105.836 125.535 106.075 135.221 105.454 cv
139.774 105.161 146.363 103.965 148.507 104.258 cv
154.345 105.055 153.617 115.801 153.668 120.594 cv
153.691 122.811 153.668 124.922 153.643 127.139 cv
153.627 128.44 153.632 129.741 153.607 131.041 cv
153.598 131.569 153.639 132.989 154.366 132.907 cv
155.179 132.814 155.477 129.975 155.6 129.372 cv
156.561 124.77 157.021 119.727 158.271 115.25 cv
160.322 107.904 161.883 96.9966 159.233 90.9067 cv
158.477 89.1646 154.18 83.7896 149.912 84.1177 cv
154.187 75.6704 145.682 71.2153 138.766 70.9351 cv
127.6 70.481 118.389 73.0161 107.959 76.52 cv
102.178 78.4624 97.6899 80.8364 92.7632 84.6079 cv
88.5117 87.8618 86.2949 90.6665 85.0112 95.7495 cv
82.2769 106.578 84.187 118.899 85.772 129.765 cv
85.9316 130.861 86.0786 131.985 86.3564 133.059 cv
86.9624 135.401 87.8066 133.729 87.7803 132.272 cv
87.7407 130.047 87.5771 127.843 87.6895 125.616 cv
cp
.537255 .388235 .286275 rgb
f
124.471 184.065 mo
122.537 187.536 li
123.711 195.316 li
124.463 195.283 125.207 195.226 125.951 195.17 cv
128 186.949 li
124.471 184.065 li
cp
1 1 1 rgb
f
128.354 185.533 mo
130.407 177.293 li
130.682 175.752 li
130.682 175.752 129.1 173.995 129.225 174.038 cv
129.342 174.078 121.682 178.727 120.701 179.322 cv
120.752 179.345 120.805 179.364 120.85 179.401 cv
128.354 185.533 li
cp
f
124.471 184.065 mo
120.048 180.452 li
116.265 183.279 li
118.636 187.536 li
117.462 195.316 li
118.498 195.362 119.539 195.395 120.587 195.395 cv
121.635 195.395 122.674 195.362 123.711 195.316 cv
122.537 187.536 li
124.471 184.065 li
cp
.235294 .192157 .247059 rgb
f
119.92 179.495 mo
119.689 179.777 119.731 180.193 120.014 180.423 cv
120.048 180.452 li
124.471 184.065 li
128 186.949 li
128.354 185.533 li
120.85 179.401 li
120.805 179.364 120.752 179.345 120.701 179.322 cv
120.6 179.276 120.495 179.25 120.388 179.256 cv
120.211 179.268 120.041 179.347 119.92 179.495 cv
cp
.690196 .678431 .698039 rgb
f
110.093 175.805 mo
108.178 176.51 li
108.176 176.511 108.168 176.511 108.167 176.512 cv
103.993 178.054 li
103.881 178.086 103.795 178.176 103.771 178.291 cv
103.625 179.288 li
102.051 190.104 li
102.025 190.231 102.078 190.362 102.188 190.434 cv
108.093 194.261 li
110.329 194.665 112.602 194.96 114.906 195.146 cv
110.656 178.097 li
110.093 175.805 li
cp
.329412 .282353 .352941 rgb
f
138.812 190.104 mo
137.221 179.17 li
137.092 178.291 li
137.068 178.176 136.982 178.086 136.87 178.054 cv
132.696 176.512 li
132.688 176.509 132.66 176.508 132.645 176.508 cv
130.682 175.752 li
130.407 177.293 li
128.354 185.533 li
128 186.949 li
125.951 195.17 li
128.217 194.999 130.452 194.72 132.652 194.338 cv
138.675 190.434 li
138.785 190.362 138.838 190.231 138.812 190.104 cv
cp
f
528.193 684.205 mo
528.193 722.889 496.834 754.25 458.148 754.25 cv
419.463 754.25 388.102 722.889 388.102 684.205 cv
388.102 645.52 419.463 614.158 458.148 614.158 cv
496.834 614.158 528.193 645.52 528.193 684.205 cv
cp
.176471 .494118 .619608 rgb
f
478.426 692.896 mo
477.301 699.293 481.092 704.619 486.9 705.768 cv
492.707 706.914 498.322 703.449 499.447 697.051 cv
500.57 690.654 496.779 684.539 490.973 683.391 cv
485.166 682.242 479.551 686.498 478.426 692.896 cv
cp
1 .8 .6 rgb
f
437.914 692.896 mo
439.039 699.293 435.246 704.619 429.439 705.768 cv
423.633 706.914 418.018 703.449 416.895 697.051 cv
415.768 690.654 419.561 684.539 425.367 683.391 cv
431.172 682.242 436.791 686.498 437.914 692.896 cv
cp
f
487.145 649.803 mo
481.475 642.102 472.635 637.045 463.248 636.672 cv
463.248 636.672 463.064 636.664 462.762 636.652 cv
462.773 636.285 li
462.773 636.285 460.496 636.375 458.146 636.469 cv
455.799 636.375 453.523 636.285 453.523 636.285 cv
453.533 636.652 li
453.23 636.664 453.049 636.672 453.047 636.672 cv
443.66 637.045 434.82 642.102 429.152 649.803 cv
423.479 657.512 422.725 667.221 423.172 676.52 cv
423.51 683.545 424.754 694.885 425.102 701.912 cv
430.795 723.211 444.961 726.85 458.146 726.85 cv
471.336 726.85 485.971 723.211 491.191 701.912 cv
491.541 694.885 492.785 683.545 493.123 676.52 cv
493.57 667.221 492.816 657.512 487.145 649.803 cv
cp
f
466.775 744.047 mo
449.518 744.047 li
449.518 722.916 li
466.775 722.916 li
466.775 744.047 li
cp
f
444.262 689.402 mo
444.262 691.998 442.49 694.104 440.301 694.104 cv
438.113 694.104 436.338 691.998 436.338 689.402 cv
436.338 686.805 438.113 684.699 440.301 684.699 cv
442.49 684.699 444.262 686.805 444.262 689.402 cv
cp
.227451 .117647 .039216 rgb
f
480.307 689.402 mo
480.307 691.998 478.533 694.104 476.344 694.104 cv
474.156 694.104 472.383 691.998 472.383 689.402 cv
472.383 686.805 474.156 684.699 476.344 684.699 cv
478.533 684.699 480.307 686.805 480.307 689.402 cv
cp
f
434.555 680.883 mo
434.227 680.883 433.9 680.762 433.645 680.518 cv
433.115 680.016 433.096 679.18 433.6 678.65 cv
435.377 676.783 438.676 676.262 441.168 676.393 cv
442.463 676.463 445.633 676.83 447.094 678.734 cv
447.537 679.313 447.428 680.143 446.85 680.586 cv
446.27 681.029 445.441 680.92 444.996 680.342 cv
444.574 679.791 443.152 679.145 441.025 679.031 cv
438.666 678.908 436.453 679.484 435.512 680.473 cv
435.252 680.744 434.902 680.883 434.555 680.883 cv
cp
.309804 .184314 .098039 rgb
f
456.037 705.453 mo
456.004 705.453 455.973 705.451 455.941 705.449 cv
455.213 705.396 454.666 704.766 454.719 704.037 cv
454.891 701.66 455.154 692.316 455.154 689.459 cv
455.154 688.729 455.746 688.137 456.475 688.137 cv
457.205 688.137 457.797 688.729 457.797 689.459 cv
457.797 692.162 457.543 701.584 457.354 704.227 cv
457.303 704.922 456.723 705.453 456.037 705.453 cv
cp
.729412 .52549 .388235 rgb
f
458.148 754.25 mo
470.41 754.25 481.93 751.09 491.955 745.555 cv
488.855 741.516 483.188 739.373 470.457 735.334 cv
466.775 732.82 li
458.146 737.416 li
449.518 732.82 li
445.711 735.496 li
432.998 739.527 427.411 741.576 424.35 745.559 cv
434.372 751.092 445.89 754.25 458.148 754.25 cv
cp
.639216 .839216 .521569 rgb
f
449.201 746.832 mo
445.523 736.67 li
445.398 736.322 445.576 735.939 445.924 735.813 cv
446.273 735.688 446.654 735.867 446.779 736.215 cv
449.809 744.58 li
457.705 737.965 li
457.986 737.729 458.408 737.764 458.646 738.049 cv
458.883 738.332 458.848 738.754 458.563 738.99 cv
449.201 746.832 li
cp
.443137 .639216 .313726 rgb
f
467.061 746.828 mo
457.705 738.99 li
457.422 738.754 457.383 738.332 457.621 738.049 cv
457.859 737.766 458.281 737.73 458.563 737.965 cv
466.465 744.586 li
469.531 736.316 li
469.658 735.971 470.043 735.793 470.389 735.922 cv
470.736 736.051 470.912 736.436 470.785 736.781 cv
467.061 746.828 li
cp
f
447.236 711.09 mo
451.652 720.08 467.916 716.916 469.033 710.678 cv
447.236 711.09 li
cp
1 1 1 rgb
f
449.217 712.152 mo
451.719 715.205 455.889 715.572 457.74 715.572 cv
461.947 715.572 465.898 713.949 467.379 711.811 cv
449.217 712.152 li
cp
457.74 717.771 mo
457.74 717.771 li
452.373 717.771 448.184 715.514 446.246 711.574 cv
446.082 711.236 446.1 710.838 446.295 710.516 cv
446.49 710.195 446.838 709.996 447.215 709.988 cv
469.012 709.578 li
469.33 709.566 469.656 709.713 469.869 709.963 cv
470.084 710.215 470.174 710.547 470.115 710.871 cv
469.344 715.191 463.217 717.771 457.74 717.771 cv
cp
.729412 .52549 .388235 rgb
f
482.154 680.883 mo
481.805 680.883 481.457 680.744 481.197 680.473 cv
480.236 679.463 477.967 678.883 475.555 679.037 cv
473.48 679.166 472.115 679.793 471.725 680.324 cv
471.289 680.91 470.463 681.031 469.877 680.6 cv
469.291 680.166 469.166 679.338 469.6 678.752 cv
470.996 676.867 474.115 676.48 475.393 676.4 cv
477.934 676.24 481.299 676.75 483.109 678.65 cv
483.611 679.18 483.594 680.016 483.064 680.518 cv
482.809 680.762 482.48 680.883 482.154 680.883 cv
cp
.309804 .184314 .098039 rgb
f
424.838 676.357 mo
429.568 677.227 431.307 669.043 429.502 666.512 cv
436.598 668.473 442.158 663.32 443.039 660.127 cv
443.834 665.674 452.723 664.199 452.943 659.533 cv
453.164 663.65 464.83 665.301 469.25 659.76 cv
468.908 665.639 477.586 666.455 480.916 662.627 cv
479.578 667.061 485.164 670.736 487.832 668.162 cv
485.631 673.004 489.854 678.691 491.766 677.658 cv
489.531 679.727 489.025 684.764 491.463 687.021 cv
494.457 689.795 496.293 684.979 495.865 682.389 cv
501.479 679.563 500.916 669.322 496.773 669.338 cv
502.375 667.77 501.086 656.414 496.152 657.051 cv
498.508 655.561 498.482 649.426 493.732 650.012 cv
497.076 646.15 494.326 637.684 487.965 639.58 cv
489.482 633.824 477.486 629.895 473.023 634.98 cv
475.176 629.895 466.371 628.98 463.156 632.365 cv
465.209 630.689 465.73 626.707 462.896 626.01 cv
458.961 625.045 455.254 627.99 454.318 631.875 cv
452.943 625.859 444.908 626.891 445.475 632.779 cv
442.488 628.432 435.555 633.273 435.73 639.199 cv
432.252 635.035 423.889 639.877 425.43 646.041 cv
419.816 645.711 412.883 654.074 419.354 663.504 cv
417.424 663.061 415.084 665.521 415.084 669.322 cv
415.084 671.574 416.697 673.889 418.584 674.898 cv
416.697 675.756 415.838 679.445 417.986 683.412 cv
419.736 686.645 422.713 687.521 424.879 686.652 cv
428.682 685.123 426.43 678.67 424.838 676.357 cv
cp
f
190.633 311.635 mo
190.633 350.319 159.272 381.68 120.588 381.68 cv
81.9023 381.68 50.541 350.319 50.541 311.635 cv
50.541 272.95 81.9023 241.588 120.588 241.588 cv
159.272 241.588 190.633 272.95 190.633 311.635 cv
cp
.427451 .686275 .427451 rgb
f
140.838 315.661 mo
139.713 322.058 143.505 327.384 149.313 328.532 cv
155.119 329.679 160.735 326.212 161.857 319.815 cv
162.983 313.418 159.191 307.301 153.385 306.155 cv
147.58 305.006 141.961 309.262 140.838 315.661 cv
cp
1 .8 .6 rgb
f
100.326 315.661 mo
101.451 322.058 97.6592 327.384 91.8516 328.532 cv
86.0459 329.679 80.4297 326.212 79.3066 319.815 cv
78.1807 313.418 81.9736 307.301 87.7793 306.155 cv
93.585 305.006 99.2021 309.262 100.326 315.661 cv
cp
f
149.556 272.567 mo
143.887 264.866 135.047 259.809 125.661 259.436 cv
125.659 259.436 125.477 259.428 125.174 259.417 cv
125.185 259.049 li
125.185 259.049 122.91 259.139 120.561 259.233 cv
118.211 259.139 115.936 259.049 115.936 259.049 cv
115.945 259.417 li
115.644 259.428 115.46 259.436 115.46 259.436 cv
106.072 259.809 97.2324 264.866 91.5645 272.567 cv
85.8906 280.276 85.1367 289.985 85.584 299.282 cv
85.9219 306.307 87.166 317.649 87.5146 324.677 cv
93.208 345.974 107.373 349.612 120.56 349.612 cv
133.748 349.612 148.385 345.974 153.605 324.677 cv
153.953 317.649 155.196 306.307 155.535 299.282 cv
155.982 289.985 155.229 280.276 149.556 272.567 cv
cp
f
129.189 365.812 mo
111.931 365.812 li
111.931 345.681 li
129.189 345.681 li
129.189 365.812 li
cp
f
94.8379 306.758 mo
94.4785 306.758 94.1221 306.614 93.8613 306.329 cv
93.3691 305.79 93.4082 304.954 93.9473 304.463 cv
96.4277 302.198 104.376 301.184 107.96 303.305 cv
108.587 303.678 108.795 304.489 108.423 305.116 cv
108.051 305.743 107.242 305.95 106.613 305.579 cv
104.121 304.102 97.4365 304.854 95.7275 306.413 cv
95.4746 306.645 95.1553 306.758 94.8379 306.758 cv
cp
.647059 .47451 .266667 rgb
f
145.685 307.288 mo
145.3 307.288 144.919 307.122 144.658 306.799 cv
143.346 305.18 136.403 304.401 133.572 305.553 cv
132.898 305.829 132.127 305.504 131.852 304.829 cv
131.576 304.153 131.901 303.381 132.576 303.108 cv
135.943 301.739 144.357 302.235 146.709 305.135 cv
147.17 305.704 147.082 306.534 146.516 306.993 cv
146.271 307.192 145.977 307.288 145.685 307.288 cv
cp
f
118.449 328.218 mo
118.418 328.218 118.386 328.216 118.354 328.214 cv
117.626 328.161 117.078 327.528 117.131 326.802 cv
117.303 324.423 117.568 315.081 117.568 312.221 cv
117.568 311.493 118.159 310.901 118.889 310.901 cv
119.618 310.901 120.209 311.493 120.209 312.221 cv
120.209 314.926 119.956 324.349 119.766 326.991 cv
119.716 327.687 119.136 328.218 118.449 328.218 cv
cp
.8 .603922 .458824 rgb
f
120.213 339.626 mo
116.027 339.626 112.369 338.567 110.034 336.651 cv
109.471 336.188 109.388 335.356 109.851 334.794 cv
110.313 334.229 111.145 334.146 111.709 334.608 cv
113.758 336.29 117.394 337.167 121.422 336.952 cv
125.063 336.759 128.349 335.7 129.6 334.315 cv
130.087 333.772 130.922 333.729 131.465 334.22 cv
132.006 334.708 132.049 335.544 131.56 336.085 cv
129.819 338.013 125.988 339.356 121.561 339.591 cv
121.106 339.614 120.656 339.626 120.213 339.626 cv
cp
.729412 .52549 .388235 rgb
f
91.8291 285.506 mo
91.3809 286.479 91.5205 291.543 97.1738 291.375 cv
102.102 291.229 104.847 288.239 107.351 285.686 cv
107.351 285.686 102.713 292.989 108.852 294.458 cv
115.011 295.93 120.869 287.854 120.869 287.854 cv
120.012 288.485 119.873 291.93 122.349 293.049 cv
126.11 294.75 134.795 293.43 144.566 280.663 cv
153.607 292.108 154.338 311.92 154.41 313.317 cv
154.439 313.883 154.586 315.403 155.327 315.256 cv
156.156 315.096 156.252 312.03 156.334 311.374 cv
156.93 306.76 157.09 302.03 157.087 297.387 cv
157.076 288.813 159.568 272.305 144.055 262.018 cv
134.514 255.69 114.791 255.061 103.813 258.643 cv
96.165 261.139 88.833 267.639 86.1074 275.211 cv
83.1152 283.528 83.1914 290.026 84.1768 306.495 cv
84.2832 308.282 84.4941 310.071 84.7422 311.84 cv
84.9063 313.02 85.0586 314.227 85.3447 315.381 cv
85.9688 317.899 86.8389 316.102 86.8115 314.536 cv
86.7705 312.145 85.959 294.604 91.8291 285.506 cv
cp
.909804 .67451 .364706 rgb
f
106.723 316.688 mo
106.525 316.688 106.326 316.645 106.139 316.551 cv
102.23 314.62 96.7949 315.528 95.6416 316.415 cv
95.0625 316.858 94.2344 316.75 93.7891 316.172 cv
93.3457 315.594 93.4541 314.764 94.0322 314.321 cv
96.1191 312.717 102.762 311.934 107.309 314.184 cv
107.963 314.506 108.23 315.299 107.907 315.954 cv
107.677 316.418 107.209 316.688 106.723 316.688 cv
cp
.729412 .52549 .388235 rgb
f
151.351 370.969 mo
150.385 369.5 149.133 368.057 147.702 366.678 cv
147.742 366.512 133.077 356.81 133.021 356.864 cv
132.238 356.364 129.623 354.696 129.736 354.731 cv
129.869 354.774 120.588 360.081 120.588 360.081 cv
111.439 354.731 li
108.198 356.903 li
108.134 356.831 93.9707 365.978 93.9971 366.183 cv
92.3438 367.709 90.9072 369.323 89.8242 370.969 cv
89.2998 371.768 88.7637 372.709 88.2207 373.748 cv
90.4648 374.922 92.7813 375.973 95.1602 376.9 cv
102.002 379.568 109.356 381.207 117.047 381.59 cv
118.22 381.648 119.4 381.68 120.588 381.68 cv
121.775 381.68 122.955 381.648 124.128 381.59 cv
131.827 381.207 139.189 379.564 146.037 376.891 cv
148.409 375.965 150.717 374.916 152.955 373.748 cv
152.412 372.709 151.875 371.768 151.351 370.969 cv
cp
.52549 .411765 .364706 rgb
f
143.922 316.469 mo
143.729 316.469 143.532 316.426 143.346 316.336 cv
140.985 315.192 135.613 314.659 133.029 316.27 cv
132.41 316.655 131.596 316.465 131.209 315.846 cv
130.824 315.227 131.013 314.413 131.632 314.026 cv
135.16 311.829 141.505 312.508 144.5 313.959 cv
145.156 314.278 145.43 315.069 145.111 315.725 cv
144.883 316.196 144.412 316.469 143.922 316.469 cv
cp
.729412 .52549 .388235 rgb
f
122.645 368.725 mo
125.16 364.47 li
120.713 361.335 li
120.713 361.103 li
120.578 361.218 li
120.441 361.103 li
120.441 361.335 li
115.996 364.47 li
118.51 368.725 li
116.586 380.746 li
116.738 381.029 116.891 381.313 117.047 381.59 cv
118.22 381.648 119.4 381.68 120.588 381.68 cv
121.775 381.68 122.955 381.648 124.128 381.59 cv
124.279 381.322 124.426 381.049 124.573 380.775 cv
122.645 368.725 li
cp
.235294 .192157 .247059 rgb
f
111.414 368.813 mo
111.219 368.813 111.025 368.727 110.895 368.563 cv
110.669 368.276 110.718 367.862 111.004 367.635 cv
120.146 360.407 li
120.433 360.181 120.849 360.229 121.074 360.517 cv
121.301 360.802 121.252 361.218 120.967 361.444 cv
111.822 368.67 li
111.701 368.766 111.557 368.813 111.414 368.813 cv
cp
.407843 .301961 .266667 rgb
f
129.699 368.813 mo
129.557 368.813 129.412 368.766 129.291 368.67 cv
120.146 361.444 li
119.861 361.218 119.813 360.802 120.039 360.517 cv
120.264 360.229 120.681 360.181 120.967 360.407 cv
130.109 367.635 li
130.396 367.862 130.444 368.276 130.219 368.563 cv
130.088 368.727 129.895 368.813 129.699 368.813 cv
cp
f
108.418 357.31 mo
108.387 357.153 108.303 357.021 108.198 356.903 cv
108.134 356.831 108.067 356.759 107.98 356.71 cv
107.848 356.638 107.701 356.601 107.554 356.601 cv
107.449 356.601 107.343 356.62 107.242 356.657 cv
102.463 358.47 97.2383 362.169 94.2148 364.788 cv
93.9912 364.983 93.8799 365.274 93.918 365.567 cv
93.9453 365.776 93.9707 365.978 93.9971 366.183 cv
94.4941 370.051 94.9072 373.523 95.1602 376.9 cv
102.002 379.568 109.356 381.207 117.047 381.59 cv
116.891 381.313 116.738 381.029 116.586 380.746 cv
111.11 370.555 108.45 357.474 108.418 357.31 cv
cp
.235294 .192157 .247059 rgb
f
147.702 366.678 mo
147.742 366.512 147.772 366.345 147.813 366.179 cv
147.891 365.864 147.789 365.534 147.549 365.315 cv
144.246 362.323 138.756 358.485 133.934 356.657 cv
133.832 356.62 133.727 356.601 133.621 356.601 cv
133.474 356.601 133.326 356.638 133.195 356.71 cv
133.126 356.749 133.077 356.81 133.021 356.864 cv
132.895 356.987 132.793 357.134 132.758 357.31 cv
132.726 357.474 130.058 370.581 124.573 380.775 cv
124.426 381.049 124.279 381.322 124.128 381.59 cv
131.827 381.207 139.189 379.564 146.037 376.891 cv
146.351 373.441 146.9 370.047 147.702 366.678 cv
cp
f
640.358 362.611 mo
639.989 362.488 639.327 362.242 639.327 362.242 cv
639.327 362.242 635.433 358.514 635.558 358.557 cv
635.683 358.6 626.929 363.906 626.929 363.906 cv
618.3 358.557 li
614.563 362.078 li
614.563 362.078 612.941 362.799 612.144 363.066 cv
601.934 366.498 596.274 368.641 593.066 372.953 cv
603.007 378.455 614.423 381.611 626.573 381.672 cv
626.692 381.672 626.81 381.68 626.929 381.68 cv
627.258 381.68 627.583 381.66 627.911 381.656 cv
639.827 381.49 651.022 378.359 660.79 372.953 cv
657.443 368.453 651.427 366.316 640.358 362.611 cv
cp
.117647 .368627 .545098 rgb
f
696.974 311.637 mo
696.974 350.318 665.614 381.68 626.929 381.68 cv
588.243 381.68 556.883 350.318 556.883 311.637 cv
556.883 272.951 588.243 241.59 626.929 241.59 cv
665.614 241.59 696.974 272.951 696.974 311.637 cv
cp
.92549 .435294 .27451 rgb
f
635.558 369.635 mo
618.3 369.635 li
618.3 348.504 li
635.558 348.504 li
635.558 369.635 li
cp
1 .8 .6 rgb
f
640.358 362.611 mo
639.989 362.488 639.327 362.242 639.327 362.242 cv
639.327 362.242 635.433 358.514 635.558 358.557 cv
635.683 358.6 626.929 363.906 626.929 363.906 cv
618.3 358.557 li
614.563 362.078 li
614.563 362.078 612.941 362.799 612.144 363.066 cv
601.934 366.498 596.274 368.641 593.066 372.953 cv
603.007 378.455 614.423 381.611 626.573 381.672 cv
626.692 381.672 626.81 381.68 626.929 381.68 cv
627.258 381.68 627.583 381.66 627.911 381.656 cv
639.827 381.49 651.022 378.359 660.79 372.953 cv
657.443 368.453 651.427 366.316 640.358 362.611 cv
cp
.117647 .368627 .545098 rgb
f
647.206 318.484 mo
646.082 324.881 649.874 330.207 655.681 331.355 cv
661.488 332.504 667.103 329.037 668.228 322.641 cv
669.353 316.244 665.561 310.127 659.753 308.98 cv
653.948 307.83 648.331 312.088 647.206 318.484 cv
cp
1 .8 .6 rgb
f
606.694 318.484 mo
607.82 324.881 604.028 330.207 598.221 331.355 cv
592.414 332.504 586.798 329.037 585.675 322.641 cv
584.55 316.244 588.342 310.127 594.147 308.98 cv
599.953 307.83 605.571 312.088 606.694 318.484 cv
cp
f
655.925 275.391 mo
650.255 267.691 641.417 262.633 632.028 262.26 cv
632.028 262.26 631.845 262.254 631.543 262.24 cv
631.554 261.873 li
631.554 261.873 629.277 261.963 626.929 262.057 cv
624.579 261.963 622.304 261.873 622.304 261.873 cv
622.313 262.24 li
622.012 262.254 621.829 262.26 621.827 262.26 cv
612.441 262.633 603.601 267.691 597.933 275.391 cv
592.259 283.1 591.506 292.809 591.952 302.107 cv
592.29 309.133 593.534 320.475 593.883 327.5 cv
599.577 348.799 613.741 352.438 626.928 352.438 cv
640.116 352.438 654.753 348.799 659.974 327.5 cv
660.322 320.475 661.565 309.133 661.905 302.107 cv
662.352 292.809 661.599 283.1 655.925 275.391 cv
cp
f
613.043 314.99 mo
613.043 317.586 611.271 319.691 609.081 319.691 cv
606.894 319.691 605.118 317.586 605.118 314.99 cv
605.118 312.393 606.894 310.289 609.081 310.289 cv
611.271 310.289 613.043 312.393 613.043 314.99 cv
cp
.227451 .117647 .039216 rgb
f
649.088 314.99 mo
649.088 317.586 647.315 319.691 645.126 319.691 cv
642.938 319.691 641.163 317.586 641.163 314.99 cv
641.163 312.393 642.938 310.289 645.126 310.289 cv
647.315 310.289 649.088 312.393 649.088 314.99 cv
cp
f
603.542 305.48 mo
603.216 305.48 602.889 305.359 602.634 305.117 cv
602.104 304.615 602.082 303.779 602.583 303.25 cv
604.849 300.863 611.479 299.387 615.372 302.076 cv
615.973 302.492 616.123 303.314 615.708 303.914 cv
615.294 304.514 614.472 304.666 613.871 304.25 cv
611.03 302.285 605.912 303.58 604.5 305.068 cv
604.241 305.342 603.892 305.48 603.542 305.48 cv
cp
f
650.935 305.59 mo
650.587 305.59 650.238 305.453 649.979 305.182 cv
647.954 303.057 643.132 303.115 640.24 305.299 cv
639.658 305.738 638.831 305.623 638.391 305.041 cv
637.95 304.461 638.065 303.631 638.647 303.191 cv
642.631 300.184 648.942 300.264 651.892 303.359 cv
652.394 303.889 652.374 304.723 651.845 305.227 cv
651.59 305.471 651.263 305.59 650.935 305.59 cv
cp
f
624.817 331.041 mo
624.786 331.041 624.754 331.041 624.722 331.037 cv
623.994 330.986 623.446 330.354 623.499 329.625 cv
623.671 327.248 623.937 317.904 623.937 315.047 cv
623.937 314.318 624.527 313.727 625.257 313.727 cv
625.986 313.727 626.577 314.318 626.577 315.047 cv
626.577 318.012 626.313 327.338 626.134 329.816 cv
626.084 330.512 625.504 331.041 624.817 331.041 cv
cp
.8 .603922 .458824 rgb
f
594.829 310.129 mo
595.09 304.979 593.235 292.006 600.036 289.096 cv
602.646 287.979 605.499 287.916 608.133 288.176 cv
617.647 289.107 626.515 293.762 643.133 291.072 cv
652.381 289.576 654.785 287.977 657.273 286.012 cv
658.302 285.199 658.548 300.25 658.595 305.041 cv
658.614 307.258 658.591 309.369 658.562 311.586 cv
658.544 312.887 658.548 314.188 658.524 315.486 cv
658.513 316.016 658.399 317.354 660.137 317.352 cv
661.413 317.35 661.574 313.971 661.622 313.355 cv
662.365 303.625 662.733 298.365 662.3 289.283 cv
662.092 284.895 662.175 284.975 661.813 281.072 cv
664.582 278.883 666.329 274.908 666.335 270.211 cv
664.955 271.27 661.954 272.125 661.954 272.125 cv
664.364 269.074 666.341 264.197 665.729 258.473 cv
663.112 260.945 660.312 262.119 656.786 261.807 cv
657.712 260.273 658.498 258.188 656.794 255.35 cv
655.222 257.467 652.345 258.762 648.284 259.445 cv
639.438 260.938 622.64 249.568 601.508 265.219 cv
594.106 270.699 591.353 280.709 591.343 290.32 cv
591.329 302.803 591.333 299.184 591.32 311.523 cv
591.319 312.631 591.398 316.512 592.677 317.379 cv
593.911 318.217 594.854 316.969 594.833 315.771 cv
594.798 313.943 594.716 312.357 594.829 310.129 cv
cp
.309804 .184314 .098039 rgb
f
616.075 335.875 mo
620.746 348.963 637.806 344.271 638.746 335.164 cv
616.075 335.875 li
cp
1 1 1 rgb
f
617.707 336.926 mo
619.56 340.719 622.894 342.861 627.044 342.861 cv
627.045 342.861 li
631.823 342.861 636.231 339.969 637.388 336.307 cv
617.707 336.926 li
cp
627.045 345.063 mo
627.044 345.063 li
621.415 345.063 617.038 341.85 615.038 336.244 cv
614.92 335.914 614.968 335.545 615.165 335.256 cv
615.364 334.965 615.688 334.787 616.04 334.775 cv
638.712 334.064 li
639.02 334.043 639.335 334.182 639.552 334.414 cv
639.769 334.646 639.873 334.961 639.841 335.277 cv
639.283 340.674 633.543 345.063 627.045 345.063 cv
cp
.729412 .52549 .388235 rgb
f
617.976 373.109 mo
614.298 362.945 li
614.171 362.6 614.351 362.215 614.698 362.09 cv
615.044 361.965 615.43 362.143 615.555 362.49 cv
618.583 370.857 li
626.479 364.242 li
626.763 364.006 627.185 364.043 627.421 364.326 cv
627.658 364.609 627.621 365.031 627.339 365.268 cv
617.976 373.109 li
cp
.07451 .278431 .407843 rgb
f
635.835 373.104 mo
626.479 365.268 li
626.196 365.031 626.159 364.609 626.396 364.326 cv
626.634 364.043 627.055 364.006 627.339 364.242 cv
635.24 370.861 li
638.305 362.594 li
638.433 362.246 638.818 362.07 639.163 362.197 cv
639.511 362.326 639.687 362.711 639.559 363.059 cv
635.835 373.104 li
cp
f
627.54 365.527 mo
627.54 365.158 627.241 364.857 626.872 364.857 cv
626.503 364.857 626.203 365.158 626.203 365.527 cv
626.203 372.066 626.351 375.877 626.493 379.561 cv
626.521 380.254 626.547 380.951 626.573 381.672 cv
626.692 381.672 626.81 381.68 626.929 381.68 cv
627.258 381.68 627.583 381.66 627.911 381.656 cv
627.884 380.924 627.856 380.213 627.829 379.51 cv
627.687 375.838 627.54 372.041 627.54 365.527 cv
cp
f
528.193 125.35 mo
528.193 164.034 496.834 195.395 458.147 195.395 cv
419.462 195.395 388.102 164.034 388.102 125.35 cv
388.102 86.6641 419.462 55.3027 458.147 55.3027 cv
496.834 55.3027 528.193 86.6641 528.193 125.35 cv
cp
.611765 .807843 .705882 rgb
f
466.786 185.676 mo
449.528 185.676 li
449.528 164.545 li
466.786 164.545 li
466.786 185.676 li
cp
.52549 .356863 .184314 rgb
f
475.032 179.51 mo
474.952 179.481 474.866 179.45 474.785 179.42 cv
473.955 179.118 473.089 178.807 472.199 178.489 cv
471.805 178.348 471.417 178.209 471.006 178.063 cv
470.032 177.372 458.157 179.805 458.157 179.805 cv
458.157 179.805 446.074 177.202 444.798 178.063 cv
444.046 178.331 443.317 178.594 442.607 178.852 cv
441.905 179.108 441.222 179.362 440.555 179.614 cv
440.556 179.616 li
433.902 182.122 429.115 184.401 425.957 187.553 cv
432.759 191.081 440.207 193.53 448.084 194.665 cv
450.095 194.954 452.131 195.163 454.193 195.278 cv
454.533 195.295 454.874 195.307 455.214 195.321 cv
456.188 195.36 457.164 195.395 458.147 195.395 cv
459.131 195.395 460.107 195.36 461.081 195.321 cv
461.475 195.303 461.867 195.288 462.26 195.264 cv
464.291 195.147 466.299 194.942 468.279 194.655 cv
476.16 193.512 483.611 191.053 490.412 187.516 cv
487.238 184.34 482.344 182.18 475.032 179.51 cv
cp
.34902 .466667 .164706 rgb
f
471.006 178.063 mo
470.032 177.372 468.243 175.961 468.243 175.961 cv
468.243 175.961 466.66 174.1 466.786 174.145 cv
466.912 174.192 458.157 179.805 458.157 179.805 cv
449.528 174.145 li
447.654 176.016 li
447.654 176.016 446.074 177.202 444.798 178.063 cv
444.798 178.063 444.799 178.063 444.799 178.063 cv
446.909 185.682 451.026 191.59 454.193 195.278 cv
454.533 195.295 454.874 195.307 455.214 195.321 cv
456.197 188.43 li
453.826 183.924 li
458.019 180.608 li
458.019 180.362 li
458.148 180.485 li
458.276 180.362 li
458.276 180.608 li
462.469 183.924 li
460.098 188.43 li
461.081 195.321 li
461.475 195.303 461.867 195.288 462.26 195.264 cv
465.097 191.573 468.844 185.665 471.006 178.063 cv
471.006 178.063 li
cp
1 1 1 rgb
f
462.469 183.924 mo
458.276 180.608 li
458.276 180.362 li
458.148 180.485 li
458.019 180.362 li
458.019 180.608 li
453.826 183.924 li
456.197 188.43 li
455.214 195.321 li
456.188 195.36 457.164 195.395 458.147 195.395 cv
459.131 195.395 460.107 195.36 461.081 195.321 cv
460.098 188.43 li
462.469 183.924 li
cp
.235294 .192157 .247059 rgb
f
478.435 134.526 mo
477.31 140.92 481.102 146.249 486.908 147.397 cv
492.715 148.543 498.33 145.077 499.455 138.68 cv
500.58 132.284 496.787 126.167 490.98 125.02 cv
485.176 123.871 479.559 128.127 478.435 134.526 cv
cp
.52549 .356863 .184314 rgb
f
437.923 134.526 mo
439.048 140.92 435.256 146.249 429.449 147.397 cv
423.643 148.543 418.026 145.077 416.903 138.68 cv
415.777 132.284 419.57 126.167 425.376 125.02 cv
431.182 123.871 436.799 128.127 437.923 134.526 cv
cp
f
487.152 91.4316 mo
481.484 83.7305 472.645 78.6738 463.258 78.2998 cv
463.256 78.2998 463.072 78.293 462.771 78.2813 cv
462.781 77.9131 li
462.781 77.9131 460.506 78.0039 458.157 78.0977 cv
455.807 78.0039 453.532 77.9131 453.532 77.9131 cv
453.542 78.2813 li
453.24 78.293 453.057 78.2998 453.056 78.2998 cv
443.669 78.6738 434.83 83.7305 429.161 91.4316 cv
423.488 99.1396 422.734 108.85 423.181 118.146 cv
423.519 125.172 424.762 136.514 425.111 143.542 cv
430.805 164.838 444.969 168.477 458.156 168.477 cv
471.344 168.477 485.98 164.838 491.201 143.542 cv
491.551 136.514 492.793 125.172 493.133 118.146 cv
493.58 108.85 492.826 99.1396 487.152 91.4316 cv
cp
f
449.364 188.485 mo
449.179 188.485 448.995 188.407 448.864 188.256 cv
448.625 187.979 448.656 187.563 448.931 187.325 cv
457.561 179.864 li
457.836 179.624 458.253 179.655 458.492 179.93 cv
458.731 180.206 458.7 180.624 458.425 180.862 cv
449.795 188.323 li
449.67 188.43 449.517 188.485 449.364 188.485 cv
cp
.690196 .678431 .698039 rgb
f
466.621 188.485 mo
466.469 188.485 466.314 188.43 466.189 188.323 cv
457.561 180.862 li
457.285 180.624 457.254 180.206 457.493 179.93 cv
457.731 179.655 458.147 179.624 458.425 179.864 cv
467.054 187.325 li
467.33 187.563 467.359 187.979 467.121 188.256 cv
466.99 188.407 466.807 188.485 466.621 188.485 cv
cp
f
444.272 131.029 mo
444.272 133.627 442.499 135.733 440.31 135.733 cv
438.122 135.733 436.348 133.627 436.348 131.029 cv
436.348 128.434 438.122 126.328 440.31 126.328 cv
442.499 126.328 444.272 128.434 444.272 131.029 cv
cp
.2 .098039 .027451 rgb
f
480.316 131.029 mo
480.316 133.627 478.543 135.733 476.354 135.733 cv
474.166 135.733 472.392 133.627 472.392 131.029 cv
472.392 128.434 474.166 126.328 476.354 126.328 cv
478.543 126.328 480.316 128.434 480.316 131.029 cv
cp
f
446.201 122.4 mo
445.787 122.4 445.378 122.206 445.121 121.841 cv
444.673 121.206 443.453 120.758 441.856 120.643 cv
439.258 120.453 436.479 121.197 435.728 121.988 cv
435.226 122.518 434.39 122.539 433.861 122.038 cv
433.332 121.536 433.31 120.699 433.812 120.171 cv
435.404 118.492 439.243 117.801 442.047 118.008 cv
443.779 118.133 446.093 118.637 447.28 120.318 cv
447.7 120.915 447.557 121.739 446.961 122.16 cv
446.729 122.322 446.464 122.4 446.201 122.4 cv
cp
.196078 .094118 .023529 rgb
f
482.162 122.512 mo
481.814 122.512 481.467 122.374 481.207 122.102 cv
480.204 121.049 478.01 120.41 475.75 120.509 cv
473.92 120.589 472.369 121.156 471.703 121.99 cv
471.249 122.561 470.417 122.654 469.848 122.199 cv
469.277 121.744 469.184 120.912 469.639 120.343 cv
470.801 118.887 472.985 117.986 475.635 117.869 cv
478.039 117.762 481.273 118.342 483.119 120.279 cv
483.623 120.808 483.602 121.644 483.074 122.146 cv
482.818 122.391 482.49 122.512 482.162 122.512 cv
cp
f
456.046 147.083 mo
456.015 147.083 455.982 147.081 455.95 147.079 cv
455.223 147.026 454.675 146.393 454.728 145.667 cv
454.899 143.288 455.165 133.946 455.165 131.086 cv
455.165 130.357 455.756 129.766 456.485 129.766 cv
457.215 129.766 457.806 130.357 457.806 131.086 cv
457.806 134.053 457.541 143.379 457.362 145.856 cv
457.313 146.551 456.732 147.083 456.046 147.083 cv
cp
.372549 .227451 .105882 rgb
f
458.292 157.827 mo
454.698 157.827 451.165 156.663 448.807 154.331 cv
448.288 153.819 448.283 152.983 448.796 152.463 cv
449.309 151.946 450.145 151.94 450.664 152.454 cv
454.005 155.754 461.735 156.469 466.321 152.403 cv
466.867 151.92 467.703 151.971 468.186 152.516 cv
468.67 153.061 468.619 153.897 468.074 154.381 cv
465.48 156.68 461.856 157.827 458.292 157.827 cv
cp
.337255 .196078 .090196 rgb
f
432.532 126.17 mo
431.282 126.17 430.266 127.033 430.266 128.096 cv
430.266 136.049 li
430.266 137.11 431.282 137.975 432.532 137.975 cv
448.087 137.975 li
449.337 137.975 450.354 137.11 450.354 136.049 cv
450.354 128.096 li
450.354 127.033 449.337 126.17 448.087 126.17 cv
432.532 126.17 li
cp
448.087 140.485 mo
432.532 140.485 li
429.898 140.485 427.755 138.495 427.755 136.049 cv
427.755 128.096 li
427.755 125.649 429.898 123.66 432.532 123.66 cv
448.087 123.66 li
450.722 123.66 452.865 125.649 452.865 128.096 cv
452.865 136.049 li
452.865 138.495 450.722 140.485 448.087 140.485 cv
cp
.196078 .094118 .023529 rgb
f
468.64 126.17 mo
467.39 126.17 466.373 127.033 466.373 128.096 cv
466.373 136.049 li
466.373 137.11 467.39 137.975 468.64 137.975 cv
484.195 137.975 li
485.445 137.975 486.461 137.11 486.461 136.049 cv
486.461 128.096 li
486.461 127.033 485.445 126.17 484.195 126.17 cv
468.64 126.17 li
cp
484.195 140.485 mo
468.64 140.485 li
466.006 140.485 463.862 138.495 463.862 136.049 cv
463.862 128.096 li
463.862 125.649 466.006 123.66 468.64 123.66 cv
484.195 123.66 li
486.828 123.66 488.971 125.649 488.971 128.096 cv
488.971 136.049 li
488.971 138.495 486.828 140.485 484.195 140.485 cv
cp
f
451.703 130.012 mo
451.703 128.691 li
451.703 130.012 li
cp
464.69 131.641 mo
464.588 131.641 464.484 131.629 464.381 131.604 cv
463.773 131.469 459.623 131.332 451.723 131.332 cv
451.703 130.012 li
451.723 128.691 li
457.127 128.691 463.816 128.751 464.999 129.035 cv
465.709 129.207 466.145 129.92 465.975 130.629 cv
465.828 131.234 465.287 131.641 464.69 131.641 cv
cp
f
488.818 131.266 mo
488.055 131.266 487.506 131.069 487.143 130.521 cv
486.738 129.914 486.904 129.095 487.512 128.691 cv
487.93 128.414 488.447 128.405 488.861 128.625 cv
489.34 128.617 490.455 128.399 491.15 128.264 cv
492.297 128.04 493.025 127.898 493.566 127.922 cv
494.297 127.945 494.869 128.555 494.846 129.284 cv
494.82 130.014 494.193 130.597 493.482 130.562 cv
493.24 130.562 492.313 130.729 491.654 130.856 cv
490.492 131.083 489.555 131.266 488.818 131.266 cv
cp
f
428.517 130.583 mo
427.535 130.583 426.529 130.18 425.552 129.786 cv
424.947 129.543 424.322 129.292 423.885 129.227 cv
423.164 129.12 422.665 128.449 422.772 127.727 cv
422.879 127.006 423.55 126.511 424.272 126.614 cv
425.017 126.725 425.79 127.035 426.537 127.336 cv
427.273 127.631 428.19 128 428.615 127.936 cv
429.334 127.83 430.009 128.324 430.117 129.045 cv
430.225 129.767 429.729 130.439 429.007 130.547 cv
428.845 130.572 428.682 130.583 428.517 130.583 cv
cp
f
424.856 126.588 mo
425.283 117.737 425.397 101.727 433.213 101.727 cv
439.001 101.727 440.574 103.048 458.157 103.048 cv
473.715 103.048 478.236 101.287 484.061 101.287 cv
490.301 101.287 491.848 109.626 491.969 121.192 cv
491.992 123.574 492.158 125.961 492.295 128.339 cv
492.377 129.734 492.477 131.128 492.549 132.524 cv
492.578 133.09 492.725 134.61 493.467 134.465 cv
494.295 134.303 494.391 131.236 494.473 130.58 cv
495.068 125.968 495.229 121.236 495.227 116.593 cv
495.215 108.02 497.707 91.5117 482.193 81.2246 cv
472.653 74.8975 452.931 74.2676 441.951 77.8496 cv
434.304 80.3457 426.972 86.8467 424.247 94.418 cv
421.254 102.734 421.331 109.234 422.316 125.703 cv
422.423 127.49 422.633 129.277 422.881 131.048 cv
423.046 132.227 423.197 133.434 423.484 134.588 cv
424.107 137.106 424.978 135.309 424.951 133.743 cv
424.91 131.352 424.741 128.982 424.856 126.588 cv
cp
.2 .098039 .027451 rgb
f
474.785 179.42 mo
473.585 178.983 472.34 178.536 471.006 178.063 cv
471.006 178.063 li
472.341 178.536 473.586 178.983 474.785 179.42 cv
cp
.34902 .466667 .164706 rgb
f
475.032 179.51 mo
474.952 179.481 474.866 179.45 474.785 179.42 cv
473.586 178.983 472.341 178.536 471.006 178.063 cv
468.844 185.665 465.097 191.573 462.26 195.264 cv
464.291 195.147 466.299 194.942 468.279 194.655 cv
470.738 190.719 473.195 185.706 475.032 179.51 cv
475.032 179.51 li
cp
.27451 .34902 .109804 rgb
f
444.798 178.063 mo
444.046 178.331 443.317 178.594 442.607 178.852 cv
441.905 179.108 441.222 179.362 440.555 179.614 cv
441.984 185.186 444.961 190.377 448.084 194.665 cv
450.095 194.954 452.131 195.163 454.193 195.278 cv
451.026 191.59 446.909 185.682 444.799 178.063 cv
444.799 178.063 444.799 178.063 444.798 178.063 cv
cp
f
359.413 311.635 mo
359.413 350.318 328.054 381.68 289.369 381.68 cv
250.683 381.68 219.322 350.318 219.322 311.635 cv
219.322 272.949 250.683 241.588 289.369 241.588 cv
328.054 241.588 359.413 272.949 359.413 311.635 cv
cp
.960784 .427451 .396078 rgb
f
298.261 373.503 mo
281.003 373.503 li
281.003 352.372 li
298.261 352.372 li
298.261 373.503 li
cp
.878431 .666667 .47451 rgb
f
307.074 367.563 mo
306.884 367.189 li
306.832 367.082 306.726 367.013 306.609 367.009 cv
302.947 365.762 li
302.951 366.24 li
302.35 365.93 301.761 365.614 301.761 365.614 cv
289.632 367.731 li
277.486 365.725 li
277.486 365.725 276.921 365.991 276.285 366.275 cv
276.291 365.762 li
272.626 367.009 li
272.509 367.013 272.404 367.082 272.351 367.189 cv
272.16 367.568 li
265.982 369.798 261.455 371.788 258.314 374.421 cv
261.073 375.788 263.936 376.972 266.886 377.972 cv
270.01 379.03 273.232 379.874 276.537 380.486 cv
279.801 381.091 283.142 381.474 286.548 381.608 cv
287.485 381.646 288.423 381.68 289.369 381.68 cv
290.485 381.68 291.593 381.647 292.697 381.596 cv
296.101 381.437 299.439 381.025 302.699 380.397 cv
305.98 379.765 309.175 378.9 312.276 377.827 cv
315.187 376.82 318.009 375.629 320.731 374.263 cv
317.597 371.707 313.13 369.749 307.074 367.563 cv
cp
.54902 .454902 .329412 rgb
f
302.951 366.24 mo
302.35 365.93 301.761 365.614 301.761 365.614 cv
301.761 365.614 298.136 362.204 298.261 362.247 cv
298.386 362.292 289.632 367.731 289.632 367.731 cv
281.003 362.247 li
277.486 365.725 li
277.486 365.725 276.921 365.991 276.285 366.275 cv
276.261 368.606 li
276.537 380.486 li
279.801 381.091 283.142 381.474 286.548 381.608 cv
286.779 377.169 li
284.529 373.022 li
284.322 372.643 284.421 372.167 284.765 371.903 cv
288.642 368.935 li
288.707 368.675 288.89 368.456 289.14 368.345 cv
289.255 368.296 289.376 368.271 289.496 368.271 cv
289.539 368.271 289.582 368.274 289.625 368.28 cv
289.666 368.274 289.708 368.271 289.751 368.271 cv
289.871 368.271 289.99 368.295 290.101 368.345 cv
290.357 368.454 290.539 368.675 290.605 368.935 cv
294.482 371.903 li
294.826 372.167 294.925 372.643 294.718 373.023 cv
292.466 377.169 li
292.697 381.596 li
296.101 381.437 299.439 381.025 302.699 380.397 cv
302.974 368.606 li
302.951 366.24 li
cp
1 1 1 rgb
f
339.876 294.407 mo
339.876 294.407 337.607 294.38 334.384 290.025 cv
332.708 287.758 329.208 275.184 321.072 267.03 cv
314.255 260.202 303.613 255.887 287.521 255.887 cv
257.818 255.887 253.865 275.036 253.865 275.036 cv
253.865 275.036 240.869 281.64 243.128 310.035 cv
243.128 310.035 243.289 320.482 248.572 330.946 cv
253.855 341.41 250.443 345.044 248.382 345.683 cv
245.271 346.647 253.634 350.421 256.496 347.507 cv
256.496 347.507 257.376 350.683 254.736 352.372 cv
252.939 353.521 261.066 355.181 265.949 351.655 cv
265.191 353.209 264.183 354.694 263.593 355.463 cv
268.296 356.803 272.371 352.599 272.933 348.115 cv
273.037 347.298 272.98 346.47 272.736 345.749 cv
275.644 345.939 305.527 347.905 306.681 348.115 cv
307.894 348.335 311.582 356.562 320.99 355.159 cv
327.888 354.131 320.33 354.228 321.871 346.659 cv
321.871 346.659 325.478 348.409 328.162 346.236 cv
330.83 344.073 324.513 345.683 326.943 337.063 cv
326.943 337.063 340.582 321.425 333.757 297.048 cv
333.757 297.048 337.169 298.479 339.876 294.407 cv
cp
.2 .098039 .027451 rgb
f
264.345 355.185 mo
264.687 355.245 265.031 355.275 265.371 355.275 cv
269.212 355.275 272.06 351.53 272.496 348.06 cv
272.595 347.274 272.535 346.524 272.32 345.89 cv
272.273 345.751 272.298 345.597 272.388 345.48 cv
272.478 345.364 272.607 345.3 272.765 345.31 cv
276.121 345.529 305.574 347.467 306.759 347.683 cv
307.203 347.763 307.607 348.239 308.341 349.103 cv
310.054 351.122 313.248 354.88 318.88 354.88 cv
319.542 354.88 320.232 354.827 320.927 354.724 cv
321.484 354.641 323.117 354.397 323.482 354.169 cv
323.417 354.042 323.234 353.812 323.082 353.62 cv
322.224 352.542 320.632 350.537 321.439 346.571 cv
321.466 346.438 321.554 346.325 321.677 346.265 cv
321.796 346.204 321.939 346.204 322.064 346.263 cv
322.076 346.269 323.373 346.885 324.927 346.885 cv
326.078 346.885 327.074 346.552 327.884 345.894 cv
328.369 345.503 328.392 345.354 328.392 345.349 cv
328.369 345.276 328.128 345.079 327.953 344.935 cv
326.908 344.075 324.958 342.476 326.517 336.943 cv
326.537 336.882 326.568 336.823 326.611 336.774 cv
326.744 336.619 340.009 321.018 333.333 297.167 cv
333.289 297.005 333.339 296.83 333.466 296.718 cv
333.591 296.606 333.771 296.576 333.927 296.643 cv
333.931 296.644 334.449 296.853 335.212 296.853 cv
335.212 296.853 li
336.261 296.853 337.753 296.46 339.132 294.688 cv
338.16 294.361 336.304 293.358 334.031 290.287 cv
333.529 289.607 332.916 288.164 332.07 286.167 cv
330.005 281.295 326.548 273.142 320.759 267.341 cv
313.466 260.032 302.283 256.327 287.521 256.327 cv
272.363 256.327 264.138 261.44 259.908 265.73 cv
255.33 270.372 254.308 275.079 254.296 275.126 cv
254.269 275.257 254.183 275.368 254.066 275.429 cv
253.939 275.494 241.362 282.284 243.566 310.001 cv
243.57 310.132 243.792 320.502 248.966 330.748 cv
252.41 337.572 252.115 341.407 251.259 343.423 cv
250.453 345.324 249.072 345.931 248.513 346.104 cv
248.193 346.202 248.138 346.3 248.136 346.3 cv
248.15 346.731 250.552 348.151 253.318 348.151 cv
254.197 348.151 255.41 347.985 256.183 347.198 cv
256.292 347.086 256.457 347.04 256.607 347.081 cv
256.759 347.12 256.88 347.237 256.921 347.39 cv
256.931 347.424 257.847 350.876 255.001 352.724 cv
255.357 352.958 256.56 353.344 258.552 353.344 cv
261.289 353.344 263.892 352.599 265.691 351.299 cv
265.857 351.18 266.08 351.189 266.234 351.319 cv
266.388 351.448 266.435 351.667 266.345 351.849 cv
265.74 353.088 264.96 354.317 264.345 355.185 cv
cp
265.371 356.155 mo
264.74 356.155 264.103 356.065 263.472 355.886 cv
263.333 355.847 263.222 355.739 263.175 355.601 cv
263.13 355.462 263.156 355.311 263.244 355.194 cv
263.662 354.651 264.244 353.808 264.798 352.862 cv
262.466 354.026 259.974 354.225 258.552 354.225 cv
257.029 354.225 254.373 353.948 254.07 352.911 cv
254.021 352.75 253.97 352.339 254.498 352.001 cv
256.125 350.96 256.253 349.267 256.179 348.321 cv
255.435 348.788 254.462 349.032 253.318 349.032 cv
250.849 349.032 247.474 347.767 247.271 346.424 cv
247.232 346.178 247.255 345.572 248.251 345.263 cv
248.597 345.157 249.767 344.685 250.449 343.079 cv
251.23 341.234 251.474 337.667 248.179 331.145 cv
242.914 320.712 242.689 310.147 242.687 310.042 cv
240.55 283.191 251.835 275.689 253.486 274.743 cv
254.037 272.659 259.46 255.446 287.521 255.446 cv
302.525 255.446 313.917 259.239 321.382 266.72 cv
327.292 272.641 330.791 280.893 332.88 285.823 cv
333.673 287.692 334.298 289.167 334.74 289.764 cv
337.748 293.831 339.869 293.966 339.89 293.967 cv
340.048 293.974 340.195 294.065 340.265 294.207 cv
340.337 294.349 340.333 294.519 340.244 294.651 cv
338.55 297.198 336.572 297.732 335.212 297.732 cv
335.212 297.732 li
334.898 297.732 334.617 297.703 334.38 297.664 cv
337.658 310.032 335.632 320.065 333.322 326.349 cv
330.929 332.854 327.843 336.677 327.339 337.274 cv
325.982 342.177 327.564 343.476 328.511 344.255 cv
328.904 344.576 329.275 344.88 329.273 345.354 cv
329.271 345.838 328.849 346.245 328.439 346.578 cv
327.464 347.366 326.283 347.765 324.927 347.765 cv
323.787 347.765 322.787 347.481 322.208 347.271 cv
321.714 350.483 322.992 352.091 323.771 353.071 cv
324.189 353.598 324.519 354.013 324.333 354.484 cv
324.125 355.015 323.48 355.233 321.056 355.595 cv
320.318 355.704 319.587 355.761 318.88 355.761 cv
312.839 355.761 309.476 351.8 307.669 349.673 cv
307.246 349.175 306.765 348.608 306.589 348.546 cv
305.693 348.384 284.787 346.981 273.318 346.228 cv
273.437 346.833 273.457 347.493 273.369 348.171 cv
272.888 352.011 269.693 356.155 265.371 356.155 cv
cp
f
319.507 280.14 mo
314.05 272.288 304.121 266.5 294.732 266.127 cv
294.732 266.127 294.548 266.12 294.248 266.107 cv
294.257 265.739 li
294.257 265.739 291.982 265.83 289.632 265.924 cv
287.283 265.83 285.007 265.739 285.007 265.739 cv
285.017 266.107 li
284.716 266.12 284.533 266.127 284.533 266.127 cv
275.144 266.5 265.447 272.454 259.757 280.14 cv
250.333 292.866 254.55 321.344 256.587 331.368 cv
262.281 352.665 276.445 356.304 289.632 356.304 cv
302.82 356.304 317.457 352.665 322.677 331.368 cv
324.714 322.435 329.134 293.983 319.507 280.14 cv
cp
.878431 .666667 .47451 rgb
f
275.748 318.856 mo
275.748 321.453 273.974 323.559 271.787 323.559 cv
269.599 323.559 267.824 321.453 267.824 318.856 cv
267.824 316.26 269.599 314.155 271.787 314.155 cv
273.974 314.155 275.748 316.26 275.748 318.856 cv
cp
.227451 .117647 .039216 rgb
f
311.792 318.856 mo
311.792 321.453 310.017 323.559 307.83 323.559 cv
305.642 323.559 303.869 321.453 303.869 318.856 cv
303.869 316.26 305.642 314.155 307.83 314.155 cv
310.017 314.155 311.792 316.26 311.792 318.856 cv
cp
f
266.246 310.228 mo
265.917 310.228 265.591 310.106 265.337 309.864 cv
264.808 309.362 264.785 308.526 265.287 307.998 cv
267.552 305.61 274.185 304.136 278.078 306.823 cv
278.677 307.239 278.828 308.062 278.414 308.661 cv
278 309.261 277.175 309.412 276.578 308.997 cv
273.736 307.034 268.617 308.327 267.203 309.815 cv
266.943 310.089 266.593 310.228 266.246 310.228 cv
cp
f
313.638 310.338 mo
313.291 310.338 312.943 310.2 312.683 309.929 cv
310.658 307.804 305.833 307.863 302.943 310.047 cv
302.361 310.486 301.533 310.371 301.091 309.789 cv
300.654 309.207 300.769 308.379 301.351 307.939 cv
305.333 304.931 311.646 305.011 314.595 308.106 cv
315.097 308.634 315.078 309.47 314.55 309.974 cv
314.294 310.218 313.966 310.338 313.638 310.338 cv
cp
f
287.523 334.908 mo
287.49 334.908 287.458 334.907 287.425 334.905 cv
286.699 334.853 286.152 334.22 286.203 333.493 cv
286.375 331.114 286.64 321.772 286.64 318.913 cv
286.64 318.184 287.232 317.593 287.96 317.593 cv
288.691 317.593 289.281 318.184 289.281 318.913 cv
289.281 321.879 289.017 331.206 288.837 333.683 cv
288.789 334.378 288.208 334.908 287.523 334.908 cv
cp
.698039 .490196 .337255 rgb
f
288.796 345.454 mo
288.466 345.454 288.144 345.446 287.832 345.431 cv
284.025 345.237 280.919 344.008 279.312 342.059 cv
278.849 341.496 278.927 340.663 279.492 340.2 cv
280.054 339.735 280.886 339.815 281.351 340.378 cv
282.453 341.716 284.988 342.641 287.966 342.792 cv
291.63 342.981 295.13 341.993 296.863 340.279 cv
297.384 339.767 298.218 339.772 298.732 340.29 cv
299.246 340.81 299.24 341.646 298.72 342.158 cv
296.25 344.601 292.142 345.454 288.796 345.454 cv
cp
.639216 .431373 .27451 rgb
f
261.339 291.985 mo
261.339 291.985 264.421 299.153 273.666 301.292 cv
273.666 301.292 274.546 299.249 269.923 284.942 cv
269.923 284.942 281.003 299.249 298.978 301.292 cv
294.599 289.413 li
294.599 289.413 301.722 295.964 315.267 302.286 cv
323.632 306.19 329.576 305.31 329.576 305.31 cv
329.576 305.31 338.05 256.106 277.242 264.691 cv
277.242 264.691 243.128 269.262 251.875 316.827 cv
251.875 316.827 260.019 306.073 261.339 291.985 cv
cp
.2 .098039 .027451 rgb
f
290.582 262.806 mo
290.578 262.806 li
286.416 262.806 281.886 263.146 277.121 263.819 cv
276.63 263.886 264.89 265.573 256.82 276.69 cv
249.82 286.334 247.865 299.892 251.009 316.987 cv
251.07 317.331 251.332 317.604 251.671 317.685 cv
251.738 317.7 251.806 317.708 251.875 317.708 cv
252.146 317.708 252.408 317.583 252.576 317.359 cv
252.894 316.939 259.935 307.514 261.9 294.64 cv
263.636 297.058 267.187 300.697 273.468 302.149 cv
273.533 302.165 273.599 302.173 273.666 302.173 cv
274.011 302.173 274.333 301.97 274.474 301.642 cv
274.687 301.146 275.058 298.8 271.964 288.518 cv
276.341 292.918 285.755 300.675 298.878 302.167 cv
298.914 302.171 298.947 302.173 298.978 302.173 cv
299.248 302.173 299.503 302.05 299.671 301.836 cv
299.861 301.596 299.912 301.274 299.806 300.987 cv
296.55 292.159 li
299.738 294.616 305.888 298.881 314.896 303.085 cv
320.843 305.86 325.634 306.275 327.958 306.275 cv
329.054 306.275 329.677 306.185 329.705 306.181 cv
330.08 306.124 330.378 305.833 330.443 305.459 cv
330.57 304.731 333.388 287.509 322.882 275.038 cv
316.042 266.922 305.177 262.806 290.582 262.806 cv
290.582 262.806 li
cp
290.582 263.686 mo
336.74 263.688 329.576 305.31 329.576 305.31 cv
329.576 305.31 329.001 305.395 327.958 305.395 cv
325.646 305.395 321.031 304.977 315.267 302.286 cv
301.722 295.964 294.599 289.413 294.599 289.413 cv
298.978 301.292 li
281.003 299.249 269.923 284.942 269.923 284.942 cv
274.546 299.249 273.666 301.292 273.666 301.292 cv
264.421 299.153 261.339 291.985 261.339 291.985 cv
260.019 306.073 251.875 316.827 251.875 316.827 cv
243.128 269.262 277.242 264.691 277.242 264.691 cv
282.123 264.002 286.554 263.686 290.582 263.686 cv
290.582 263.686 li
cp
f
299.419 354.884 mo
296.382 355.671 293.111 354.938 292.849 352.664 cv
292.537 349.983 287.882 349.983 287.57 352.664 cv
287.306 354.938 284.56 355.555 281.462 355.049 cv
279.664 354.755 278.267 353.624 277.791 353.571 cv
276.556 353.435 276.63 354.62 277.736 355.823 cv
278.671 356.841 279.771 357.646 280.984 358.296 cv
286.058 361.019 294.402 360.909 299.474 358.186 cv
300.464 357.653 303.667 355.466 303.689 354.668 cv
303.738 352.628 300.613 354.575 299.419 354.884 cv
cp
f
294.718 373.023 mo
294.925 372.643 294.826 372.167 294.482 371.903 cv
290.605 368.935 li
290.539 368.675 290.357 368.454 290.101 368.345 cv
289.99 368.295 289.871 368.271 289.751 368.271 cv
289.708 368.271 289.666 368.274 289.625 368.28 cv
289.582 368.274 289.539 368.271 289.496 368.271 cv
289.376 368.271 289.255 368.296 289.14 368.345 cv
288.89 368.456 288.707 368.675 288.642 368.935 cv
284.765 371.903 li
284.421 372.167 284.322 372.643 284.529 373.022 cv
286.779 377.169 li
286.548 381.608 li
287.485 381.646 288.423 381.68 289.369 381.68 cv
290.485 381.68 291.593 381.647 292.697 381.596 cv
292.466 377.169 li
294.718 373.023 li
cp
.278431 .172549 .094118 rgb
f
276.285 366.275 mo
276.291 365.762 li
272.626 367.009 li
272.509 367.013 272.404 367.082 272.351 367.189 cv
272.16 367.568 li
266.886 377.972 li
270.01 379.03 273.232 379.874 276.537 380.486 cv
276.261 368.606 li
276.285 366.275 li
cp
.678431 .556863 .423529 rgb
f
306.884 367.189 mo
306.832 367.082 306.726 367.013 306.609 367.009 cv
302.947 365.762 li
302.951 366.24 li
302.974 368.606 li
302.699 380.397 li
305.98 379.765 309.175 378.9 312.276 377.827 cv
307.074 367.563 li
306.884 367.189 li
cp
f
280.535 376.626 mo
276.857 366.462 li
276.732 366.114 276.912 365.731 277.257 365.606 cv
277.609 365.479 277.99 365.66 278.115 366.007 cv
281.142 374.373 li
289.039 367.759 li
289.32 367.521 289.742 367.558 289.982 367.841 cv
290.218 368.125 290.181 368.546 289.898 368.783 cv
280.535 376.626 li
cp
.690196 .678431 .698039 rgb
f
298.396 376.62 mo
289.039 368.783 li
288.755 368.546 288.72 368.125 288.957 367.841 cv
289.195 367.558 289.617 367.522 289.898 367.759 cv
297.8 374.378 li
300.865 366.109 li
300.992 365.763 301.378 365.586 301.724 365.715 cv
302.07 365.843 302.246 366.228 302.119 366.573 cv
298.396 376.62 li
cp
f
801.687 175.987 mo
790.283 175.987 li
790.283 158.379 li
801.687 158.379 li
801.687 175.987 li
cp
1 .8 .6 rgb
f
865.755 125.35 mo
865.755 164.034 834.394 195.395 795.709 195.395 cv
757.023 195.395 725.663 164.034 725.663 125.35 cv
725.663 86.6641 757.023 55.3027 795.709 55.3027 cv
834.394 55.3027 865.755 86.6641 865.755 125.35 cv
cp
.529412 .776471 .858824 rgb
f
835.699 140.975 mo
835.699 151.495 843.681 160.008 838.874 171.481 cv
831.38 189.366 814.492 185.45 801.989 185.45 cv
785.607 185.45 li
772.756 185.45 757.576 186.881 752.146 169.641 cv
748.404 157.764 755.064 151.495 755.064 142.012 cv
754.486 115.211 li
754.486 95.3906 769.268 74.1387 795.451 74.1387 cv
795.451 74.1387 li
823.727 74.1387 836.419 95.3906 836.419 115.211 cv
835.699 140.975 li
cp
.756863 .580392 .298039 rgb
f
822.747 91.748 mo
816.903 83.4609 810.904 83.207 801.229 82.8047 cv
790.715 82.8047 li
781.038 83.207 775.039 83.4609 769.197 91.748 cv
763.348 100.041 762.561 92.7227 763.021 102.727 cv
763.371 110.283 760.859 114.451 763.984 135.473 cv
767.11 156.497 783.003 163.237 795.971 163.237 cv
808.883 163.237 823.462 157.602 827.96 135.473 cv
832.456 113.348 825.569 119.756 825.919 112.195 cv
826.379 102.191 828.593 100.041 822.747 91.748 cv
cp
1 .8 .6 rgb
f
801.687 175.987 mo
790.283 175.987 li
790.283 158.379 li
801.687 158.379 li
801.687 175.987 li
cp
f
823.578 184.715 mo
820.647 176.743 816.365 170.659 805 166.868 cv
804.907 166.836 804.812 166.846 804.721 166.877 cv
804.688 166.862 804.646 166.84 804.612 166.823 cv
804.52 166.555 804.262 166.383 803.963 166.413 cv
803.941 166.417 803.924 166.428 803.904 166.434 cv
803.039 165.918 802.082 165.252 802.082 165.252 cv
799.031 170.653 li
798.883 170.583 li
796.02 175.602 li
793.352 170.745 li
793.172 170.825 li
790.047 165.252 li
790.047 165.252 789.078 165.926 788.209 166.444 cv
788.179 166.434 788.153 166.417 788.121 166.413 cv
787.817 166.381 787.547 166.567 787.463 166.85 cv
787.445 166.858 787.425 166.87 787.408 166.877 cv
787.316 166.846 787.221 166.836 787.128 166.868 cv
775.763 170.659 771.482 176.743 768.551 184.715 cv
768.029 186.133 767.487 187.643 766.936 189.209 cv
769.611 190.417 772.369 191.473 775.211 192.34 cv
775.625 192.467 776.047 192.577 776.463 192.696 cv
782.076 194.297 787.975 195.213 794.068 195.354 cv
794.479 195.364 794.885 195.383 795.295 195.385 cv
795.434 195.385 795.57 195.395 795.709 195.395 cv
802.684 195.395 809.413 194.362 815.77 192.465 cv
816.182 192.342 816.594 192.219 817.002 192.09 cv
819.78 191.204 822.479 190.143 825.095 188.932 cv
824.577 187.467 824.068 186.049 823.578 184.715 cv
cp
1 .611765 .741176 rgb
f
793.887 143.209 mo
793.852 143.209 793.814 143.206 793.777 143.204 cv
793.119 143.145 792.633 142.565 792.692 141.905 cv
792.856 140.084 793.108 132.958 793.108 130.777 cv
793.108 130.115 793.645 129.578 794.307 129.578 cv
794.968 129.578 795.504 130.115 795.504 130.777 cv
795.504 132.848 795.26 140.083 795.078 142.12 cv
795.021 142.741 794.5 143.209 793.887 143.209 cv
cp
.729412 .52549 .388235 rgb
f
795.239 153.51 mo
791.082 153.51 787.563 151.952 785.76 149.293 cv
785.389 148.745 785.531 148.002 786.078 147.629 cv
786.623 147.26 787.369 147.401 787.741 147.95 cv
789.154 150.034 792.121 151.225 795.673 151.108 cv
799.027 151.008 802.086 149.733 803.109 148.01 cv
803.447 147.44 804.182 147.254 804.75 147.592 cv
805.318 147.93 805.506 148.665 805.168 149.233 cv
803.703 151.698 800.005 153.375 795.745 153.5 cv
795.576 153.506 795.407 153.51 795.239 153.51 cv
cp
f
781.967 137.536 mo
781.967 139.827 779.278 141.686 775.962 141.686 cv
772.645 141.686 769.957 139.827 769.957 137.536 cv
769.957 135.245 772.645 133.387 775.962 133.387 cv
779.278 133.387 781.967 135.245 781.967 137.536 cv
cp
.988235 .690196 .584314 rgb
f
821.929 137.536 mo
821.929 139.827 819.241 141.686 815.926 141.686 cv
812.609 141.686 809.92 139.827 809.92 137.536 cv
809.92 135.245 812.609 133.387 815.926 133.387 cv
819.241 133.387 821.929 135.245 821.929 137.536 cv
cp
f
796.008 177.469 mo
795.905 177.469 795.801 177.442 795.705 177.387 cv
795.411 177.219 795.309 176.848 795.477 176.553 cv
798.883 170.583 li
804.256 173.129 li
803.438 167.104 li
803.393 166.768 803.627 166.458 803.963 166.413 cv
804.305 166.379 804.607 166.602 804.652 166.938 cv
805.774 175.208 li
799.383 172.176 li
796.541 177.159 li
796.428 177.358 796.221 177.469 796.008 177.469 cv
cp
.839216 .447059 .580392 rgb
f
814.904 97.4063 mo
814.904 97.4063 800.141 110.873 759.128 119.703 cv
759.128 119.703 758.545 85.6816 778.818 81.6914 cv
799.09 77.7031 820.235 85.3359 820.235 85.3359 cv
820.235 85.3359 833.704 103.564 832.456 124.914 cv
832.456 124.914 820.485 121.348 814.904 97.4063 cv
cp
.756863 .580392 .298039 rgb
f
816.582 129.969 mo
816.582 132.758 816.27 131.318 812.33 131.318 cv
808.389 131.318 808.078 132.758 808.078 129.969 cv
808.078 127.182 809.984 124.92 812.33 124.92 cv
814.676 124.92 816.582 127.182 816.582 129.969 cv
cp
.227451 .117647 .039216 rgb
f
782.197 129.969 mo
782.197 132.758 781.887 131.318 777.945 131.318 cv
774.004 131.318 773.695 132.758 773.695 129.969 cv
773.695 127.182 775.6 124.92 777.945 124.92 cv
780.293 124.92 782.197 127.182 782.197 129.969 cv
cp
f
772.715 121.008 mo
772.318 121.008 771.926 120.826 771.672 120.482 cv
771.246 119.904 771.367 119.094 771.943 118.666 cv
774.354 116.883 781.602 116.246 784.213 118.777 cv
784.727 119.277 784.74 120.098 784.242 120.611 cv
783.742 121.127 782.922 121.137 782.407 120.641 cv
780.817 119.1 775.055 119.592 773.485 120.752 cv
773.253 120.922 772.982 121.008 772.715 121.008 cv
cp
.647059 .47451 .266667 rgb
f
807.304 120.863 mo
806.887 120.863 806.477 120.66 806.227 120.289 cv
805.827 119.695 805.985 118.889 806.58 118.49 cv
809.14 116.768 815.57 115.891 819.43 118.49 cv
820.024 118.889 820.183 119.695 819.782 120.289 cv
819.381 120.885 818.575 121.041 817.981 120.641 cv
815.057 118.674 809.775 119.465 808.027 120.641 cv
807.805 120.791 807.554 120.863 807.304 120.863 cv
cp
f
780.457 184.327 mo
780.453 183.973 780.164 183.69 779.813 183.69 cv
779.81 183.69 779.807 183.69 779.803 183.69 cv
779.446 183.694 779.161 183.987 779.166 184.342 cv
779.182 185.555 778.025 187.258 777.563 187.831 cv
776.393 189.393 775.66 190.918 775.211 192.34 cv
775.625 192.467 776.047 192.577 776.463 192.696 cv
776.868 191.411 777.527 190.034 778.582 188.625 cv
778.66 188.528 780.482 186.252 780.457 184.327 cv
cp
.839216 .447059 .580392 rgb
f
813.139 184.342 mo
813.145 183.987 812.859 183.694 812.502 183.69 cv
812.5 183.69 812.496 183.69 812.493 183.69 cv
812.141 183.69 811.853 183.973 811.848 184.327 cv
811.822 186.252 813.645 188.528 813.708 188.604 cv
814.711 189.942 815.354 191.243 815.77 192.465 cv
816.182 192.342 816.594 192.219 817.002 192.09 cv
816.545 190.733 815.835 189.292 814.727 187.813 cv
814.279 187.258 813.123 185.555 813.139 184.342 cv
cp
f
796.621 176.856 mo
796.621 176.698 li
796.125 175.795 li
793.352 170.745 li
793.172 170.825 li
787.823 173.168 li
788.646 167.104 li
788.688 166.799 788.493 166.526 788.209 166.444 cv
788.179 166.434 788.153 166.417 788.121 166.413 cv
787.817 166.381 787.547 166.567 787.463 166.85 cv
787.453 166.879 787.437 166.905 787.432 166.938 cv
786.314 175.168 li
792.817 172.317 li
795.396 177.012 li
795.381 179.153 795.07 182.668 794.742 186.387 cv
794.461 189.583 794.174 192.852 794.068 195.354 cv
794.479 195.364 794.885 195.383 795.295 195.385 cv
795.398 192.918 795.682 189.67 795.963 186.495 cv
796.302 182.657 796.621 179.034 796.621 176.856 cv
cp
f
528.193 311.635 mo
528.193 350.318 496.834 381.68 458.148 381.68 cv
419.463 381.68 388.103 350.318 388.103 311.635 cv
388.103 272.949 419.463 241.588 458.148 241.588 cv
496.834 241.588 528.193 272.949 528.193 311.635 cv
cp
.431373 .733333 .772549 rgb
f
463.812 367.523 mo
452.03 367.523 li
452.03 348.334 li
463.812 348.334 li
463.812 367.523 li
cp
1 .8 .6 rgb
f
480.538 371.797 mo
477.841 363.836 476.591 362.58 467.159 358.357 cv
467.034 358.303 463.812 356.434 463.812 356.434 cv
457.957 368.207 li
455.089 362.984 li
452.03 356.434 li
452.03 356.434 449.28 358.092 449.187 358.133 cv
439.306 362.531 438.009 363.807 435.302 371.797 cv
434.976 372.762 434.476 374.762 433.881 377.355 cv
441.175 380.051 449.044 381.553 457.251 381.656 cv
457.551 381.66 457.847 381.68 458.148 381.68 cv
458.271 381.68 458.393 381.67 458.517 381.67 cv
466.757 381.627 474.661 380.164 481.995 377.51 cv
481.386 374.838 480.871 372.781 480.538 371.797 cv
cp
.776471 .231373 .129412 rgb
f
486.481 321.373 mo
486.481 321.373 496.69 328.063 496.69 338.152 cv
496.69 354.58 488.78 355.709 490.61 359.697 cv
491.267 361.123 489.698 362.094 485.776 360.557 cv
480.14 358.344 470.276 349.979 477.06 334.469 cv
483.845 318.959 483.825 319.465 486.481 321.373 cv
cp
.537255 .388235 .286275 rgb
f
421.608 319.502 mo
421.608 319.502 416.017 290.98 428.28 277.51 cv
439.489 265.197 453.72 265.125 460.454 265.125 cv
467.188 265.125 491.169 269.705 494.522 292.314 cv
498.282 317.668 490.306 316.707 490.306 316.707 cv
490.306 316.707 463.146 335.271 452.286 330.988 cv
435.812 324.486 421.608 319.502 421.608 319.502 cv
cp
f
434.085 319.684 mo
434.675 324.445 431.931 328.707 427.954 329.199 cv
423.978 329.691 420.276 326.229 419.687 321.465 cv
419.097 316.701 421.843 312.441 425.819 311.949 cv
429.796 311.457 433.495 314.92 434.085 319.684 cv
cp
1 .8 .6 rgb
f
481.54 319.684 mo
480.948 324.445 483.692 328.707 487.671 329.199 cv
491.646 329.691 495.349 326.229 495.938 321.465 cv
496.528 316.701 493.782 312.441 489.804 311.949 cv
485.827 311.457 482.128 314.92 481.54 319.684 cv
cp
f
484.696 281.293 mo
478.853 273.006 472.853 272.748 463.179 272.348 cv
452.663 272.348 li
442.987 272.748 436.987 273.006 431.146 281.293 cv
425.298 289.584 427.513 291.734 427.974 301.738 cv
428.323 309.297 423.806 303.994 426.931 325.016 cv
430.058 346.037 448.315 352.779 457.921 352.779 cv
467.526 352.779 484.413 347.143 488.911 325.016 cv
493.407 302.889 487.517 309.297 487.866 301.738 cv
488.327 291.734 490.542 289.584 484.696 281.293 cv
cp
f
455.835 332.752 mo
455.8 332.752 455.763 332.75 455.728 332.746 cv
455.067 332.688 454.583 332.105 454.642 331.447 cv
454.806 329.631 455.058 322.5 455.058 320.32 cv
455.058 319.658 455.595 319.121 456.255 319.121 cv
456.917 319.121 457.452 319.658 457.452 320.32 cv
457.452 322.393 457.208 329.625 457.026 331.66 cv
456.972 332.283 456.448 332.752 455.835 332.752 cv
cp
.729412 .52549 .388235 rgb
f
457.442 342.232 mo
453.999 342.232 450.001 341.387 447.812 338.967 cv
447.368 338.477 447.405 337.719 447.897 337.275 cv
448.388 336.834 449.146 336.869 449.587 337.359 cv
451.169 339.109 454.747 340.066 458.679 339.797 cv
461.716 339.59 464.298 338.662 465.099 337.488 cv
465.472 336.941 466.216 336.803 466.763 337.176 cv
467.31 337.549 467.448 338.293 467.077 338.838 cv
465.825 340.668 462.747 341.918 458.841 342.186 cv
458.39 342.217 457.923 342.232 457.442 342.232 cv
cp
f
435.47 310.541 mo
435.071 310.541 434.679 310.359 434.425 310.016 cv
433.999 309.439 434.12 308.627 434.696 308.203 cv
437.108 306.418 444.353 305.779 446.968 308.313 cv
447.481 308.813 447.493 309.633 446.995 310.148 cv
446.495 310.662 445.677 310.674 445.161 310.176 cv
443.569 308.635 437.808 309.127 436.239 310.287 cv
436.009 310.459 435.737 310.541 435.47 310.541 cv
cp
.419608 .27451 .176471 rgb
f
481.458 310.398 mo
481.21 310.398 480.958 310.326 480.735 310.176 cv
477.812 308.209 472.53 309 470.78 310.176 cv
470.187 310.576 469.38 310.418 468.979 309.824 cv
468.581 309.23 468.739 308.426 469.333 308.023 cv
471.892 306.303 478.321 305.424 482.185 308.023 cv
482.778 308.426 482.935 309.23 482.536 309.824 cv
482.284 310.197 481.876 310.398 481.458 310.398 cv
cp
f
479.335 319.504 mo
479.335 322.291 479.024 320.854 475.085 320.854 cv
471.144 320.854 470.831 322.291 470.831 319.504 cv
470.831 316.717 472.737 314.455 475.085 314.455 cv
477.433 314.455 479.335 316.717 479.335 319.504 cv
cp
.227451 .117647 .039216 rgb
f
443.915 330.518 mo
443.915 332.809 441.226 334.666 437.911 334.666 cv
434.593 334.666 431.907 332.809 431.907 330.518 cv
431.907 328.227 434.593 326.369 437.911 326.369 cv
441.226 326.369 443.915 328.227 443.915 330.518 cv
cp
.988235 .690196 .584314 rgb
f
483.878 330.518 mo
483.878 332.809 481.19 334.666 477.874 334.666 cv
474.558 334.666 471.868 332.809 471.868 330.518 cv
471.868 328.227 474.558 326.369 477.874 326.369 cv
481.19 326.369 483.878 328.227 483.878 330.518 cv
cp
f
457.745 369.77 mo
457.64 369.77 457.53 369.744 457.433 369.688 cv
457.13 369.514 457.024 369.127 457.196 368.824 cv
460.716 362.656 li
466.269 365.287 li
465.421 359.061 li
465.376 358.715 465.618 358.395 465.964 358.35 cv
466.315 358.301 466.63 358.545 466.677 358.891 cv
467.837 367.432 li
461.233 364.303 li
458.296 369.451 li
458.179 369.656 457.964 369.77 457.745 369.77 cv
cp
.639216 .14902 .086275 rgb
f
444.952 319.504 mo
444.952 322.291 444.64 320.854 440.7 320.854 cv
436.759 320.854 436.448 322.291 436.448 319.504 cv
436.448 316.717 438.354 314.455 440.7 314.455 cv
443.048 314.455 444.952 316.717 444.952 319.504 cv
cp
.227451 .117647 .039216 rgb
f
490.61 314.02 mo
425.823 314.02 li
425.108 314.02 424.526 313.439 424.526 312.723 cv
424.526 312.008 425.108 311.428 425.823 311.428 cv
490.61 311.428 li
491.327 311.428 491.907 312.008 491.907 312.723 cv
491.907 313.439 491.327 314.02 490.61 314.02 cv
cp
f
444.812 326.402 mo
441.933 326.402 438.542 326.301 436.185 326.23 cv
435.067 326.197 434.231 326.172 433.88 326.172 cv
432.812 326.172 431.267 326.045 430.183 324.947 cv
428.706 323.451 428.735 320.957 428.79 316.826 cv
428.8 315.969 428.812 315.029 428.812 314.01 cv
428.812 313.293 429.394 312.713 430.108 312.713 cv
430.825 312.713 431.405 313.293 431.405 314.01 cv
431.405 315.043 431.394 315.99 431.382 316.859 cv
431.341 320.076 431.312 322.4 432.028 323.125 cv
432.138 323.238 432.476 323.578 433.88 323.578 cv
434.241 323.578 435.108 323.604 436.263 323.639 cv
439.599 323.738 445.806 323.924 448.562 323.709 cv
450.396 323.566 450.597 323.307 450.563 316 cv
450.56 315.279 450.558 314.508 450.558 313.676 cv
450.558 312.961 451.136 312.381 451.854 312.381 cv
452.569 312.381 453.149 312.961 453.149 313.676 cv
453.149 314.504 453.153 315.273 453.155 315.988 cv
453.187 322.826 453.202 325.947 448.763 326.295 cv
447.751 326.373 446.356 326.402 444.812 326.402 cv
cp
f
472.171 326.768 mo
470.212 326.768 468.595 326.717 467.726 326.574 cv
462.644 325.734 462.694 322.594 462.786 316.891 cv
462.802 315.93 462.819 314.861 462.819 313.676 cv
462.819 312.961 463.399 312.381 464.116 312.381 cv
464.831 312.381 465.413 312.961 465.413 313.676 cv
465.413 314.877 465.394 315.959 465.378 316.934 cv
465.276 323.109 465.46 323.572 468.149 324.016 cv
469.894 324.303 476.292 324.129 479.366 324.045 cv
480.37 324.02 481.128 323.998 481.46 323.998 cv
483.647 323.998 483.876 323.633 484.122 322.936 cv
484.603 321.563 484.603 318.727 484.603 314.029 cv
485.897 314.01 li
487.194 314.029 li
487.194 319.172 487.194 322.004 486.567 323.795 cv
485.661 326.375 483.456 326.59 481.46 326.59 cv
481.138 326.59 480.407 326.609 479.437 326.639 cv
476.96 326.705 474.353 326.768 472.171 326.768 cv
cp
f
493.372 297.012 mo
493.339 296.924 493.302 296.836 493.265 296.746 cv
491.79 293.203 491.665 289.527 489.636 286.242 cv
487.204 282.301 484.636 277.893 480.595 275.287 cv
480.409 275.166 480.212 275.051 480.017 274.934 cv
475.364 270.99 469.175 271.355 462.562 270.484 cv
447.276 268.473 433.802 270.613 425.823 283.082 cv
422.761 287.869 421.618 296.256 420.632 301.883 cv
420.003 305.461 419.931 311.672 420.851 315.211 cv
421.405 317.354 422.896 321.283 425.624 318.941 cv
427.446 317.373 426.614 308.373 426.614 308.373 cv
428.437 309.453 431.759 308 433.124 306.814 cv
434.39 305.717 437.14 302.871 436.448 300.93 cv
438.7 307.242 450.868 302.873 453.056 294.445 cv
456.065 302.338 468.854 294.723 471.868 288.57 cv
472.339 292.281 473.435 295.281 476.499 297.242 cv
478.851 298.748 483.101 298.764 485.255 296.727 cv
482.854 299.832 483.935 310.271 489.229 309.906 cv
488.905 311.277 487.64 315.504 490.306 316.707 cv
491.825 317.393 493.499 315.49 494.015 314.34 cv
494.858 312.467 494.364 307.947 494.456 305.891 cv
494.608 302.516 494.581 300.045 493.372 297.012 cv
cp
.537255 .388235 .286275 rgb
f
458.378 369.137 mo
458.378 368.975 li
457.957 368.207 li
455.089 362.984 li
455.001 362.824 li
449.288 365.328 li
450.14 359.061 li
450.187 358.715 449.942 358.395 449.599 358.35 cv
449.249 358.301 448.931 358.545 448.884 358.891 cv
447.731 367.393 li
454.448 364.447 li
457.112 369.301 li
457.116 371.211 457.149 373.113 457.185 375.02 cv
457.226 377.195 457.263 379.438 457.251 381.656 cv
457.551 381.66 457.847 381.68 458.148 381.68 cv
458.271 381.68 458.393 381.67 458.517 381.67 cv
458.528 379.436 458.489 377.182 458.45 374.998 cv
458.415 373.045 458.378 371.092 458.378 369.137 cv
cp
.639216 .14902 .086275 rgb
f
359.413 125.35 mo
359.413 164.034 328.053 195.395 289.368 195.395 cv
250.682 195.395 219.322 164.034 219.322 125.35 cv
219.322 86.6646 250.682 55.3032 289.368 55.3032 cv
328.053 55.3032 359.413 86.6646 359.413 125.35 cv
cp
.952941 .705882 .243137 rgb
f
287.826 81.5669 mo
284.531 73.2681 263.893 77.4536 262.473 87.8579 cv
248.211 90.3071 246.588 105.256 250.183 114.422 cv
246.056 114.174 243.412 122.157 247.145 125.417 cv
238.695 126.667 238.695 136.354 243.083 139.811 cv
236.08 143.772 238.241 154.415 244.092 155.133 cv
236.578 158.911 240.735 169.801 246.479 169.846 cv
243.562 179.956 253.041 184.596 257.473 180.993 cv
257.603 184.321 261.967 186.495 264.817 186.387 cv
268.29 186.256 271.738 185.461 275.306 185.461 cv
279.628 185.459 284.282 186.249 288.556 185.959 cv
294.029 185.588 299.243 185.362 304.524 183.975 cv
306.037 183.575 308.224 182.852 309.892 183.311 cv
311.947 183.875 313.574 184.959 315.813 185.94 cv
319.385 187.502 325.698 184.596 325.465 177.604 cv
330.359 180.692 335.845 175.364 332.225 168.221 cv
337.674 168.866 342.038 163.196 337.685 156.323 cv
343.66 153.249 342.038 145.083 338.41 144.086 cv
343.495 142.352 343.161 135.618 337.881 132.844 cv
340.629 130.737 338.944 125.346 334.589 124.854 cv
336.177 118.999 331.622 115.866 327.664 116.325 cv
331.622 115.172 332.067 107.356 325.995 106.762 cv
331.622 100.872 324.166 91.5161 318.886 91.395 cv
321.029 72.5024 292.115 76.0962 287.826 81.5669 cv
cp
.847059 .427451 .145098 rgb
f
265.329 131.098 mo
265.918 135.862 263.173 140.12 259.198 140.614 cv
255.22 141.106 251.518 137.643 250.928 132.879 cv
250.338 128.118 253.084 123.856 257.062 123.366 cv
261.038 122.872 264.739 126.334 265.329 131.098 cv
cp
1 .831373 .682353 rgb
f
312.782 131.098 mo
312.192 135.862 314.936 140.12 318.913 140.614 cv
322.889 141.106 326.592 137.643 327.181 132.879 cv
327.771 128.118 325.025 123.856 321.048 123.366 cv
317.071 122.872 313.371 126.334 312.782 131.098 cv
cp
f
313.561 101.538 mo
307.717 93.2505 301.787 92.4595 292.112 92.0591 cv
283.531 93.3892 li
273.854 93.7915 270.184 92.4185 264.343 100.706 cv
258.496 109 258.754 103.147 259.216 113.153 cv
259.566 120.711 255.049 115.409 258.174 136.43 cv
261.3 157.452 279.557 164.194 289.161 164.194 cv
298.769 164.194 315.657 158.557 320.155 136.43 cv
324.651 114.303 318.759 120.711 319.109 113.153 cv
319.57 103.147 319.408 109.833 313.561 101.538 cv
cp
f
274.214 191.981 mo
274.532 190.665 274.855 189.37 275.185 188.112 cv
275.185 188.112 273.941 189.602 274.214 191.981 cv
cp
1 .8 .6 rgb
f
303.143 188.112 mo
303.471 189.37 303.793 190.665 304.111 191.981 cv
304.384 189.602 303.143 188.112 303.143 188.112 cv
cp
f
295.053 184.958 mo
283.272 184.958 li
283.272 160.747 li
295.053 160.747 li
295.053 184.958 li
cp
1 .831373 .682353 rgb
f
287.079 144.167 mo
287.042 144.167 287.006 144.165 286.97 144.163 cv
286.311 144.102 285.825 143.522 285.885 142.862 cv
286.048 141.043 286.3 133.913 286.3 131.735 cv
286.3 131.073 286.835 130.536 287.498 130.536 cv
288.16 130.536 288.695 131.073 288.695 131.735 cv
288.695 133.805 288.452 141.042 288.269 143.077 cv
288.213 143.698 287.691 144.167 287.079 144.167 cv
cp
.776471 .556863 .458824 rgb
f
266.71 121.956 mo
266.314 121.956 265.923 121.774 265.668 121.428 cv
265.243 120.852 265.364 120.042 265.939 119.616 cv
268.35 117.833 275.598 117.196 278.21 119.727 cv
278.722 120.225 278.737 121.047 278.24 121.561 cv
277.739 122.077 276.918 122.086 276.405 121.59 cv
274.814 120.049 269.048 120.542 267.483 121.702 cv
267.249 121.872 266.98 121.956 266.71 121.956 cv
cp
.666667 .32549 .207843 rgb
f
301.3 121.811 mo
300.883 121.811 300.473 121.61 300.223 121.239 cv
299.824 120.643 299.981 119.836 300.576 119.438 cv
303.135 117.717 309.566 116.84 313.427 119.438 cv
314.02 119.836 314.178 120.643 313.778 121.239 cv
313.377 121.833 312.573 121.991 311.979 121.59 cv
309.055 119.622 303.773 120.415 302.023 121.59 cv
301.801 121.739 301.551 121.811 301.3 121.811 cv
cp
f
310.579 130.918 mo
310.579 133.706 310.266 132.268 306.327 132.268 cv
302.385 132.268 302.075 133.706 302.075 130.918 cv
302.075 128.129 303.981 125.87 306.327 125.87 cv
308.672 125.87 310.579 128.129 310.579 130.918 cv
cp
.227451 .117647 .039216 rgb
f
274.214 191.981 mo
274.532 190.665 274.855 189.37 275.185 188.112 cv
275.185 188.112 273.941 189.602 274.214 191.981 cv
cp
1 .8 .6 rgb
f
303.143 188.112 mo
303.471 189.37 303.793 190.665 304.111 191.981 cv
304.384 189.602 303.143 188.112 303.143 188.112 cv
cp
f
275.158 141.932 mo
275.158 144.223 272.469 146.081 269.153 146.081 cv
265.835 146.081 263.149 144.223 263.149 141.932 cv
263.149 139.641 265.835 137.782 269.153 137.782 cv
272.469 137.782 275.158 139.641 275.158 141.932 cv
cp
1 .713726 .623529 rgb
f
315.121 141.932 mo
315.121 144.223 312.433 146.081 309.118 146.081 cv
305.8 146.081 303.113 144.223 303.113 141.932 cv
303.113 139.641 305.8 137.782 309.118 137.782 cv
312.433 137.782 315.121 139.641 315.121 141.932 cv
cp
f
276.195 130.918 mo
276.195 133.706 275.882 132.268 271.942 132.268 cv
268 132.268 267.691 133.706 267.691 130.918 cv
267.691 128.129 269.596 125.87 271.942 125.87 cv
274.288 125.87 276.195 128.129 276.195 130.918 cv
cp
.227451 .117647 .039216 rgb
f
276.195 130.696 mo
276.195 133.481 274.292 135.739 271.944 135.739 cv
269.596 135.739 267.691 133.481 267.691 130.696 cv
267.691 127.907 269.596 125.647 271.944 125.647 cv
274.292 125.647 276.195 127.907 276.195 130.696 cv
cp
f
310.579 130.696 mo
310.579 133.481 308.672 135.739 306.327 135.739 cv
303.981 135.739 302.075 133.481 302.075 130.696 cv
302.075 127.907 303.981 125.647 306.327 125.647 cv
308.672 125.647 310.579 127.907 310.579 130.696 cv
cp
f
280.473 148.842 mo
282.11 158.571 296.215 156.575 296.934 148.842 cv
280.473 148.842 li
cp
1 1 1 rgb
f
281.733 149.84 mo
283.061 154.063 287.108 154.415 288.399 154.415 cv
291.448 154.415 294.815 152.819 295.728 149.84 cv
281.733 149.84 li
cp
288.401 156.411 mo
288.399 156.411 288.399 156.411 288.399 156.411 cv
284.694 156.409 280.408 154.465 279.49 149.008 cv
279.441 148.717 279.522 148.422 279.711 148.198 cv
279.902 147.973 280.18 147.844 280.473 147.844 cv
296.934 147.844 li
297.215 147.844 297.483 147.961 297.671 148.17 cv
297.862 148.377 297.954 148.655 297.927 148.934 cv
297.477 153.79 292.682 156.411 288.401 156.411 cv
cp
.776471 .556863 .458824 rgb
f
259.869 116.743 mo
265.734 119.022 274.945 108.403 272.428 100.399 cv
272.179 103.598 287.498 109.514 292.268 102.147 cv
293.443 111.344 304.769 113.278 308.573 109.667 cv
308.408 116.499 315.896 121.971 318.549 119.159 cv
316.956 120.848 319.208 127.139 323.205 127.139 cv
329.191 127.139 324.101 116.124 323.757 113.278 cv
322.678 104.358 318.212 94.6724 310.614 89.4927 cv
310.128 89.1626 309.63 88.8521 309.118 88.5649 cv
296.975 81.7759 287.789 88.8423 273.821 90.3931 cv
262.184 91.686 255.33 99.3716 253.323 110.26 cv
252.689 113.702 252.529 117.426 253.168 120.875 cv
253.5 122.655 254.924 126.118 256.458 127.159 cv
260.851 130.135 260.97 119.131 259.869 116.743 cv
cp
.847059 .427451 .145098 rgb
f
311.7 185.512 mo
309.002 177.551 307.752 176.295 298.321 172.073 cv
298.196 172.018 294.973 170.149 294.973 170.149 cv
289.119 181.922 li
286.25 176.7 li
283.192 170.149 li
283.192 170.149 280.442 171.807 280.348 171.848 cv
270.467 176.247 269.17 177.522 266.463 185.512 cv
266.137 186.477 265.637 188.477 265.042 191.071 cv
272.336 193.766 280.206 195.268 288.413 195.372 cv
288.712 195.375 289.008 195.395 289.31 195.395 cv
289.433 195.395 289.554 195.385 289.678 195.385 cv
297.918 195.342 305.823 193.879 313.157 191.225 cv
312.547 188.553 312.033 186.497 311.7 185.512 cv
cp
.701961 .211765 .368627 rgb
f
297.919 172.303 mo
297.873 171.956 297.557 171.725 297.207 171.76 cv
296.86 171.807 296.618 172.127 296.664 172.473 cv
297.51 178.702 li
291.958 176.069 li
288.998 181.254 li
286.244 176.235 li
280.53 178.741 li
281.382 172.473 li
281.428 172.127 281.186 171.807 280.839 171.76 cv
280.491 171.723 280.174 171.956 280.126 172.303 cv
278.973 180.807 li
285.691 177.86 li
288.432 182.854 li
288.439 182.868 288.453 182.872 288.46 182.883 cv
288.507 182.958 288.568 183.024 288.646 183.075 cv
288.683 183.098 288.722 183.108 288.762 183.124 cv
288.836 183.153 288.912 183.184 288.988 183.184 cv
288.989 183.184 li
288.99 183.184 288.99 183.184 288.99 183.184 cv
289.09 183.184 289.196 183.159 289.292 183.104 cv
289.293 183.104 li
289.308 183.096 289.318 183.081 289.332 183.071 cv
289.405 183.022 289.464 182.963 289.509 182.895 cv
289.517 182.883 289.531 182.877 289.539 182.866 cv
292.476 177.715 li
299.079 180.846 li
297.919 172.303 li
cp
.588235 .133333 .294118 rgb
f
696.974 125.35 mo
696.974 164.034 665.613 195.395 626.928 195.395 cv
588.243 195.395 556.882 164.034 556.882 125.35 cv
556.882 86.6646 588.243 55.3032 626.928 55.3032 cv
665.613 55.3032 696.974 86.6646 696.974 125.35 cv
cp
.866667 .435294 .556863 rgb
f
668.932 144.837 mo
668.932 164.657 654.939 179.687 635.119 179.687 cv
618.736 179.687 li
598.918 179.687 584.925 164.657 584.925 144.837 cv
585.962 114.219 li
585.962 94.3999 603.255 73.1479 626.929 73.1479 cv
626.929 73.1479 li
652.558 73.1479 667.894 94.3999 667.894 114.219 cv
668.932 144.837 li
cp
.309804 .184314 .098039 rgb
f
633.337 177.576 mo
621.556 177.576 li
621.556 159.386 li
633.337 159.386 li
633.337 177.576 li
cp
1 .8 .6 rgb
f
650.065 181.848 mo
647.637 174.677 646.36 172.941 639.24 169.582 cv
639.201 169.309 li
639.184 169.228 639.123 169.164 639.043 169.142 cv
636.073 168.044 li
636.067 168.042 636.047 168.042 636.037 168.042 cv
634.64 167.503 li
634.633 167.539 li
633.93 166.992 628.66 175.022 627.406 175.403 cv
626.153 175.022 620.774 167.071 620.001 167.582 cv
619.991 167.541 li
618.628 168.042 li
618.628 168.043 618.622 168.043 618.621 168.044 cv
615.651 169.142 li
615.571 169.164 615.511 169.228 615.493 169.309 cv
615.438 169.684 li
608.495 172.997 607.203 174.841 604.829 181.848 cv
604.362 183.227 603.54 186.714 602.595 191.047 cv
605.698 192.198 608.907 193.127 612.2 193.831 cv
612.589 193.915 612.978 193.995 613.369 194.073 cv
617.143 194.813 621.026 195.239 624.991 195.346 cv
625.636 195.364 626.278 195.395 626.928 195.395 cv
627.21 195.395 627.489 195.377 627.771 195.374 cv
628.423 195.366 629.072 195.35 629.72 195.325 cv
633.805 195.165 637.8 194.657 641.677 193.827 cv
642 193.756 642.32 193.678 642.644 193.604 cv
645.93 192.85 649.127 191.868 652.218 190.67 cv
651.307 186.512 650.52 183.187 650.065 181.848 cv
cp
.235294 .192157 .247059 rgb
f
634.633 167.539 mo
633.93 166.992 633.337 166.486 633.337 166.486 cv
633.337 166.486 628.602 168.974 627.348 169.355 cv
626.095 168.974 621.556 166.486 621.556 166.486 cv
621.556 166.486 620.774 167.071 620.001 167.582 cv
620.392 169.171 li
626.928 195.395 li
627.21 195.395 627.489 195.377 627.771 195.374 cv
634.445 168.601 li
634.633 167.539 li
cp
1 1 1 rgb
f
654.223 90.7573 mo
648.379 82.4712 642.379 82.2144 632.705 81.814 cv
622.19 81.814 li
612.514 82.2144 606.515 82.4712 600.673 90.7573 cv
594.824 99.0503 597.04 101.201 597.501 111.205 cv
597.85 118.762 593.332 113.459 596.458 134.482 cv
599.585 155.503 617.841 162.246 627.446 162.246 cv
637.053 162.246 653.939 156.608 658.438 134.482 cv
662.936 112.355 657.044 118.762 657.395 111.205 cv
657.854 101.201 660.068 99.0503 654.223 90.7573 cv
cp
1 .8 .6 rgb
f
625.361 142.218 mo
625.327 142.218 625.29 142.214 625.253 142.212 cv
624.595 142.154 624.108 141.572 624.169 140.914 cv
624.331 139.098 624.585 131.968 624.585 129.786 cv
624.585 129.125 625.12 128.587 625.782 128.587 cv
626.442 128.587 626.979 129.125 626.979 129.786 cv
626.979 131.86 626.735 139.096 626.554 141.127 cv
626.497 141.75 625.975 142.218 625.361 142.218 cv
cp
.729412 .52549 .388235 rgb
f
626.97 151.699 mo
623.525 151.699 619.528 150.853 617.339 148.433 cv
616.895 147.942 616.933 147.185 617.423 146.742 cv
617.915 146.298 618.669 146.336 619.113 146.826 cv
620.695 148.574 624.259 149.535 628.204 149.263 cv
631.243 149.056 633.823 148.127 634.627 146.955 cv
634.999 146.408 635.742 146.267 636.29 146.642 cv
636.836 147.014 636.977 147.759 636.604 148.304 cv
635.352 150.134 632.273 151.384 628.366 151.652 cv
627.916 151.682 627.448 151.699 626.97 151.699 cv
cp
f
614.479 128.97 mo
614.479 131.756 612.575 134.015 610.228 134.015 cv
607.88 134.015 605.974 131.756 605.974 128.97 cv
605.974 126.184 607.88 123.923 610.228 123.923 cv
612.575 123.923 614.479 126.184 614.479 128.97 cv
cp
.227451 .117647 .039216 rgb
f
615.591 120.006 mo
615.233 120.006 614.877 119.859 614.62 119.57 cv
613.417 118.212 611.794 117.904 610.643 117.884 cv
608.825 117.853 606.938 118.543 605.935 119.603 cv
605.441 120.121 604.62 120.143 604.103 119.65 cv
603.583 119.159 603.562 118.337 604.054 117.818 cv
605.575 116.215 608.118 115.25 610.688 115.292 cv
613.05 115.333 615.135 116.241 616.562 117.851 cv
617.036 118.387 616.987 119.207 616.45 119.681 cv
616.204 119.9 615.897 120.006 615.591 120.006 cv
cp
f
640.357 119.863 mo
640.078 119.863 639.796 119.772 639.559 119.585 cv
638.996 119.144 638.896 118.33 639.34 117.766 cv
640.43 116.376 642.492 115.447 644.717 115.339 cv
647.072 115.228 649.229 116.054 650.77 117.671 cv
651.264 118.191 651.244 119.011 650.727 119.504 cv
650.209 119.998 649.389 119.98 648.894 119.46 cv
647.525 118.025 645.766 117.882 644.842 117.929 cv
643.174 118.009 641.879 118.73 641.379 119.367 cv
641.123 119.693 640.742 119.863 640.357 119.863 cv
cp
f
648.863 128.97 mo
648.863 131.757 646.957 134.015 644.611 134.015 cv
642.264 134.015 640.359 131.757 640.359 128.97 cv
640.359 126.183 642.264 123.922 644.611 123.922 cv
646.957 123.922 648.863 126.183 648.863 128.97 cv
cp
f
635.865 78.4214 mo
643.867 80.2437 649.674 83.3179 654.514 89.9233 cv
656.955 93.2544 656.957 93.7495 654.709 97.77 cv
652.797 101.189 641.193 104.992 641.155 96.728 cv
641.191 104.606 619.437 113.98 617.595 103.63 cv
615.18 110.869 603.2 115.363 601.546 108.869 cv
601.287 113.115 599.331 117.154 596.487 119.58 cv
592.712 122.801 590.714 120.578 590.255 115.908 cv
589.348 106.634 593.608 97.7925 599.118 90.728 cv
608.222 79.0571 620.833 74.9946 635.865 78.4214 cv
cp
.309804 .184314 .098039 rgb
f
661.016 120.101 mo
663.721 113.632 663.563 95.2798 655.045 92.5464 cv
652.627 96.1685 657.491 118.267 661.016 120.101 cv
cp
f
621.941 175.403 mo
621.753 175.403 621.565 175.323 621.438 175.166 cv
621.21 174.888 621.251 174.479 621.53 174.251 cv
626.937 169.833 li
627.214 169.606 627.624 169.648 627.851 169.925 cv
628.077 170.204 628.036 170.613 627.759 170.839 cv
622.351 175.257 li
622.231 175.356 622.085 175.403 621.941 175.403 cv
cp
.690196 .678431 .698039 rgb
f
632.753 175.403 mo
632.609 175.403 632.464 175.356 632.344 175.257 cv
626.937 170.839 li
626.658 170.613 626.618 170.204 626.844 169.925 cv
627.071 169.648 627.479 169.606 627.759 169.833 cv
633.165 174.251 li
633.443 174.478 633.483 174.888 633.257 175.166 cv
633.13 175.323 632.942 175.403 632.753 175.403 cv
cp
f
613.442 139.984 mo
613.442 142.275 610.754 144.131 607.437 144.131 cv
604.12 144.131 601.433 142.275 601.433 139.984 cv
601.433 137.692 604.12 135.834 607.437 135.834 cv
610.754 135.834 613.442 137.692 613.442 139.984 cv
cp
.988235 .690196 .584314 rgb
f
653.405 139.984 mo
653.405 142.275 650.717 144.131 647.4 144.131 cv
644.084 144.131 641.396 142.275 641.396 139.984 cv
641.396 137.692 644.084 135.834 647.4 135.834 cv
650.717 135.834 653.405 137.692 653.405 139.984 cv
cp
f
620.001 167.582 mo
619.991 167.541 li
618.628 168.042 li
618.628 168.043 618.622 168.043 618.621 168.044 cv
615.651 169.142 li
615.571 169.164 615.511 169.228 615.493 169.309 cv
615.438 169.684 li
614.271 177.714 li
614.251 177.805 614.288 177.898 614.367 177.949 cv
619.077 181.001 li
617.244 186.06 li
617.214 186.142 617.235 186.236 617.3 186.297 cv
624.991 195.346 li
625.636 195.364 626.278 195.395 626.928 195.395 cv
626.928 195.395 li
620.392 169.171 li
620.001 167.582 li
cp
.329412 .282353 .352941 rgb
f
637.451 186.06 mo
635.617 181.001 li
640.326 177.949 li
640.404 177.898 640.443 177.805 640.424 177.714 cv
639.24 169.582 li
639.201 169.309 li
639.184 169.228 639.123 169.164 639.043 169.142 cv
636.073 168.044 li
636.067 168.042 636.047 168.042 636.037 168.042 cv
634.64 167.503 li
634.633 167.539 li
634.445 168.601 li
627.771 195.374 li
628.423 195.366 629.072 195.35 629.72 195.325 cv
637.395 186.297 li
637.459 186.236 637.48 186.142 637.451 186.06 cv
cp
f
865.754 311.635 mo
865.754 350.318 834.396 381.68 795.71 381.68 cv
757.023 381.68 725.663 350.318 725.663 311.635 cv
725.663 272.949 757.023 241.588 795.71 241.588 cv
834.396 241.588 865.754 272.949 865.754 311.635 cv
cp
.952941 .705882 .243137 rgb
f
795.71 381.68 mo
810.515 381.68 824.236 377.075 835.548 369.236 cv
834.679 303.599 li
834.679 279.536 821.337 263.524 795.706 263.524 cv
772.034 263.524 756.737 278.787 756.737 303.599 cv
755.869 369.235 li
767.181 377.074 780.904 381.68 795.71 381.68 cv
cp
.2 .098039 .027451 rgb
f
823.003 280.136 mo
817.159 271.85 811.159 271.594 801.485 271.192 cv
790.97 271.192 li
781.294 271.594 775.294 271.85 769.452 280.136 cv
763.604 288.43 765.819 290.579 766.28 300.583 cv
766.63 308.142 762.112 302.839 765.237 323.86 cv
768.364 344.883 786.62 351.625 796.226 351.625 cv
805.833 351.625 822.72 345.988 827.218 323.86 cv
831.716 301.733 825.823 308.142 826.175 300.583 cv
826.634 290.579 828.849 288.43 823.003 280.136 cv
cp
.878431 .666667 .47451 rgb
f
818.874 373.971 mo
819.017 373.933 819.153 373.889 819.298 373.854 cv
819.126 373.194 818.976 372.657 818.853 372.279 cv
816.651 365.604 815.407 363.52 809.89 360.616 cv
809.894 360.586 804.788 358.146 804.659 358.229 cv
804.594 358.272 804.544 358.334 804.511 358.402 cv
803.461 357.674 802.116 356.496 802.116 356.496 cv
802.062 356.797 797.438 357.501 796.228 357.88 cv
795.005 357.497 790.368 356.797 790.337 356.496 cv
790.337 356.496 788.662 358.105 787.792 358.579 cv
787.786 358.438 787.718 358.307 787.599 358.229 cv
787.472 358.146 782.38 360.759 782.394 360.873 cv
782.385 360.82 782.377 360.768 782.368 360.714 cv
776.64 363.743 775.755 365.761 773.603 372.279 cv
773.497 372.6 773.374 373.036 773.233 373.562 cv
773.374 373.609 773.51 373.656 773.649 373.704 cv
773.382 374.721 773.052 376.109 772.677 377.785 cv
774.81 378.527 776.988 379.17 779.21 379.707 cv
784.388 380.957 789.786 381.642 795.342 381.67 cv
795.466 381.671 795.587 381.68 795.71 381.68 cv
796.12 381.68 796.524 381.656 796.933 381.648 cv
802.474 381.554 807.86 380.831 813.017 379.521 cv
815.292 378.941 817.524 378.254 819.705 377.459 cv
819.39 376.066 819.11 374.889 818.874 373.971 cv
cp
f
802.116 367.45 mo
790.337 367.45 li
790.337 349.259 li
802.116 349.259 li
802.116 367.45 li
cp
f
794.142 331.597 mo
794.106 331.597 794.069 331.595 794.034 331.593 cv
793.374 331.532 792.888 330.952 792.948 330.293 cv
793.11 328.475 793.364 321.345 793.364 319.165 cv
793.364 318.504 793.899 317.968 794.562 317.968 cv
795.222 317.968 795.759 318.504 795.759 319.165 cv
795.759 321.237 795.517 328.471 795.333 330.507 cv
795.276 331.128 794.755 331.597 794.142 331.597 cv
cp
.698039 .490196 .337255 rgb
f
783.259 318.349 mo
783.259 321.136 781.354 323.395 779.007 323.395 cv
776.659 323.395 774.755 321.136 774.755 318.349 cv
774.755 315.563 776.659 313.302 779.007 313.302 cv
781.354 313.302 783.259 315.563 783.259 318.349 cv
cp
.227451 .117647 .039216 rgb
f
784.37 310.384 mo
784.013 310.384 783.655 310.235 783.399 309.946 cv
782.198 308.59 780.573 308.281 779.423 308.261 cv
777.608 308.229 775.72 308.921 774.714 309.979 cv
774.22 310.498 773.399 310.521 772.882 310.028 cv
772.362 309.535 772.341 308.714 772.833 308.194 cv
774.354 306.593 776.909 305.632 779.468 305.669 cv
781.829 305.709 783.915 306.618 785.341 308.228 cv
785.815 308.764 785.767 309.583 785.231 310.058 cv
784.983 310.276 784.677 310.384 784.37 310.384 cv
cp
f
809.138 310.239 mo
808.858 310.239 808.575 310.149 808.337 309.962 cv
807.774 309.521 807.677 308.706 808.118 308.143 cv
809.212 306.753 811.271 305.823 813.499 305.716 cv
815.862 305.601 818.009 306.432 819.55 308.049 cv
820.044 308.567 820.024 309.388 819.507 309.882 cv
818.987 310.376 818.167 310.357 817.673 309.837 cv
816.304 308.4 814.534 308.255 813.622 308.307 cv
811.956 308.386 810.657 309.107 810.157 309.743 cv
809.903 310.069 809.522 310.239 809.138 310.239 cv
cp
f
817.644 318.349 mo
817.644 321.137 815.737 323.396 813.392 323.396 cv
811.044 323.396 809.14 321.137 809.14 318.349 cv
809.14 315.562 811.044 313.301 813.392 313.301 cv
815.737 313.301 817.644 315.562 817.644 318.349 cv
cp
f
787.122 367.874 mo
786.923 367.874 786.726 367.786 786.595 367.618 cv
786.368 367.328 786.419 366.908 786.71 366.683 cv
791.292 363.099 li
791.583 362.874 792.001 362.923 792.229 363.214 cv
792.456 363.505 792.405 363.925 792.114 364.151 cv
787.53 367.733 li
787.409 367.829 787.265 367.874 787.122 367.874 cv
cp
.690196 .678431 .698039 rgb
f
805.503 367.874 mo
805.364 367.874 805.224 367.831 805.103 367.739 cv
800.104 363.968 li
799.812 363.747 799.753 363.327 799.974 363.034 cv
800.196 362.739 800.612 362.681 800.909 362.903 cv
805.905 366.675 li
806.2 366.897 806.257 367.315 806.036 367.609 cv
805.905 367.782 805.706 367.874 805.503 367.874 cv
cp
f
782.222 329.362 mo
782.222 331.653 779.534 333.511 776.216 333.511 cv
772.901 333.511 770.212 331.653 770.212 329.362 cv
770.212 327.071 772.901 325.214 776.216 325.214 cv
779.534 325.214 782.222 327.071 782.222 329.362 cv
cp
.866667 .580392 .478431 rgb
f
822.185 329.362 mo
822.185 331.653 819.497 333.511 816.181 333.511 cv
812.864 333.511 810.175 331.653 810.175 329.362 cv
810.175 327.071 812.864 325.214 816.181 325.214 cv
819.497 325.214 822.185 327.071 822.185 329.362 cv
cp
f
760.507 310.463 mo
760.507 310.463 790.81 303.729 817.753 284.607 cv
817.753 284.607 826.978 300.462 828.142 322.851 cv
828.142 322.851 838.782 280.338 812.677 271.192 cv
786.571 262.048 754.521 276.152 760.507 310.463 cv
cp
.2 .098039 .027451 rgb
f
786.892 337.798 mo
790.312 346.142 803.966 343.454 804.915 337.718 cv
786.892 337.798 li
cp
1 1 1 rgb
f
788.548 338.788 mo
790.558 341.737 794.112 342.09 795.688 342.09 cv
795.69 342.09 li
799.087 342.09 802.284 340.636 803.476 338.722 cv
788.548 338.788 li
cp
795.69 344.086 mo
795.688 344.086 li
791.118 344.085 787.485 341.875 785.968 338.177 cv
785.843 337.868 785.878 337.519 786.063 337.243 cv
786.247 336.968 786.556 336.8 786.888 336.8 cv
804.911 336.72 li
804.913 336.72 804.913 336.72 804.915 336.72 cv
805.208 336.72 805.485 336.849 805.675 337.071 cv
805.864 337.294 805.948 337.591 805.897 337.881 cv
805.257 341.765 800.204 344.086 795.69 344.086 cv
cp
.639216 .431373 .27451 rgb
f
804.462 358.603 mo
804.462 358.531 804.48 358.464 804.511 358.402 cv
803.461 357.674 802.116 356.496 802.116 356.496 cv
802.062 356.797 801.991 357.093 801.925 357.391 cv
800.392 364.179 795.958 370.052 795.958 370.052 cv
795.958 370.052 791.457 363.354 790.469 357.407 cv
790.418 357.102 790.368 356.797 790.337 356.496 cv
790.337 356.496 788.662 358.105 787.792 358.579 cv
787.793 358.587 787.798 358.594 787.798 358.603 cv
787.796 358.767 787.692 370.061 795.342 381.67 cv
795.466 381.671 795.587 381.68 795.71 381.68 cv
796.12 381.68 796.524 381.656 796.933 381.648 cv
804.565 370.046 804.464 358.767 804.462 358.603 cv
cp
1 1 1 rgb
f
782.394 360.873 mo
782.385 360.82 782.377 360.768 782.368 360.714 cv
776.64 363.743 775.755 365.761 773.603 372.279 cv
773.497 372.6 773.374 373.036 773.233 373.562 cv
773.374 373.609 773.51 373.656 773.649 373.704 cv
775.945 374.494 778.127 375.242 780.358 375.872 cv
782.406 370.931 782.909 365.485 782.394 360.873 cv
cp
f
812.013 376.163 mo
812.104 376.386 812.171 376.596 812.251 376.813 cv
814.397 375.775 816.463 374.615 818.874 373.971 cv
819.017 373.933 819.153 373.889 819.298 373.854 cv
819.126 373.194 818.976 372.657 818.853 372.279 cv
816.651 365.604 815.407 363.52 809.89 360.616 cv
809.128 366.113 809.824 371.054 812.013 376.163 cv
cp
f
787.798 358.603 mo
787.798 358.594 787.793 358.587 787.792 358.579 cv
787.786 358.438 787.718 358.307 787.599 358.229 cv
787.472 358.146 787.313 358.136 787.177 358.198 cv
785.263 359.072 783.683 359.825 782.36 360.524 cv
782.375 360.638 782.38 360.759 782.394 360.873 cv
782.909 365.485 782.406 370.931 780.358 375.872 cv
780.319 375.968 780.288 376.067 780.247 376.163 cv
779.723 377.437 779.403 378.611 779.21 379.707 cv
784.388 380.957 789.786 381.642 795.342 381.67 cv
787.692 370.061 787.796 358.767 787.798 358.603 cv
cp
.54902 .454902 .329412 rgb
f
812.013 376.163 mo
809.824 371.054 809.128 366.113 809.89 360.616 cv
809.894 360.586 809.896 360.556 809.899 360.524 cv
808.577 359.825 806.995 359.072 805.085 358.198 cv
804.946 358.136 804.788 358.146 804.659 358.229 cv
804.594 358.272 804.544 358.334 804.511 358.402 cv
804.48 358.464 804.462 358.531 804.462 358.603 cv
804.464 358.767 804.565 370.046 796.933 381.648 cv
802.474 381.554 807.86 380.831 813.017 379.521 cv
812.856 378.67 812.604 377.768 812.251 376.813 cv
812.171 376.596 812.104 376.386 812.013 376.163 cv
cp
f
865.754 497.921 mo
865.754 536.603 834.395 567.964 795.709 567.964 cv
757.023 567.964 725.664 536.603 725.664 497.921 cv
725.664 459.235 757.023 427.874 795.709 427.874 cv
834.395 427.874 865.754 459.235 865.754 497.921 cv
cp
.176471 .494118 .619608 rgb
f
804.299 553.517 mo
787.137 553.517 li
787.137 532.503 li
804.299 532.503 li
804.299 553.517 li
cp
1 .8 .6 rgb
f
813.061 547.61 mo
778.342 547.616 li
769.252 550.898 763.771 553.655 760.988 558.743 cv
765.984 561.602 771.361 563.86 777.031 565.426 cv
778.938 565.952 780.875 566.398 782.842 566.764 cv
787.016 567.539 791.313 567.964 795.709 567.964 cv
800.103 567.964 804.395 567.54 808.563 566.767 cv
810.531 566.401 812.471 565.955 814.377 565.429 cv
820.05 563.863 825.431 561.604 830.429 558.744 cv
827.646 553.653 822.16 550.896 813.061 547.61 cv
cp
.427451 .290196 .168627 rgb
f
808.961 546.294 mo
808.364 545.985 807.779 545.672 807.779 545.672 cv
807.779 545.672 804.174 542.281 804.299 542.324 cv
804.424 542.368 795.719 547.777 795.719 547.777 cv
787.137 542.324 li
783.639 545.782 li
783.639 545.782 783.078 546.047 782.444 546.33 cv
782.421 548.648 li
782.842 566.764 li
787.016 567.539 791.313 567.964 795.709 567.964 cv
800.103 567.964 804.395 567.54 808.563 566.767 cv
808.984 548.648 li
808.961 546.294 li
cp
1 1 1 rgb
f
782.444 546.33 mo
782.449 545.819 li
778.806 547.06 li
778.689 547.064 778.584 547.134 778.533 547.238 cv
778.342 547.616 li
772.869 558.412 li
772.812 558.53 772.83 558.673 772.918 558.77 cv
778.016 564.755 li
777.031 565.426 li
778.938 565.952 780.875 566.398 782.842 566.764 cv
782.421 548.648 li
782.444 546.33 li
cp
.298039 .184314 .098039 rgb
f
818.486 558.77 mo
818.574 558.673 818.594 558.53 818.536 558.412 cv
813.061 547.61 li
812.872 547.238 li
812.82 547.134 812.715 547.064 812.6 547.06 cv
808.955 545.819 li
808.961 546.294 li
808.984 548.648 li
808.563 566.767 li
810.531 566.401 812.471 565.955 814.377 565.429 cv
813.389 564.755 li
818.486 558.77 li
cp
f
815.696 502.69 mo
814.578 509.049 818.348 514.347 824.123 515.489 cv
829.898 516.63 835.482 513.183 836.6 506.821 cv
837.719 500.462 833.947 494.379 828.174 493.236 cv
822.4 492.097 816.814 496.328 815.696 502.69 cv
cp
1 .8 .6 rgb
f
775.411 502.69 mo
776.53 509.049 772.759 514.347 766.984 515.489 cv
761.21 516.63 755.625 513.183 754.508 506.821 cv
753.389 500.462 757.16 494.379 762.934 493.236 cv
768.707 492.097 774.293 496.328 775.411 502.69 cv
cp
f
824.552 460.675 mo
819.123 452.867 810.124 447.11 800.79 446.74 cv
800.788 446.74 800.606 446.733 800.307 446.721 cv
800.316 446.355 li
800.316 446.355 798.054 446.446 795.719 446.539 cv
793.381 446.446 791.117 446.355 791.117 446.355 cv
791.129 446.721 li
790.829 446.733 790.646 446.74 790.645 446.74 cv
781.311 447.11 772.541 453.032 766.884 460.675 cv
757.514 473.33 761.705 501.647 763.731 511.616 cv
769.393 532.796 782.604 536.414 795.717 536.414 cv
808.832 536.414 822.512 532.796 827.703 511.616 cv
829.729 502.735 834.124 474.441 824.552 460.675 cv
cp
f
786.671 556.623 mo
783.014 546.516 li
782.889 546.17 783.066 545.789 783.412 545.664 cv
783.76 545.539 784.139 545.72 784.264 546.063 cv
787.274 554.383 li
795.127 547.805 li
795.406 547.568 795.827 547.604 796.063 547.888 cv
796.299 548.169 796.263 548.589 795.98 548.825 cv
786.671 556.623 li
cp
.690196 .678431 .698039 rgb
f
804.431 556.618 mo
795.127 548.825 li
794.845 548.589 794.809 548.169 795.045 547.888 cv
795.281 547.604 795.702 547.568 795.98 547.805 cv
803.84 554.388 li
806.888 546.165 li
807.015 545.819 807.397 545.645 807.741 545.772 cv
808.086 545.9 808.262 546.284 808.133 546.626 cv
804.431 556.618 li
cp
f
771.342 491.614 mo
771.018 491.614 770.692 491.493 770.438 491.253 cv
769.912 490.754 769.891 489.923 770.389 489.396 cv
771.838 487.869 775.201 487.178 777.893 487.169 cv
777.908 487.169 777.926 487.169 777.943 487.169 cv
779.69 487.169 782.826 487.448 784.586 489.281 cv
785.089 489.805 785.072 490.636 784.549 491.138 cv
784.024 491.639 783.195 491.624 782.691 491.1 cv
781.906 490.281 780.134 489.796 777.945 489.796 cv
777.932 489.796 777.916 489.796 777.9 489.796 cv
775.255 489.805 772.932 490.533 772.295 491.203 cv
772.035 491.475 771.689 491.614 771.342 491.614 cv
cp
.227451 .117647 .039216 rgb
f
806.105 491.679 mo
805.707 491.679 805.314 491.499 805.056 491.157 cv
804.619 490.577 804.733 489.754 805.313 489.317 cv
809.273 486.328 816.818 486.4 819.733 489.458 cv
820.233 489.983 820.215 490.815 819.689 491.316 cv
819.164 491.815 818.333 491.797 817.832 491.271 cv
815.814 489.152 809.783 489.234 806.896 491.414 cv
806.659 491.592 806.381 491.679 806.105 491.679 cv
cp
f
793.62 515.137 mo
793.588 515.137 793.557 515.136 793.523 515.134 cv
792.801 515.081 792.256 514.453 792.309 513.729 cv
792.479 511.354 792.742 502.064 792.742 499.231 cv
792.742 498.507 793.331 497.919 794.057 497.919 cv
794.781 497.919 795.369 498.507 795.369 499.231 cv
795.369 502.172 795.105 511.443 794.928 513.918 cv
794.879 514.609 794.303 515.137 793.62 515.137 cv
cp
.8 .603922 .458824 rgb
f
794.887 525.626 mo
794.559 525.626 794.238 525.617 793.927 525.603 cv
790.141 525.408 787.053 524.187 785.454 522.249 cv
784.992 521.689 785.072 520.862 785.633 520.399 cv
786.191 519.938 787.02 520.018 787.48 520.578 cv
788.578 521.907 791.1 522.828 794.061 522.978 cv
797.727 523.168 801.184 522.183 802.908 520.479 cv
803.426 519.97 804.256 519.974 804.767 520.49 cv
805.275 521.006 805.271 521.838 804.756 522.348 cv
802.298 524.776 798.213 525.626 794.887 525.626 cv
cp
.729412 .52549 .388235 rgb
f
763.244 492.53 mo
763.504 487.409 762.566 476.358 769.328 473.462 cv
771.924 472.352 776.166 468.807 778.674 468.015 cv
791.151 464.074 782.178 467.671 798.703 464.997 cv
807.898 463.509 817.231 469.979 822.197 470.714 cv
826.148 471.298 828.037 481.809 827.574 490.841 cv
827.463 493.043 827.49 494.888 826.945 499.164 cv
826.877 499.685 826.396 501.331 827.637 501.331 cv
828.906 501.331 829.68 498.688 830.209 494.836 cv
831.532 485.219 832.079 481.101 831.649 472.067 cv
831.502 468.96 831.907 458.538 825.608 456.765 cv
805.385 451.073 758.865 445.64 758.865 473.597 cv
758.865 486.008 760.738 500.728 762.01 501.591 cv
763.238 502.421 763.594 501.272 763.572 500.082 cv
763.536 498.263 763.132 494.746 763.244 492.53 cv
cp
.227451 .117647 .039216 rgb
f
777.426 503.372 mo
775.056 503.372 772.277 502.528 771.283 500.564 cv
770.957 499.918 771.217 499.128 771.863 498.8 cv
772.51 498.475 773.302 498.732 773.629 499.38 cv
773.998 500.111 775.818 500.844 777.818 500.734 cv
778.484 500.696 780.701 500.451 781.294 498.857 cv
781.545 498.178 782.3 497.833 782.982 498.084 cv
783.662 498.336 784.008 499.094 783.756 499.772 cv
782.982 501.857 780.817 503.196 777.966 503.357 cv
777.789 503.367 777.607 503.372 777.426 503.372 cv
cp
.729412 .52549 .388235 rgb
f
811.964 503.896 mo
811.803 503.896 811.641 503.893 811.476 503.884 cv
808.59 503.726 806.17 502.177 805.158 499.837 cv
804.87 499.17 805.177 498.397 805.842 498.109 cv
806.512 497.821 807.282 498.129 807.569 498.795 cv
808.303 500.49 810.143 501.18 811.618 501.261 cv
813.582 501.368 815.362 500.521 816.166 499.105 cv
816.525 498.473 817.328 498.254 817.957 498.611 cv
818.588 498.969 818.81 499.771 818.451 500.401 cv
817.211 502.585 814.754 503.896 811.964 503.896 cv
cp
f
828.91 494.938 mo
762.367 494.938 li
761.643 494.938 761.055 494.351 761.055 493.625 cv
761.055 492.9 761.643 492.313 762.367 492.313 cv
828.91 492.313 li
829.635 492.313 830.223 492.9 830.223 493.625 cv
830.223 494.351 829.635 494.938 828.91 494.938 cv
cp
.196078 .094118 .023529 rgb
f
810.953 510.104 mo
807.605 510.104 804.848 509 802.757 506.819 cv
798.296 502.168 798.572 494.289 798.585 493.954 cv
798.615 493.209 799.217 492.626 799.992 492.659 cv
800.739 492.689 801.32 493.318 801.29 494.067 cv
801.287 494.136 801.057 501.145 804.719 504.954 cv
806.301 506.598 808.34 507.397 810.953 507.397 cv
814.842 507.397 817.874 506.304 819.963 504.147 cv
823.266 500.739 823.365 495.56 823.318 494.055 cv
823.295 493.307 823.882 492.682 824.629 492.657 cv
825.361 492.647 826.001 493.221 826.024 493.968 cv
826.097 496.243 825.84 501.973 821.908 506.032 cv
819.289 508.735 815.604 510.104 810.953 510.104 cv
cp
f
778.848 510.108 mo
774.178 510.108 770.477 508.732 767.849 506.021 cv
763.916 501.96 763.66 496.24 763.732 493.968 cv
763.757 493.22 764.39 492.665 765.131 492.655 cv
765.879 492.679 766.467 493.306 766.443 494.055 cv
766.396 495.557 766.496 500.726 769.797 504.133 cv
771.895 506.299 774.939 507.396 778.848 507.396 cv
781.475 507.396 783.524 506.593 785.112 504.942 cv
788.775 501.133 788.543 494.136 788.541 494.067 cv
788.511 493.318 789.092 492.688 789.84 492.657 cv
790.632 492.636 791.219 493.208 791.25 493.954 cv
791.264 494.287 791.54 502.156 787.076 506.812 cv
784.979 508.999 782.21 510.108 778.848 510.108 cv
cp
f
826.092 472.258 mo
823.885 473.763 821.245 474.541 818.435 474.097 cv
814.67 473.505 814.563 470.647 816.978 468.14 cv
812.424 473.597 794.549 479.762 786.921 476.907 cv
784.408 475.967 784.357 473.021 785.49 471.782 cv
784.389 472.844 774.697 479.884 768.939 477.02 cv
766.238 475.676 768.992 472.227 768.992 472.227 cv
765.626 475.25 758.27 477.823 755.185 474.362 cv
752.154 470.964 756.082 466.08 759.189 464.176 cv
758.477 464.23 756.492 464.509 755.551 462.544 cv
753.551 458.372 761.598 450.188 775.451 445.464 cv
795.659 438.575 815.002 443.827 822.238 448.502 cv
825.799 450.799 830.502 454.903 831.467 459.478 cv
832.621 464.945 830.679 469.131 826.092 472.258 cv
cp
.756863 .580392 .298039 rgb
f
696.974 684.205 mo
696.974 722.889 665.614 754.25 626.929 754.25 cv
588.243 754.25 556.883 722.889 556.883 684.205 cv
556.883 645.52 588.243 614.158 626.929 614.158 cv
665.614 614.158 696.974 645.52 696.974 684.205 cv
cp
.92549 .435294 .27451 rgb
f
633.997 743.744 mo
619.857 743.744 li
619.857 721.914 li
633.997 721.914 li
633.997 743.744 li
cp
.956863 .803922 .596078 rgb
f
654.052 748.127 mo
651.136 739.75 649.626 737.729 641.082 733.807 cv
633.997 731.184 li
633.997 731.184 628.313 734.09 626.809 734.535 cv
625.305 734.09 619.857 731.184 619.857 731.184 cv
612.516 733.928 li
604.2 737.791 602.651 739.947 599.806 748.127 cv
599.746 748.295 599.681 748.5 599.613 748.723 cv
604.385 750.744 609.434 752.234 614.676 753.16 cv
617.658 753.686 620.7 754.033 623.8 754.17 cv
624.838 754.217 625.879 754.25 626.929 754.25 cv
627.896 754.25 628.855 754.215 629.813 754.176 cv
632.912 754.051 635.955 753.719 638.938 753.203 cv
644.268 752.281 649.398 750.775 654.243 748.723 cv
654.176 748.5 654.11 748.295 654.052 748.127 cv
cp
1 1 1 rgb
f
667.076 689.043 mo
667.076 715.043 639.746 722.203 626.399 722.203 cv
611.604 722.203 585.724 715.043 585.724 689.043 cv
585.724 663.041 598.021 636.809 626.399 636.809 cv
658.762 636.809 667.076 663.041 667.076 689.043 cv
cp
.2 .098039 .027451 rgb
f
653.767 654.553 mo
647.909 646.247 641.896 645.99 632.198 645.588 cv
621.658 645.588 li
611.959 645.99 605.946 646.247 600.091 654.553 cv
594.229 662.865 596.448 665.021 596.911 675.049 cv
597.261 682.625 593.437 676.311 595.866 698.381 cv
598.196 719.555 617.299 726.209 626.928 726.209 cv
636.556 726.209 654.2 720.693 657.991 698.381 cv
661.77 676.143 657.488 670.039 655.27 662.787 cv
654.104 658.976 659.626 662.865 653.767 654.553 cv
cp
.956863 .803922 .596078 rgb
f
624.838 706.135 mo
624.801 706.135 624.766 706.133 624.729 706.129 cv
624.068 706.07 623.582 705.486 623.641 704.826 cv
623.805 703.004 624.058 695.857 624.058 693.674 cv
624.058 693.01 624.596 692.473 625.258 692.473 cv
625.92 692.473 626.458 693.01 626.458 693.674 cv
626.458 695.75 626.215 703.002 626.031 705.041 cv
625.975 705.664 625.451 706.135 624.838 706.135 cv
cp
.729412 .52549 .388235 rgb
f
626.449 715.637 mo
622.996 715.637 618.99 714.791 616.795 712.363 cv
616.352 711.873 616.389 711.113 616.881 710.67 cv
617.373 710.225 618.131 710.264 618.576 710.754 cv
620.16 712.506 623.732 713.467 627.688 713.195 cv
630.732 712.988 633.319 712.059 634.123 710.883 cv
634.496 710.334 635.244 710.195 635.791 710.568 cv
636.339 710.941 636.479 711.689 636.105 712.236 cv
634.852 714.07 631.766 715.324 627.85 715.59 cv
627.398 715.621 626.929 715.637 626.449 715.637 cv
cp
f
605.44 685.471 mo
604.935 685.471 604.454 685.174 604.243 684.68 cv
603.962 684.018 604.271 683.256 604.931 682.975 cv
609.166 681.176 613.932 681.172 616.789 682.971 cv
617.396 683.354 617.58 684.154 617.197 684.762 cv
616.816 685.369 616.014 685.555 615.406 685.17 cv
613.658 684.07 609.953 683.662 605.948 685.367 cv
605.782 685.438 605.608 685.471 605.44 685.471 cv
cp
.227451 .117647 .039216 rgb
f
638.843 685.484 mo
638.436 685.484 638.033 685.293 637.78 684.934 cv
637.366 684.348 637.506 683.537 638.092 683.123 cv
640.342 681.533 647.383 681.039 650.26 682.732 cv
650.878 683.098 651.085 683.895 650.721 684.512 cv
650.356 685.131 649.559 685.334 648.941 684.973 cv
646.976 683.814 641.127 684.16 639.592 685.246 cv
639.363 685.406 639.103 685.484 638.843 685.484 cv
cp
f
612.889 701.895 mo
612.889 704.191 610.195 706.053 606.872 706.053 cv
603.548 706.053 600.853 704.191 600.853 701.895 cv
600.853 699.598 603.548 697.736 606.872 697.736 cv
610.195 697.736 612.889 699.598 612.889 701.895 cv
cp
.94902 .729412 .580392 rgb
f
652.946 701.895 mo
652.946 704.191 650.252 706.053 646.928 706.053 cv
643.604 706.053 640.909 704.191 640.909 701.895 cv
640.909 699.598 643.604 697.736 646.928 697.736 cv
650.252 697.736 652.946 699.598 652.946 701.895 cv
cp
f
649.601 662.787 mo
649.601 662.787 644.221 668.531 627.627 672.559 cv
592.298 681.137 594.271 687.795 594.271 687.795 cv
594.271 687.795 585.292 682.271 591.937 662.787 cv
600.853 636.643 640.883 636.073 650.604 648.476 cv
671.27 674.844 658.287 696.566 658.287 696.566 cv
658.287 696.566 658.27 678.059 649.601 662.787 cv
cp
.2 .098039 .027451 rgb
f
615.289 693.588 mo
615.027 693.588 614.762 693.51 614.533 693.344 cv
611.834 691.408 608.298 691.109 604.581 692.506 cv
603.909 692.758 603.159 692.418 602.907 691.744 cv
602.655 691.072 602.995 690.324 603.667 690.072 cv
608.226 688.363 612.621 688.775 616.047 691.232 cv
616.631 691.65 616.764 692.463 616.346 693.047 cv
616.092 693.4 615.693 693.588 615.289 693.588 cv
cp
.227451 .117647 .039216 rgb
f
638.639 693.588 mo
638.234 693.588 637.836 693.4 637.582 693.047 cv
637.163 692.463 637.297 691.65 637.88 691.232 cv
641.306 688.775 645.706 688.363 650.261 690.072 cv
650.933 690.324 651.273 691.072 651.021 691.744 cv
650.768 692.416 650.017 692.758 649.349 692.506 cv
645.627 691.107 642.093 691.408 639.396 693.344 cv
639.166 693.51 638.901 693.588 638.639 693.588 cv
cp
f
190.632 497.92 mo
190.632 536.604 159.273 567.965 120.587 567.965 cv
81.9019 567.965 50.5415 536.604 50.5415 497.92 cv
50.5415 459.234 81.9019 427.873 120.587 427.873 cv
159.273 427.873 190.632 459.234 190.632 497.92 cv
cp
.92549 .435294 .27451 rgb
f
129.178 566.91 mo
112.015 566.91 li
112.015 545.896 li
129.178 545.896 li
129.178 566.91 li
cp
.878431 .666667 .47451 rgb
f
137.127 556.619 mo
120.938 559.674 li
103.721 556.734 li
98.5024 558.516 94.606 559.988 91.6782 561.717 cv
95.1255 563.281 98.7163 564.58 102.434 565.576 cv
106.088 566.555 109.857 567.25 113.721 567.627 cv
115.2 567.77 116.696 567.854 118.2 567.904 cv
118.995 567.932 119.787 567.965 120.587 567.965 cv
121.388 567.965 122.18 567.932 122.974 567.904 cv
124.372 567.857 125.761 567.777 127.138 567.65 cv
131.006 567.291 134.784 566.623 138.445 565.66 cv
142.275 564.652 145.97 563.318 149.514 561.709 cv
146.526 559.945 142.508 558.449 137.127 556.619 cv
cp
.376471 .372549 .427451 rgb
f
130.626 553.221 mo
130.626 553.221 129.053 551.471 129.178 551.514 cv
129.303 551.557 120.596 556.834 120.596 556.834 cv
112.015 551.514 li
110.152 553.271 li
110.712 555.553 li
113.721 567.627 li
115.2 567.77 116.696 567.854 118.2 567.904 cv
118.648 564.939 li
116.289 560.705 li
120.458 557.588 li
120.458 557.357 li
120.586 557.471 li
120.715 557.357 li
120.715 557.588 li
124.885 560.705 li
122.526 564.939 li
122.974 567.904 li
124.372 567.857 125.761 567.777 127.138 567.65 cv
130.352 554.754 li
130.626 553.221 li
cp
1 1 1 rgb
f
124.885 560.705 mo
120.715 557.588 li
120.715 557.357 li
120.586 557.471 li
120.458 557.357 li
120.458 557.588 li
116.289 560.705 li
118.648 564.939 li
118.2 567.904 li
118.995 567.932 119.787 567.965 120.587 567.965 cv
121.388 567.965 122.18 567.932 122.974 567.904 cv
122.526 564.939 li
124.885 560.705 li
cp
.235294 .192157 .247059 rgb
f
140.76 511.668 mo
139.641 518.027 143.413 523.324 149.188 524.467 cv
154.961 525.605 160.547 522.16 161.664 515.799 cv
162.784 509.438 159.011 503.355 153.238 502.215 cv
147.465 501.072 141.877 505.303 140.76 511.668 cv
cp
.878431 .666667 .47451 rgb
f
100.476 511.668 mo
101.594 518.027 97.8232 523.324 92.0483 524.467 cv
86.2744 525.605 80.6895 522.16 79.5723 515.799 cv
78.4536 509.438 82.2251 503.355 87.9985 502.215 cv
93.7715 501.072 99.3574 505.303 100.476 511.668 cv
cp
f
149.43 468.814 mo
143.793 461.154 135.002 456.127 125.668 455.754 cv
125.667 455.754 125.485 455.748 125.185 455.736 cv
125.196 455.369 li
125.196 455.369 122.933 455.461 120.596 455.553 cv
118.26 455.461 115.997 455.369 115.997 455.369 cv
116.007 455.736 li
115.707 455.748 115.525 455.754 115.524 455.754 cv
106.189 456.127 97.3989 461.154 91.7627 468.814 cv
86.1211 476.479 85.3706 486.133 85.8149 495.379 cv
86.1519 502.365 87.3882 513.645 87.7349 520.633 cv
93.397 541.811 107.482 545.43 120.596 545.43 cv
133.709 545.43 148.265 541.811 153.458 520.633 cv
153.803 513.645 155.04 502.365 155.377 495.379 cv
155.821 486.133 155.072 476.479 149.43 468.814 cv
cp
f
111.853 565.025 mo
111.662 565.025 111.473 564.943 111.344 564.785 cv
111.114 564.502 111.156 564.09 111.437 563.857 cv
120.018 556.848 li
120.297 556.619 120.713 556.658 120.942 556.941 cv
121.172 557.221 121.13 557.637 120.848 557.867 cv
112.268 564.877 li
112.146 564.977 111.999 565.025 111.853 565.025 cv
cp
.690196 .678431 .698039 rgb
f
129.014 565.025 mo
128.868 565.025 128.72 564.977 128.598 564.877 cv
120.018 557.867 li
119.737 557.637 119.696 557.221 119.925 556.941 cv
120.155 556.658 120.569 556.619 120.848 556.848 cv
129.43 563.857 li
129.71 564.09 129.751 564.504 129.522 564.785 cv
129.392 564.943 129.204 565.025 129.014 565.025 cv
cp
f
106.789 508.189 mo
106.789 510.773 105.025 512.865 102.849 512.865 cv
100.674 512.865 98.9092 510.773 98.9092 508.189 cv
98.9092 505.607 100.674 503.516 102.849 503.516 cv
105.025 503.516 106.789 505.607 106.789 508.189 cv
cp
.227451 .117647 .039216 rgb
f
142.631 508.189 mo
142.631 510.773 140.868 512.865 138.692 512.865 cv
136.516 512.865 134.751 510.773 134.751 508.189 cv
134.751 505.607 136.516 503.516 138.692 503.516 cv
140.868 503.516 142.631 505.607 142.631 508.189 cv
cp
f
97.3398 499.609 mo
97.0151 499.609 96.6899 499.49 96.4355 499.248 cv
95.9102 498.75 95.8877 497.918 96.3877 497.393 cv
98.6401 495.018 105.233 493.553 109.105 496.225 cv
109.702 496.639 109.852 497.457 109.439 498.053 cv
109.026 498.648 108.209 498.799 107.612 498.387 cv
104.788 496.436 99.6982 497.721 98.2925 499.201 cv
98.0347 499.473 97.687 499.609 97.3398 499.609 cv
cp
f
155.297 522.256 mo
155.125 520.488 154.928 518.486 155.045 516.213 cv
155.377 509.547 155.243 509.404 155.083 509.238 cv
155 509.15 154.879 509.098 154.759 509.098 cv
154.327 509.098 154.272 509.488 154.174 510.199 cv
154.149 510.375 151.588 527.746 138.692 527.746 cv
137.786 527.746 136.867 527.447 135.596 527.037 cv
132.969 526.186 128.997 524.895 120.895 524.895 cv
114.676 524.895 110.854 525.785 107.785 526.502 cv
105.766 526.971 104.171 527.342 102.445 527.342 cv
97.2207 527.342 93.2925 524.811 90.7671 519.822 cv
88.7173 515.768 88.355 511.477 88.3198 510.998 cv
88.3198 510.996 li
88.3198 510.988 88.3198 510.979 88.3193 510.969 cv
88.3179 510.947 88.3164 510.926 88.3145 510.906 cv
88.3115 510.885 li
88.2622 510.508 88.021 510.449 87.8755 510.449 cv
87.7539 510.449 87.6377 510.5 87.5552 510.588 cv
87.4307 510.723 87.4346 510.852 87.4468 511.031 cv
87.4468 511.035 87.4453 511.037 87.4453 511.039 cv
87.4746 512.496 87.5332 513.578 87.5776 514.379 cv
87.5381 514.371 87.499 514.361 87.457 514.367 cv
87.2246 514.379 87.043 514.572 87.043 514.805 cv
87.043 515.242 li
87.043 515.338 87.0562 515.406 87.1138 515.48 cv
87.1143 515.482 87.1172 515.488 87.1182 515.49 cv
87.3135 517.217 87.7007 520.68 87.3472 522.143 cv
86.6729 524.938 86.167 528.746 87.5938 531.021 cv
88.0732 531.789 88.7363 532.324 89.5693 532.619 cv
88.458 534.951 88.4932 537.404 89.6841 539.418 cv
90.6299 541.014 92.1689 542.031 93.6323 541.996 cv
93.9609 546.777 97.3125 548.494 100.414 548.494 cv
100.991 548.494 101.556 548.436 102.07 548.324 cv
103.407 551.568 106.424 552.738 108.863 552.738 cv
110.667 552.738 112.234 552.139 113.065 551.189 cv
114.052 552.939 116.015 554.068 118.188 554.068 cv
120.279 554.068 122.095 553.043 123.151 551.293 cv
123.931 551.969 125.701 553.23 128.004 553.23 cv
130.229 553.23 132.338 552.063 134.278 549.762 cv
135.04 550.303 136.004 550.586 137.092 550.586 cv
140.139 550.586 143.606 548.381 144.053 545.355 cv
144.329 545.395 144.599 545.414 144.865 545.414 cv
144.865 545.414 144.865 545.414 144.866 545.414 cv
146.699 545.414 148.28 544.467 149.202 542.814 cv
150.045 541.301 150.173 539.459 149.573 538.041 cv
150.597 537.74 151.69 536.867 152.446 535.705 cv
153.114 534.678 154.052 532.58 153.114 529.777 cv
155.905 528.42 155.648 525.811 155.297 522.256 cv
cp
f
144.469 499.721 mo
144.122 499.721 143.776 499.582 143.517 499.313 cv
141.504 497.201 136.708 497.256 133.833 499.43 cv
133.254 499.865 132.43 499.754 131.993 499.174 cv
131.555 498.596 131.67 497.771 132.249 497.334 cv
136.209 494.346 142.485 494.422 145.418 497.5 cv
145.918 498.025 145.899 498.857 145.375 499.357 cv
145.12 499.6 144.793 499.721 144.469 499.721 cv
cp
f
118.497 524.152 mo
118.467 524.152 118.434 524.152 118.401 524.148 cv
117.678 524.098 117.134 523.469 117.186 522.746 cv
117.356 520.381 117.622 511.09 117.622 508.246 cv
117.622 507.521 118.208 506.934 118.934 506.934 cv
119.66 506.934 120.249 507.521 120.249 508.246 cv
120.249 511.195 119.983 520.471 119.806 522.934 cv
119.756 523.625 119.179 524.152 118.497 524.152 cv
cp
.698039 .490196 .337255 rgb
f
120.688 534.834 mo
117.04 534.834 113.521 533.559 111.299 531.363 cv
110.783 530.852 110.777 530.021 111.288 529.504 cv
111.797 528.99 112.628 528.986 113.145 529.492 cv
116.573 532.881 124.258 533.471 128.664 529.117 cv
129.179 528.611 130.012 528.613 130.52 529.131 cv
131.031 529.646 131.026 530.479 130.51 530.988 cv
127.809 533.658 124.188 534.834 120.688 534.834 cv
cp
.639216 .431373 .27451 rgb
f
87.8735 503.363 mo
88.1309 498.242 87.0635 484.859 93.105 482.449 cv
95.2026 481.613 96.46 481.816 98.5542 482.457 cv
101.374 483.32 105.5 482.672 107.993 481.186 cv
112.222 484.477 117.979 482.918 120.168 480.609 cv
120.146 480.627 122.259 483.029 126.856 483.414 cv
129.593 483.645 132.412 483.488 135.139 483.313 cv
139.667 483.021 146.219 481.834 148.35 482.125 cv
154.157 482.916 154.045 493.604 154.096 498.369 cv
154.119 500.574 154.096 506.998 152.475 516.857 cv
152.389 517.375 152.659 517.383 153.381 517.301 cv
154.189 517.209 154.485 516.791 154.608 516.191 cv
155.564 511.613 156.819 497.506 158.061 493.057 cv
160.1 485.75 161.654 474.904 159.018 468.848 cv
158.265 467.113 153.993 461.77 149.748 462.096 cv
154 453.695 145.542 449.268 138.665 448.986 cv
127.563 448.535 118.401 451.057 108.03 454.541 cv
102.281 456.473 97.8179 458.834 92.9185 462.584 cv
88.6909 465.82 86.4873 468.607 85.2104 473.664 cv
82.4912 484.43 85.4668 504.738 87.043 515.545 cv
87.2021 516.633 87.3477 517.752 87.624 518.82 cv
88.2271 521.148 90.5859 519.605 90.0244 518.27 cv
87.957 513.355 87.7617 505.578 87.8735 503.363 cv
cp
.227451 .117647 .039216 rgb
f
84.8413 498.297 mo
84.8413 498.297 106.789 476.352 111.267 468.838 cv
111.267 468.838 121.463 481.588 138.692 488.053 cv
155.92 494.52 157.056 498.408 157.056 498.408 cv
157.056 498.408 161.86 492.625 164.822 478.906 cv
169.139 458.9 148.186 421.41 99.2363 441.986 cv
99.2363 441.986 64.0039 456.775 84.8413 498.297 cv
cp
.176471 .494118 .619608 rgb
f
111.084 468.811 mo
110.91 468.811 110.737 468.74 110.606 468.605 cv
110.146 468.129 99.3164 456.779 98.5728 443.117 cv
98.5532 442.75 98.8345 442.438 99.2007 442.418 cv
99.564 442.385 99.8809 442.68 99.9009 443.045 cv
100.616 456.203 111.454 467.568 111.563 467.682 cv
111.818 467.947 111.811 468.367 111.547 468.623 cv
111.417 468.746 111.251 468.811 111.084 468.811 cv
cp
.109804 .380392 .54902 rgb
f
155.377 496.045 mo
155.094 496.045 154.833 495.863 154.743 495.58 cv
154.62 495.188 141.956 456.234 102.109 442.287 cv
101.762 442.164 101.58 441.785 101.701 441.439 cv
101.822 441.092 102.2 440.908 102.549 441.031 cv
143.04 455.205 155.885 494.783 156.011 495.182 cv
156.122 495.531 155.926 495.904 155.576 496.016 cv
155.51 496.035 155.442 496.045 155.377 496.045 cv
cp
f
161.86 486.977 mo
161.502 486.977 161.208 486.691 161.196 486.334 cv
161.192 486.223 160.756 475.156 154.486 463.865 cv
148.719 453.482 136.672 440.764 112.026 439.146 cv
111.659 439.123 111.382 438.809 111.406 438.441 cv
111.43 438.074 111.748 437.801 112.113 437.822 cv
137.384 439.48 149.75 452.574 155.675 463.268 cv
162.084 474.834 162.521 486.178 162.525 486.291 cv
162.537 486.656 162.249 486.965 161.883 486.977 cv
161.875 486.977 161.868 486.977 161.86 486.977 cv
cp
f
83.1777 492.668 mo
83.1421 492.668 83.1074 492.666 83.0723 492.66 cv
82.7095 492.604 82.4619 492.262 82.5195 491.898 cv
82.5469 491.723 85.5327 474.064 104.406 461.354 cv
104.71 461.148 105.124 461.23 105.329 461.533 cv
105.534 461.84 105.454 462.25 105.149 462.457 cv
86.75 474.848 83.8604 491.936 83.832 492.107 cv
83.7813 492.434 83.4985 492.668 83.1777 492.668 cv
cp
f
79.3765 480.082 mo
79.3535 480.082 79.3311 480.08 79.3081 480.078 cv
78.9424 480.041 78.6768 479.715 78.7144 479.35 cv
78.7368 479.123 81.2085 456.779 98.9233 447.311 cv
99.2451 447.139 99.6489 447.258 99.8232 447.582 cv
99.9966 447.906 99.8745 448.311 99.5503 448.484 cv
82.4688 457.613 80.0591 479.268 80.0371 479.484 cv
80.002 479.826 79.7124 480.082 79.3765 480.082 cv
cp
f
137 555.746 mo
136.976 555.631 136.891 555.541 136.78 555.508 cv
132.629 553.977 li
132.622 553.975 132.592 553.975 132.579 553.973 cv
130.626 553.221 li
127.138 567.65 li
131.006 567.291 134.784 566.623 138.445 565.66 cv
137.127 556.619 li
137 555.746 li
cp
.486275 .486275 .537255 rgb
f
110.152 553.271 mo
108.248 553.977 li
108.246 553.977 108.239 553.977 108.237 553.977 cv
104.086 555.508 li
103.974 555.541 103.89 555.631 103.865 555.746 cv
103.721 556.734 li
102.434 565.576 li
106.088 566.555 109.857 567.25 113.721 567.627 cv
110.712 555.553 li
110.152 553.271 li
cp
f
359.413 684.205 mo
359.413 722.889 328.053 754.249 289.368 754.249 cv
250.682 754.249 219.322 722.889 219.322 684.205 cv
219.322 645.52 250.682 614.158 289.368 614.158 cv
328.053 614.158 359.413 645.52 359.413 684.205 cv
cp
.866667 .435294 .556863 rgb
f
265.583 687.729 mo
266.175 692.505 263.425 696.774 259.439 697.269 cv
255.453 697.763 251.742 694.292 251.152 689.517 cv
250.56 684.743 253.312 680.474 257.298 679.979 cv
261.285 679.485 264.994 682.956 265.583 687.729 cv
cp
1 .8 .6 rgb
f
313.15 687.729 mo
312.558 692.505 315.308 696.774 319.294 697.269 cv
323.281 697.763 326.992 694.292 327.583 689.517 cv
328.175 684.743 325.421 680.474 321.435 679.979 cv
317.449 679.485 313.74 682.956 313.15 687.729 cv
cp
f
314.551 740.78 mo
311.883 734.103 309.072 732.644 296.439 726.976 cv
294.214 726.171 290.871 727.03 289.367 727.501 cv
287.863 727.03 284.519 726.171 282.294 726.976 cv
272.904 731.19 268.942 733.077 266.431 736.511 cv
281.208 742.669 298.792 744.218 314.551 740.78 cv
cp
f
316.207 649.249 mo
310.349 640.942 304.335 640.687 294.638 640.284 cv
284.097 640.284 li
274.398 640.687 268.384 640.942 262.529 649.249 cv
256.667 657.562 258.888 659.716 259.351 669.743 cv
259.701 677.319 255.171 672.005 258.304 693.075 cv
261.439 714.147 279.738 720.905 289.367 720.905 cv
298.996 720.905 315.921 715.255 320.431 693.075 cv
324.939 670.897 319.033 677.319 319.384 669.743 cv
319.845 659.716 322.066 657.562 316.207 649.249 cv
cp
f
296.437 738.44 mo
282.296 738.44 li
282.296 716.61 li
296.437 716.61 li
296.437 738.44 li
cp
f
287.277 700.829 mo
287.242 700.829 287.205 700.827 287.167 700.825 cv
286.507 700.765 286.021 700.183 286.08 699.522 cv
286.244 697.7 286.498 690.554 286.498 688.368 cv
286.498 687.706 287.035 687.169 287.697 687.169 cv
288.361 687.169 288.898 687.706 288.898 688.368 cv
288.898 690.444 288.654 697.696 288.47 699.737 cv
288.416 700.36 287.89 700.829 287.277 700.829 cv
cp
.729412 .52549 .388235 rgb
f
288.888 710.333 mo
285.435 710.333 281.429 709.485 279.236 707.06 cv
278.791 706.567 278.828 705.81 279.32 705.364 cv
279.812 704.921 280.572 704.958 281.015 705.448 cv
282.601 707.202 286.185 708.161 290.126 707.892 cv
293.171 707.685 295.759 706.753 296.562 705.577 cv
296.935 705.03 297.683 704.89 298.23 705.263 cv
298.779 705.638 298.917 706.384 298.544 706.931 cv
297.291 708.765 294.205 710.019 290.289 710.286 cv
289.837 710.315 289.369 710.333 288.888 710.333 cv
cp
f
276.369 687.552 mo
276.369 690.345 274.46 692.608 272.107 692.608 cv
269.753 692.608 267.843 690.345 267.843 687.552 cv
267.843 684.759 269.753 682.493 272.107 682.493 cv
274.46 682.493 276.369 684.759 276.369 687.552 cv
cp
.227451 .117647 .039216 rgb
f
277.482 678.567 mo
277.125 678.567 276.767 678.419 276.509 678.13 cv
275.304 676.769 273.677 676.46 272.523 676.44 cv
270.751 676.415 268.81 677.101 267.804 678.163 cv
267.31 678.683 266.486 678.704 265.966 678.21 cv
265.447 677.716 265.425 676.894 265.919 676.374 cv
267.443 674.767 269.992 673.813 272.568 673.841 cv
274.935 673.882 277.027 674.794 278.455 676.407 cv
278.931 676.944 278.88 677.765 278.343 678.241 cv
278.097 678.46 277.789 678.567 277.482 678.567 cv
cp
f
302.308 678.423 mo
302.029 678.423 301.746 678.333 301.507 678.146 cv
300.943 677.702 300.845 676.886 301.287 676.321 cv
302.38 674.929 304.445 673.995 306.677 673.89 cv
309.037 673.776 311.199 674.606 312.744 676.228 cv
313.24 676.747 313.22 677.569 312.701 678.063 cv
312.181 678.56 311.359 678.54 310.863 678.021 cv
309.492 676.579 307.728 676.442 306.802 676.485 cv
305.132 676.565 303.832 677.288 303.332 677.925 cv
303.076 678.253 302.695 678.423 302.308 678.423 cv
cp
f
310.833 687.552 mo
310.833 690.345 308.923 692.608 306.572 692.608 cv
304.218 692.608 302.31 690.345 302.31 687.552 cv
302.31 684.757 304.218 682.491 306.572 682.491 cv
308.923 682.491 310.833 684.757 310.833 687.552 cv
cp
f
275.328 698.591 mo
275.328 700.888 272.634 702.749 269.31 702.749 cv
265.986 702.749 263.291 700.888 263.291 698.591 cv
263.291 696.294 265.986 694.433 269.31 694.433 cv
272.634 694.433 275.328 696.294 275.328 698.591 cv
cp
.988235 .690196 .584314 rgb
f
315.386 698.591 mo
315.386 700.888 312.691 702.749 309.367 702.749 cv
306.042 702.749 303.349 700.888 303.349 698.591 cv
303.349 696.294 306.042 694.433 309.367 694.433 cv
312.691 694.433 315.386 696.294 315.386 698.591 cv
cp
f
310.093 641.417 mo
300.523 635.069 286.736 634.438 275.722 638.032 cv
269.707 639.995 255.142 645.194 253.558 664.759 cv
251.462 678.972 256.47 687.837 256.47 687.837 cv
256.47 687.837 257.195 675.079 282.296 668.079 cv
298.746 663.491 304.271 658.306 304.271 658.306 cv
304.271 658.306 306.052 665.38 313.07 672.671 cv
322.419 682.386 321.57 689.685 321.57 689.685 cv
321.57 689.685 324.849 684.712 325.33 676.351 cv
325.332 676.347 325.333 676.343 325.333 676.339 cv
327.167 667.005 325.658 651.737 310.093 641.417 cv
cp
.309804 .184314 .098039 rgb
f
310.404 633.841 mo
310.404 645.284 301.845 647.177 291.289 647.177 cv
280.73 647.177 272.171 644.337 272.171 633.841 cv
272.171 626.476 280.73 620.505 291.289 620.505 cv
301.845 620.505 310.404 626.476 310.404 633.841 cv
cp
f
316.517 744.737 mo
313.283 734.952 311.781 733.407 300.46 728.218 cv
300.308 728.149 300.134 728.153 299.988 728.235 cv
299.841 728.315 299.775 728.468 299.72 728.626 cv
297.136 735.921 282.302 736.255 279.634 728.44 cv
279.613 728.327 li
279.585 728.167 279.484 728.028 279.339 727.954 cv
279.197 727.878 279.025 727.872 278.878 727.94 cv
267.021 733.347 265.464 734.917 262.216 744.737 cv
261.97 745.483 261.639 746.743 261.252 748.36 cv
269.86 752.138 279.365 754.249 289.368 754.249 cv
299.371 754.249 308.875 752.138 317.483 748.36 cv
317.095 746.743 316.764 745.483 316.517 744.737 cv
cp
.407843 .294118 .458824 rgb
f
528.193 497.919 mo
528.193 536.604 496.834 567.965 458.148 567.965 cv
419.463 567.965 388.103 536.604 388.103 497.919 cv
388.103 459.234 419.463 427.873 458.148 427.873 cv
496.834 427.873 528.193 459.234 528.193 497.919 cv
cp
.701961 .211765 .368627 rgb
f
465.217 554.471 mo
451.078 554.471 li
451.078 532.641 li
465.217 532.641 li
465.217 554.471 li
cp
1 .8 .6 rgb
f
485.273 559.605 mo
482.359 551.002 480.85 548.926 472.304 544.896 cv
472.254 544.551 li
472.232 544.453 472.16 544.375 472.064 544.35 cv
472.064 544.35 468.469 543.029 468.457 543.029 cv
466.779 542.383 li
466.779 542.383 459.533 544.146 458.029 544.605 cv
456.525 544.146 449.201 542.428 449.201 542.428 cv
447.564 543.031 li
443.992 544.35 li
443.896 544.375 443.824 544.453 443.803 544.551 cv
443.733 545.023 li
435.417 548.992 433.868 551.207 431.023 559.605 cv
430.828 560.18 430.58 561.07 430.294 562.193 cv
435.83 564.596 441.734 566.307 447.903 567.211 cv
450.408 567.578 452.958 567.805 455.542 567.898 cv
456.408 567.93 457.274 567.965 458.148 567.965 cv
458.94 567.965 459.726 567.932 460.512 567.904 cv
463.087 567.818 465.627 567.602 468.124 567.246 cv
474.39 566.352 480.386 564.631 486.002 562.193 cv
485.716 561.07 485.468 560.18 485.273 559.605 cv
cp
.376471 .372549 .427451 rgb
f
466.771 542.426 mo
465.927 541.768 465.217 541.162 465.217 541.162 cv
465.217 541.162 459.533 544.146 458.029 544.605 cv
456.525 544.146 451.078 541.162 451.078 541.162 cv
451.078 541.162 450.142 541.863 449.213 542.477 cv
449.682 544.385 li
455.542 567.898 li
456.408 567.93 457.274 567.965 458.148 567.965 cv
458.94 567.965 459.726 567.932 460.512 567.904 cv
466.545 543.701 li
466.771 542.426 li
cp
1 1 1 rgb
f
434.244 503.808 mo
434.836 508.581 432.086 512.854 428.1 513.346 cv
424.113 513.84 420.402 510.368 419.813 505.594 cv
419.221 500.819 421.973 496.55 425.959 496.056 cv
429.945 495.562 433.654 499.032 434.244 503.808 cv
cp
1 .8 .6 rgb
f
481.811 503.808 mo
481.219 508.581 483.969 512.854 487.955 513.346 cv
491.941 513.84 495.652 510.368 496.244 505.594 cv
496.836 500.819 494.082 496.55 490.096 496.056 cv
486.109 495.562 482.4 499.032 481.811 503.808 cv
cp
f
484.988 465.278 mo
479.129 456.974 473.115 456.716 463.418 456.314 cv
452.879 456.314 li
443.18 456.716 437.166 456.974 431.311 465.278 cv
425.449 473.592 427.67 475.747 428.133 485.774 cv
428.482 493.351 423.953 488.034 427.086 509.106 cv
430.221 530.178 448.52 536.936 458.148 536.936 cv
467.775 536.936 484.703 531.285 489.211 509.106 cv
493.721 486.927 487.814 493.351 488.166 485.774 cv
488.627 475.747 490.848 473.592 484.988 465.278 cv
cp
f
456.057 516.861 mo
456.021 516.861 455.984 516.859 455.947 516.855 cv
455.287 516.797 454.801 516.213 454.861 515.553 cv
455.025 513.736 455.279 506.589 455.279 504.399 cv
455.279 503.736 455.816 503.199 456.479 503.199 cv
457.141 503.199 457.68 503.736 457.68 504.399 cv
457.68 506.481 457.436 513.734 457.252 515.77 cv
457.195 516.393 456.672 516.861 456.057 516.861 cv
cp
.729412 .52549 .388235 rgb
f
457.689 526.475 mo
457.604 526.475 457.52 526.475 457.434 526.473 cv
453.197 526.404 449.713 524.711 447.875 521.828 cv
447.52 521.27 447.684 520.527 448.242 520.172 cv
448.803 519.813 449.543 519.979 449.9 520.539 cv
451.883 523.65 455.855 524.047 457.473 524.072 cv
460.471 524.117 463.289 523.16 464.227 521.789 cv
464.6 521.24 465.348 521.102 465.895 521.477 cv
466.441 521.85 466.582 522.596 466.207 523.143 cv
464.836 525.15 461.434 526.475 457.689 526.475 cv
cp
f
445.15 503.581 mo
445.15 506.374 443.242 508.639 440.889 508.639 cv
438.535 508.639 436.625 506.374 436.625 503.581 cv
436.625 500.788 438.535 498.522 440.889 498.522 cv
443.242 498.522 445.15 500.788 445.15 503.581 cv
cp
.227451 .117647 .039216 rgb
f
446.264 495.453 mo
445.906 495.453 445.549 495.305 445.291 495.015 cv
444.086 493.654 442.459 493.345 441.305 493.325 cv
439.461 493.279 437.592 493.986 436.584 495.048 cv
436.09 495.568 435.268 495.589 434.748 495.096 cv
434.227 494.602 434.205 493.779 434.699 493.259 cv
436.223 491.653 438.787 490.701 441.35 490.727 cv
443.717 490.768 445.809 491.679 447.236 493.292 cv
447.713 493.829 447.662 494.65 447.125 495.126 cv
446.879 495.345 446.57 495.453 446.264 495.453 cv
cp
f
471.09 495.453 mo
470.809 495.453 470.525 495.362 470.287 495.176 cv
469.723 494.732 469.625 493.916 470.068 493.352 cv
471.16 491.958 473.227 491.026 475.457 490.919 cv
477.832 490.808 479.98 491.636 481.525 493.257 cv
482.021 493.776 482.002 494.599 481.482 495.094 cv
480.963 495.59 480.141 495.569 479.645 495.05 cv
478.273 493.61 476.514 493.473 475.582 493.515 cv
473.912 493.595 472.613 494.318 472.113 494.955 cv
471.855 495.282 471.475 495.453 471.09 495.453 cv
cp
f
479.615 503.581 mo
479.615 506.375 477.705 508.64 475.354 508.64 cv
473 508.64 471.09 506.375 471.09 503.581 cv
471.09 500.788 473 498.521 475.354 498.521 cv
477.705 498.521 479.615 500.788 479.615 503.581 cv
cp
f
423.014 477.744 mo
423.014 465.911 430.609 453.911 444.109 450.244 cv
463.91 444.866 485.01 449.659 490.916 467.744 cv
493.811 476.608 494.238 484.089 492.68 493.298 cv
491.797 498.521 490.156 502.921 489.027 503.8 cv
490.096 496.056 485.977 485.024 485.846 484.577 cv
486.186 485.735 485.537 487.274 485.18 488.411 cv
483.51 487.491 473.258 479.386 472.189 478.155 cv
471.977 478.702 472.914 481.708 472.639 484.952 cv
463.346 482.244 455.762 475.165 456.268 476.827 cv
456.965 479.116 456.824 482.167 456.479 482.077 cv
448.299 479.956 441.23 475.685 436.367 470.748 cv
434.324 481.339 428.914 501.188 426.266 502.565 cv
422.014 494.911 423.014 479.497 423.014 477.744 cv
cp
.709804 .67451 .619608 rgb
f
451.541 551.863 mo
451.314 551.863 451.09 551.766 450.938 551.578 cv
450.664 551.244 450.713 550.754 451.047 550.48 cv
457.535 545.18 li
457.869 544.908 458.361 544.957 458.633 545.289 cv
458.904 545.623 458.855 546.113 458.521 546.387 cv
452.033 551.688 li
451.889 551.807 451.715 551.863 451.541 551.863 cv
cp
.690196 .678431 .698039 rgb
f
464.516 551.863 mo
464.344 551.863 464.168 551.807 464.023 551.688 cv
457.535 546.387 li
457.201 546.113 457.152 545.623 457.426 545.289 cv
457.697 544.957 458.189 544.908 458.521 545.18 cv
465.01 550.48 li
465.344 550.754 465.393 551.244 465.121 551.578 cv
464.967 551.766 464.742 551.863 464.516 551.863 cv
cp
f
444.109 514.621 mo
444.109 516.918 441.416 518.779 438.092 518.779 cv
434.768 518.779 432.072 516.918 432.072 514.621 cv
432.072 512.324 434.768 510.462 438.092 510.462 cv
441.416 510.462 444.109 512.324 444.109 514.621 cv
cp
.988235 .690196 .584314 rgb
f
484.168 514.621 mo
484.168 516.918 481.473 518.779 478.148 518.779 cv
474.824 518.779 472.131 516.918 472.131 514.621 cv
472.131 512.324 474.824 510.462 478.148 510.462 cv
481.473 510.462 484.168 512.324 484.168 514.621 cv
cp
f
449.213 542.477 mo
449.201 542.428 li
447.564 543.031 li
447.564 543.031 447.559 543.031 447.557 543.031 cv
443.992 544.35 li
443.896 544.375 443.824 544.453 443.803 544.551 cv
443.733 545.023 li
442.336 554.637 li
442.313 554.746 442.357 554.857 442.451 554.92 cv
448.104 558.582 li
445.902 564.652 li
445.867 564.752 445.893 564.863 445.971 564.938 cv
447.903 567.211 li
450.408 567.578 452.958 567.805 455.542 567.898 cv
449.682 544.385 li
449.213 542.477 li
cp
.486275 .486275 .537255 rgb
f
470.154 564.652 mo
467.953 558.582 li
473.605 554.92 li
473.699 554.857 473.744 554.746 473.723 554.637 cv
472.304 544.896 li
472.254 544.551 li
472.232 544.453 472.16 544.375 472.064 544.35 cv
468.5 543.031 li
468.494 543.031 468.469 543.029 468.457 543.029 cv
466.779 542.383 li
466.771 542.426 li
466.545 543.701 li
460.512 567.904 li
463.087 567.818 465.627 567.602 468.124 567.246 cv
470.086 564.938 li
470.164 564.863 470.189 564.752 470.154 564.652 cv
cp
f
359.412 497.92 mo
359.412 536.604 328.053 567.965 289.367 567.965 cv
250.682 567.965 219.322 536.604 219.322 497.92 cv
219.322 459.234 250.682 427.873 289.367 427.873 cv
328.053 427.873 359.412 459.234 359.412 497.92 cv
cp
.529412 .776471 .858824 rgb
f
311.717 551.83 mo
309.166 548.99 305.119 547.127 296.556 543.377 cv
294.331 542.592 290.987 543.432 289.483 543.889 cv
287.981 543.432 284.638 542.592 282.413 543.377 cv
271.955 547.957 268.23 549.723 265.743 553.891 cv
280.097 562.207 298.639 561.643 311.717 551.83 cv
cp
1 .831373 .682353 rgb
f
316.322 466.391 mo
310.465 458.084 304.451 457.828 294.755 457.426 cv
284.214 457.426 li
274.515 457.828 268.501 458.084 262.646 466.391 cv
256.784 474.703 259.005 476.857 259.468 486.885 cv
259.817 494.461 255.288 489.146 258.423 510.217 cv
261.556 531.289 279.854 538.047 289.483 538.047 cv
299.111 538.047 316.037 532.396 320.547 510.217 cv
325.055 488.039 319.148 494.461 319.5 486.885 cv
319.961 476.857 322.182 474.703 316.322 466.391 cv
cp
f
296.554 555.582 mo
282.413 555.582 li
282.413 533.752 li
296.554 533.752 li
296.554 555.582 li
cp
f
287.394 517.971 mo
287.357 517.971 287.321 517.969 287.284 517.967 cv
286.624 517.906 286.138 517.322 286.196 516.662 cv
286.36 514.848 286.614 507.699 286.614 505.51 cv
286.614 504.846 287.152 504.309 287.815 504.309 cv
288.478 504.309 289.015 504.846 289.015 505.51 cv
289.015 507.592 288.771 514.846 288.587 516.879 cv
288.53 517.502 288.007 517.971 287.394 517.971 cv
cp
.776471 .556863 .458824 rgb
f
288.806 528.143 mo
285.487 528.143 282.532 526.842 280.421 524.43 cv
279.984 523.932 280.034 523.174 280.533 522.736 cv
281.032 522.299 281.79 522.35 282.227 522.848 cv
284.62 525.582 287.765 525.824 289.437 525.725 cv
292.011 525.57 294.53 524.408 295.563 522.898 cv
295.937 522.35 296.684 522.211 297.23 522.586 cv
297.777 522.959 297.918 523.705 297.544 524.252 cv
296.076 526.4 292.95 527.918 289.579 528.119 cv
289.319 528.135 289.062 528.143 288.806 528.143 cv
cp
f
276.485 504.691 mo
276.485 507.486 274.577 509.75 272.224 509.75 cv
269.87 509.75 267.962 507.486 267.962 504.691 cv
267.962 501.9 269.87 499.633 272.224 499.633 cv
274.577 499.633 276.485 501.9 276.485 504.691 cv
cp
.227451 .117647 .039216 rgb
f
277.601 496.656 mo
277.241 496.656 276.884 496.508 276.628 496.217 cv
275.423 494.857 273.794 494.547 272.642 494.527 cv
270.803 494.49 268.929 495.189 267.921 496.25 cv
267.426 496.771 266.604 496.791 266.083 496.299 cv
265.563 495.805 265.542 494.982 266.036 494.461 cv
267.56 492.855 270.118 491.889 272.686 491.93 cv
275.054 491.971 277.144 492.881 278.573 494.494 cv
279.049 495.031 278.999 495.854 278.462 496.328 cv
278.214 496.547 277.907 496.656 277.601 496.656 cv
cp
f
302.424 496.564 mo
302.145 496.564 301.861 496.473 301.623 496.287 cv
301.059 495.844 300.961 495.025 301.404 494.461 cv
302.496 493.068 304.563 492.137 306.795 492.029 cv
309.162 491.922 311.316 492.746 312.861 494.367 cv
313.355 494.887 313.336 495.709 312.816 496.205 cv
312.299 496.701 311.475 496.68 310.98 496.16 cv
309.609 494.721 307.848 494.574 306.918 494.627 cv
305.248 494.707 303.947 495.43 303.447 496.066 cv
303.191 496.393 302.811 496.564 302.424 496.564 cv
cp
f
310.949 504.691 mo
310.949 507.486 309.039 509.75 306.688 509.75 cv
304.334 509.75 302.426 507.486 302.426 504.691 cv
302.426 501.898 304.334 499.633 306.688 499.633 cv
309.039 499.633 310.949 501.898 310.949 504.691 cv
cp
f
275.446 515.732 mo
275.446 518.027 272.751 519.891 269.427 519.891 cv
266.103 519.891 263.409 518.027 263.409 515.732 cv
263.409 513.436 266.103 511.574 269.427 511.574 cv
272.751 511.574 275.446 513.436 275.446 515.732 cv
cp
1 .713726 .623529 rgb
f
315.502 515.732 mo
315.502 518.027 312.807 519.891 309.482 519.891 cv
306.158 519.891 303.465 518.027 303.465 515.732 cv
303.465 513.436 306.158 511.574 309.482 511.574 cv
312.807 511.574 315.502 513.436 315.502 515.732 cv
cp
f
323.348 458.041 mo
321.334 465.896 310.801 469.98 299.82 467.168 cv
288.839 464.352 281.567 455.703 283.581 447.848 cv
285.595 439.992 296.13 435.906 307.111 438.721 cv
318.092 441.535 325.361 450.186 323.348 458.041 cv
cp
.666667 .129412 .294118 rgb
f
296.524 501.402 mo
296.552 503.236 297.697 506.838 299.223 509.002 cv
300.541 510.871 302.926 511.943 305.764 511.943 cv
311.535 511.943 317.666 507.65 317.762 499.691 cv
317.32 499.379 315.441 498.719 310.852 498.719 cv
303.402 498.719 297.188 500.309 296.524 501.402 cv
cp
305.764 514.541 mo
302.068 514.541 298.91 513.068 297.1 510.5 cv
295.201 507.809 293.926 503.588 293.926 501.338 cv
293.926 496.18 310.682 496.119 310.852 496.119 cv
317.252 496.119 320.363 497.227 320.363 499.502 cv
320.363 509.27 312.842 514.541 305.764 514.541 cv
cp
.227451 .117647 .039216 rgb
f
260.876 499.686 mo
260.969 507.648 267.102 511.941 272.874 511.943 cv
272.876 511.943 li
275.714 511.943 278.099 510.871 279.416 509.002 cv
280.96 506.813 282.114 503.15 282.114 501.338 cv
281.681 500.283 275.608 498.646 268.121 498.646 cv
263.282 498.646 261.323 499.355 260.876 499.686 cv
cp
272.876 514.541 mo
272.875 514.541 272.875 514.541 272.874 514.541 cv
265.798 514.541 258.276 509.27 258.276 499.502 cv
258.276 498.646 258.276 496.049 268.121 496.049 cv
268.798 496.049 284.713 496.107 284.713 501.338 cv
284.713 503.59 283.438 507.809 281.54 510.5 cv
279.728 513.068 276.569 514.541 272.876 514.541 cv
cp
f
283.62 504.146 mo
283.196 504.146 282.781 503.939 282.532 503.559 cv
282.138 502.959 282.306 502.154 282.907 501.76 cv
285.247 500.227 293.485 500.549 295.499 501.4 cv
296.16 501.68 296.47 502.441 296.19 503.102 cv
295.911 503.764 295.147 504.072 294.489 503.795 cv
292.847 503.102 285.669 503.059 284.331 503.934 cv
284.111 504.078 283.864 504.146 283.62 504.146 cv
cp
f
326.594 481.348 mo
326.594 468.023 321.457 456.225 306.258 452.098 cv
283.968 446.041 261.151 449.301 251.067 469.598 cv
246.396 478.998 246.056 497.131 249.786 506.961 cv
254.999 520.699 259.515 524.795 260.786 525.783 cv
256.13 505.855 260.909 492.719 261.075 492.152 cv
260.853 492.916 262.755 493.309 263.409 493.217 cv
270.118 492.264 276.411 482.66 278.269 480.518 cv
277.737 481.131 277.438 485.467 280.222 485.977 cv
288.938 487.574 297.61 478.365 297.61 478.365 cv
297.296 479.525 296.626 481.547 298.682 482.363 cv
303.465 484.264 311.688 479.695 315.502 475.822 cv
321.367 494.291 321.371 505.813 319.871 513.074 cv
326.639 501.264 326.594 483.32 326.594 481.348 cv
cp
.666667 .129412 .294118 rgb
f
316.627 560.707 mo
313.391 551.154 311.535 549.729 304.012 546.432 cv
303.861 546.365 303.691 546.371 303.547 546.451 cv
303.404 546.531 299.451 553.059 290.261 553.059 cv
290.261 553.059 290.261 553.059 290.259 553.059 cv
281.202 553.059 275.991 546.139 275.851 546.064 cv
275.71 545.99 275.542 545.984 275.396 546.051 cv
267.868 549.432 265.591 551.119 262.341 560.707 cv
262.204 561.111 262.041 561.668 261.858 562.35 cv
270.305 565.961 279.602 567.965 289.367 567.965 cv
299.215 567.965 308.582 565.924 317.084 562.256 cv
316.912 561.617 316.758 561.092 316.627 560.707 cv
cp
.980392 .796078 .298039 rgb
f
190.632 684.205 mo
190.632 722.889 159.273 754.25 120.587 754.25 cv
81.9019 754.25 50.5415 722.889 50.5415 684.205 cv
50.5415 645.52 81.9019 614.158 120.587 614.158 cv
159.273 614.158 190.632 645.52 190.632 684.205 cv
cp
.611765 .807843 .705882 rgb
f
129.178 739.381 mo
112.016 739.381 li
112.016 718.367 li
129.178 718.367 li
129.178 739.381 li
cp
1 .8 .6 rgb
f
120.587 754.25 mo
133.344 754.25 145.292 750.822 155.593 744.865 cv
152.625 738.807 146.605 736.633 133.951 732.396 cv
133.584 732.273 130.626 730.068 130.626 730.068 cv
130.626 730.068 129.053 728.32 129.178 728.361 cv
129.302 728.404 120.596 733.682 120.596 733.682 cv
112.016 728.361 li
110.153 730.119 li
110.153 730.119 106.687 732.58 105.893 732.848 cv
94.1489 736.797 88.4546 739.027 85.5938 744.873 cv
95.8926 750.826 107.836 754.25 120.587 754.25 cv
cp
1 1 1 rgb
f
140.762 688.516 mo
139.642 694.875 143.414 700.172 149.188 701.314 cv
154.962 702.455 160.548 699.008 161.664 692.646 cv
162.783 686.285 159.012 680.203 153.239 679.061 cv
147.465 677.922 141.879 682.152 140.762 688.516 cv
cp
1 .8 .6 rgb
f
100.477 688.516 mo
101.594 694.875 97.8237 700.172 92.0483 701.314 cv
86.2734 702.455 80.6895 699.008 79.5723 692.646 cv
78.4531 686.285 82.2246 680.203 87.998 679.061 cv
93.7715 677.922 99.3579 682.152 100.477 688.516 cv
cp
f
149.43 645.662 mo
143.793 638.004 135.002 632.973 125.669 632.604 cv
125.667 632.604 125.484 632.598 125.185 632.584 cv
125.194 632.219 li
125.194 632.219 122.933 632.309 120.596 632.4 cv
118.26 632.309 115.997 632.219 115.997 632.219 cv
116.007 632.584 li
115.708 632.598 115.524 632.604 115.524 632.604 cv
106.189 632.973 97.3994 638.004 91.7622 645.662 cv
86.1211 653.328 85.3711 662.982 85.8159 672.229 cv
86.1514 679.215 87.3882 690.494 87.7349 697.48 cv
93.3965 718.66 107.482 722.277 120.595 722.277 cv
133.71 722.277 148.266 718.66 153.457 697.48 cv
153.804 690.494 155.04 679.215 155.376 672.229 cv
155.821 662.982 155.072 653.328 149.43 645.662 cv
cp
f
106.789 685.039 mo
106.789 687.621 105.025 689.715 102.849 689.715 cv
100.673 689.715 98.9087 687.621 98.9087 685.039 cv
98.9087 682.457 100.673 680.363 102.849 680.363 cv
105.025 680.363 106.789 682.457 106.789 685.039 cv
cp
.227451 .117647 .039216 rgb
f
97.3398 676.457 mo
97.0146 676.457 96.6899 676.338 96.4355 676.096 cv
95.9092 675.598 95.8882 674.768 96.3867 674.24 cv
98.6406 671.867 105.234 670.4 109.105 673.074 cv
109.702 673.486 109.852 674.305 109.439 674.9 cv
109.027 675.498 108.208 675.646 107.612 675.234 cv
104.788 673.283 99.6978 674.568 98.292 676.049 cv
98.0342 676.32 97.687 676.457 97.3398 676.457 cv
cp
f
142.968 677.443 mo
142.622 677.443 142.275 677.309 142.017 677.037 cv
140.005 674.924 135.208 674.98 132.331 677.154 cv
131.752 677.592 130.928 677.477 130.491 676.898 cv
130.054 676.318 130.169 675.496 130.748 675.059 cv
134.708 672.066 140.986 672.145 143.918 675.225 cv
144.419 675.75 144.399 676.58 143.874 677.082 cv
143.619 677.324 143.293 677.443 142.968 677.443 cv
cp
f
118.499 701.002 mo
118.467 701.002 118.435 701 118.403 700.998 cv
117.68 700.945 117.135 700.318 117.187 699.594 cv
117.357 697.219 117.621 687.93 117.621 685.096 cv
117.621 684.369 118.209 683.781 118.935 683.781 cv
119.66 683.781 120.248 684.369 120.248 685.096 cv
120.248 688.033 119.984 697.307 119.807 699.783 cv
119.757 700.475 119.181 701.002 118.499 701.002 cv
cp
.8 .603922 .458824 rgb
f
120.478 710.656 mo
117.341 710.656 114.208 709.914 112.325 708.057 cv
111.809 707.545 111.804 706.713 112.314 706.199 cv
112.825 705.682 113.654 705.678 114.172 706.186 cv
115.89 707.883 120.232 708.502 124.276 707.625 cv
128.122 706.791 130.87 704.895 131.814 702.422 cv
132.073 701.742 132.829 701.402 133.51 701.662 cv
134.187 701.922 134.527 702.68 134.268 703.357 cv
133.001 706.676 129.562 709.168 124.832 710.193 cv
123.47 710.486 121.973 710.656 120.478 710.656 cv
cp
.729412 .52549 .388235 rgb
f
133.095 686.982 mo
132.933 686.982 132.767 686.953 132.607 686.889 cv
131.933 686.619 131.606 685.855 131.876 685.182 cv
132.937 682.529 135.419 680.91 138.055 681.15 cv
140.401 681.365 142.225 683.037 142.7 685.412 cv
142.843 686.123 142.382 686.814 141.67 686.957 cv
140.958 687.102 140.268 686.639 140.125 685.928 cv
139.875 684.684 139.013 683.875 137.815 683.768 cv
136.685 683.664 135.087 684.225 134.314 686.158 cv
134.109 686.672 133.616 686.982 133.095 686.982 cv
cp
f
125.816 718.504 mo
125.816 718.504 123.87 717.877 123.573 716.658 cv
123.275 715.438 121.712 715.146 120.596 715.146 cv
119.48 715.146 117.919 715.438 117.621 716.658 cv
117.324 717.877 115.377 718.504 115.377 718.504 cv
95.1543 721.713 89.0254 701.529 89.0254 701.529 cv
94.3877 726.418 120.596 725.07 120.596 725.07 cv
120.596 725.07 146.805 726.418 152.168 701.529 cv
152.168 701.529 146.156 722.277 125.816 718.504 cv
cp
.2 .098039 .027451 rgb
f
87.5825 682.115 mo
87.999 673.313 88.1094 657.395 95.7285 657.395 cv
101.371 657.395 102.903 658.707 120.042 658.707 cv
135.208 658.707 139.617 656.955 145.292 656.955 cv
151.376 656.955 152.885 665.25 153.002 676.75 cv
153.024 679.121 153.187 681.492 153.32 683.857 cv
153.399 685.244 153.499 686.631 153.569 688.02 cv
153.596 688.582 153.739 690.092 154.462 689.949 cv
155.27 689.789 155.362 686.738 155.445 686.088 cv
156.024 681.5 156.18 676.795 156.177 672.178 cv
156.166 663.652 158.595 647.234 143.474 637.006 cv
134.174 630.713 114.948 630.088 104.247 633.652 cv
96.792 636.133 89.6455 642.598 86.9888 650.127 cv
84.0713 658.396 84.146 664.859 85.1064 681.236 cv
85.2109 683.012 85.4155 684.791 85.6572 686.551 cv
85.8174 687.723 85.9658 688.924 86.2451 690.07 cv
86.8521 692.574 87.7017 690.789 87.6743 689.23 cv
87.6348 686.854 87.4712 684.496 87.5825 682.115 cv
cp
.760784 .592157 .427451 rgb
f
121.542 734.828 mo
121.477 734.57 121.295 734.352 121.045 734.242 cv
120.932 734.193 120.813 734.17 120.694 734.17 cv
120.651 734.17 120.609 734.172 120.567 734.18 cv
120.525 734.172 120.482 734.17 120.439 734.17 cv
120.32 734.17 120.202 734.193 120.089 734.242 cv
119.838 734.352 119.657 734.57 119.591 734.828 cv
115.736 737.781 li
115.394 738.045 115.294 738.516 115.499 738.895 cv
117.739 743.018 li
117.159 754.162 li
118.295 754.217 119.438 754.25 120.587 754.25 cv
121.723 754.25 122.852 754.217 123.974 754.164 cv
123.394 743.018 li
125.633 738.895 li
125.839 738.516 125.739 738.045 125.397 737.783 cv
121.542 734.828 li
cp
.235294 .192157 .247059 rgb
f
111.529 742.477 mo
107.871 732.371 li
107.747 732.025 107.925 731.643 108.269 731.518 cv
108.619 731.393 108.998 731.572 109.121 731.918 cv
112.133 740.236 li
119.985 733.66 li
120.264 733.424 120.685 733.459 120.922 733.742 cv
121.157 734.021 121.121 734.443 120.839 734.68 cv
111.529 742.477 li
cp
.690196 .678431 .698039 rgb
f
129.289 742.473 mo
119.985 734.68 li
119.703 734.443 119.667 734.021 119.902 733.742 cv
120.14 733.461 120.56 733.424 120.839 733.66 cv
128.697 740.242 li
131.746 732.02 li
131.873 731.674 132.256 731.5 132.6 731.627 cv
132.945 731.754 133.12 732.137 132.992 732.482 cv
129.289 742.473 li
cp
f
865.754 684.206 mo
865.754 722.888 834.395 754.249 795.709 754.249 cv
757.023 754.249 725.664 722.888 725.664 684.206 cv
725.664 645.521 757.023 614.159 795.709 614.159 cv
834.395 614.159 865.754 645.521 865.754 684.206 cv
cp
.776471 .329412 .415686 rgb
f
815.883 691.734 mo
814.764 698.096 818.535 703.392 824.311 704.535 cv
830.086 705.675 835.67 702.229 836.787 695.866 cv
837.905 689.506 834.135 683.424 828.36 682.281 cv
822.587 681.14 817.001 685.374 815.883 691.734 cv
cp
1 .8 .6 rgb
f
775.598 691.734 mo
776.717 698.096 772.945 703.392 767.171 704.535 cv
761.396 705.675 755.812 702.229 754.695 695.866 cv
753.576 689.506 757.348 683.424 763.12 682.281 cv
768.893 681.14 774.48 685.374 775.598 691.734 cv
cp
f
824.553 648.882 mo
818.915 641.224 810.125 636.196 800.791 635.823 cv
800.789 635.823 800.607 635.815 800.308 635.804 cv
800.318 635.438 li
800.318 635.438 798.055 635.527 795.719 635.622 cv
793.382 635.527 791.119 635.438 791.119 635.438 cv
791.129 635.804 li
790.83 635.815 790.647 635.823 790.646 635.823 cv
781.313 636.196 772.521 641.224 766.885 648.882 cv
761.243 656.546 760.494 666.202 760.938 675.448 cv
761.273 682.435 762.51 693.713 762.856 700.7 cv
768.519 721.88 782.604 725.498 795.717 725.498 cv
808.832 725.498 823.387 721.88 828.58 700.7 cv
828.926 693.713 830.162 682.435 830.498 675.448 cv
830.943 666.202 830.194 656.546 824.553 648.882 cv
cp
f
804.299 742.601 mo
787.138 742.601 li
787.138 721.588 li
804.299 721.588 li
804.299 742.601 li
cp
f
781.91 688.26 mo
781.91 690.842 780.147 692.936 777.971 692.936 cv
775.795 692.936 774.031 690.842 774.031 688.26 cv
774.031 685.678 775.795 683.584 777.971 683.584 cv
780.147 683.584 781.91 685.678 781.91 688.26 cv
cp
.227451 .117647 .039216 rgb
f
817.754 688.26 mo
817.754 690.842 815.99 692.936 813.814 692.936 cv
811.639 692.936 809.873 690.842 809.873 688.26 cv
809.873 685.678 811.639 683.584 813.814 683.584 cv
815.99 683.584 817.754 685.678 817.754 688.26 cv
cp
f
783.48 679.925 mo
772.463 679.925 li
771.736 679.925 771.148 679.337 771.148 678.611 cv
771.148 677.886 771.736 677.299 772.463 677.299 cv
783.48 677.299 li
784.207 677.299 784.794 677.886 784.794 678.611 cv
784.794 679.337 784.207 679.925 783.48 679.925 cv
cp
f
819.59 678.912 mo
819.244 678.912 818.898 678.775 818.64 678.504 cv
816.627 676.393 811.83 676.451 808.955 678.623 cv
808.375 679.06 807.553 678.946 807.115 678.367 cv
806.678 677.788 806.793 676.964 807.372 676.526 cv
811.332 673.537 817.609 673.614 820.541 676.693 cv
821.041 677.218 821.021 678.05 820.496 678.55 cv
820.241 678.792 819.916 678.912 819.59 678.912 cv
cp
f
793.62 704.222 mo
793.588 704.222 793.557 704.22 793.523 704.218 cv
792.801 704.167 792.256 703.537 792.309 702.814 cv
792.479 700.448 792.743 691.159 792.743 688.316 cv
792.743 687.591 793.331 687.003 794.057 687.003 cv
794.781 687.003 795.369 687.591 795.369 688.316 cv
795.369 691.004 795.118 700.373 794.928 703.003 cv
794.879 703.693 794.303 704.222 793.62 704.222 cv
cp
.8 .603922 .458824 rgb
f
808.506 734.321 mo
808.506 735.289 807.722 736.072 806.754 736.072 cv
784.664 736.072 li
783.697 736.072 782.913 735.289 782.913 734.321 cv
782.913 725.778 li
782.913 724.811 783.697 724.028 784.664 724.028 cv
784.664 724.028 787.801 725.455 795.39 725.455 cv
802.978 725.455 806.754 724.028 806.754 724.028 cv
807.722 724.028 808.506 724.811 808.506 725.778 cv
808.506 734.321 li
cp
.235294 .192157 .247059 rgb
f
795.463 739.615 mo
789.646 739.615 785.059 738.154 783.188 735.707 cv
782.965 735.415 783.02 734.999 783.313 734.775 cv
783.603 734.552 784.02 734.607 784.244 734.901 cv
785.841 736.988 790.139 738.287 795.463 738.287 cv
803.813 738.287 806.408 736.437 807.115 734.882 cv
807.268 734.548 807.66 734.403 807.995 734.554 cv
808.33 734.704 808.477 735.099 808.324 735.434 cv
807.043 738.247 802.836 739.615 795.463 739.615 cv
cp
0 0 0 rgb
f
764.016 682.149 mo
764.016 684.084 764.018 688.26 760.293 686.272 cv
757.988 685.034 756.338 683.584 756.338 680.469 cv
756.865 663.794 li
757.595 658.838 761.053 654.63 763.654 654.63 cv
763.479 656.049 762.605 657.575 763.121 658.931 cv
763.611 660.219 764.018 661.757 764.018 663.384 cv
764.018 664.188 764.016 678.996 764.016 682.149 cv
cp
.709804 .67451 .619608 rgb
f
827.479 682.149 mo
827.479 684.084 827.477 688.26 831.199 686.272 cv
833.502 685.039 835.156 683.584 835.156 680.469 cv
834.629 663.794 li
833.899 658.838 830.441 654.63 827.84 654.63 cv
828.016 656.049 828.889 657.575 828.372 658.931 cv
827.881 660.219 827.477 661.757 827.477 663.384 cv
827.477 664.188 827.479 678.996 827.479 682.149 cv
cp
f
795.709 754.249 mo
807.541 754.249 818.682 751.304 828.455 746.124 cv
825.678 740.877 820.883 738.168 809.073 734.321 cv
797.869 730.399 794.057 729.801 781.016 734.762 cv
770.088 738.335 765.627 741.076 762.98 746.133 cv
772.75 751.307 783.885 754.249 795.709 754.249 cv
cp
.235294 .192157 .247059 rgb
f
828.878 700.269 mo
828.795 700.181 828.66 700.123 828.541 700.123 cv
828.235 700.123 828.104 700.314 827.614 701.026 cv
826.229 703.044 822.008 709.184 813.877 709.184 cv
812.997 709.184 812.048 708.747 810.734 708.142 cv
807.988 706.875 803.838 704.964 795.709 704.964 cv
789.457 704.964 785.502 706.505 782.324 707.741 cv
780.256 708.547 778.623 709.184 776.93 709.184 cv
769.621 709.184 765.504 703.325 763.955 701.12 cv
763.382 700.306 763.229 700.087 762.906 700.087 cv
762.787 700.087 762.646 700.146 762.563 700.234 cv
762.422 700.383 762.412 700.573 762.42 700.722 cv
762.421 700.752 762.426 700.783 762.434 700.813 cv
768.387 723.08 783.349 725.936 795.717 725.936 cv
807.363 725.936 823.482 723.33 829.017 700.722 cv
829.021 700.642 829.031 700.428 828.878 700.269 cv
cp
.843137 .737255 .65098 rgb
f
795.947 714.552 mo
792.527 714.552 788.678 713.66 786.42 711.431 cv
785.904 710.921 785.899 710.089 786.409 709.573 cv
786.92 709.056 787.75 709.054 788.266 709.563 cv
790.152 711.425 794.347 712.352 798.247 711.761 cv
800.854 711.365 802.838 710.336 803.551 709.001 cv
803.895 708.362 804.689 708.121 805.329 708.463 cv
805.968 708.805 806.21 709.601 805.867 710.241 cv
804.732 712.362 802.165 713.824 798.64 714.357 cv
797.804 714.485 796.893 714.552 795.947 714.552 cv
cp
.6 .509804 .431373 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.0.0%%For: (Irie) ()%%Title: (avatars_mixed2.eps)%%CreationDate: 10/05/2015 15:54%%Canvassize: 16383%AI9_DataStream%Gb"-6Mdd@?of2l_!:QT[>?]GXZZDai,RkS]8PPj4\bt0Y<7irSaHA'q8a+WQF)J=r\lb[9=E;ouWI4F+>gIiDRD"(JhWT?3g`O8C%2u<>nkGD:[F42Mc$/0Kc2V5*=s)\4@hIID&g,%+]5h14HO#H%a4m0N'0BkW`.\GV25<:him1#sha.oEdA?nE<N5h(9Sc(M'@HVY)%AU`(pr*O@r)#_sp2s;<r^39JC,PV+EJ'`O%)P;2N*PYYVbWNpI^RjM1o'>ca^u>*adgS8'9rE8I\`&KprN"9527q$sr9"9-n3KP=%YZ'rB.R\(C&"Te"&Ki\qD*'\jqF">loD'cMFma[P<1&$M<%<.sYPS0hd!-er2gd/0A@)\If"jD_=2EXa#X8<<Q1:t,pk%\(f=CVW%_&$!u6.)("2"ul&0IZ,e?`m`B(A]`H"f"bA8H].qJKI0>S+$S]5p$\NTi+$lHj>C;P#fp7r2i,q@c.u>nggspDj9e8&!pXB%c>X;%;Xj/1M(+uT*!E?G?6jd5jJAlT%tee"0_Jsg?SF*.)!7O_jsXHKO;(C$d6ZW%NUt+`W:j]6ho7qm.HWRr.Z;K&#!.h!^^j02_,k"H%;p'$3H;$4s)C^Mm)!Vh)/Zrqs^:[:N]HDhcJZ#9"aRBWJ4i".)h1LYSan@Ib_@$jb0X.dTckL;_X&@16=Z.@AESjHD,[NCSbN_Tk%oh[r@oSUtukR(pplFef<;(/KB=c]+%kTnBe&ES\r\a<A2TbS/pR<qBm\lSJfi#;lE:)Eh%3Y&,\\>*Y8O'A_dMc2c%cQ*:V1mU#W%ZC:KmapVg1h[i#@f"QESWgZ"eo0-oXFMMJ1gC:5iO/Xg1Q)B\mK^sb%_-'aYG,i1u18+:%o>Va;`2!6\2cQ_;+b\X-]PD7W%2"p6%-nosm,8B*<F)$gs!@3\Xh+P2*JZ6tRF<e$rpeg"CE9=;3.``qN*[du.2fK[+jJahJ-/1!B[e4O2$rjaDooN\t*6b"_].?pUh#N<>%orL<`#]F6GFJ1:T'?V]#g7l.!R<m%lJWjQVjgBglY@ul@<=9@c`IYh()5FiPABCp)hWbn$Z;O[L!p[i76.H(c(!XS'#?4gT$:jWD%_(,k"+^VQfo:foV+O\_kr1Q'2C*P:3o(A(O[h_,@lW8&?/"CcG/E&c#4Cmb8L,Us;Peu7\HL@'(jd(_!IKd2ceP[Y./h5]!Q>9B-%W5#YiOZ1]>WRja9)dQ"J<anY-T$3r@Pr??MUR%I-j^67Uold">!<-YK7mamj$hE'VD%OF5U`Nq[?Is*L\OI_UQ[nqs%?!7IXUnRK%,2?%=cno'KAHu4809p?@+Nu/?C/e^^V-D2r8Q9%/F092(m:^WVo#u]cWR(\b(5.SJEhp_o\:L`Mr)+-ON#P>R2/n\;C(+Jl^b?3+%@:9\a2@WoFXb@sYPYd@%2'MPlh>e<dBTLh5"H(\o&\NWIr*j'q&uj2$M3LO;/#I29Jn]G9DbFIaRo7?I<EU!h*9a,5%B<sd,ZUOH%#Af+ZUN!B5B$)#NQ+m^:0<))NFV+s9m>?Q0]E-2C2G@6o/Zba9;JVFK);i?Y/Tfq:p4ZtD[<OVc2X,4sf!35,R@qK+X,<S^@(I*h%7[Lg=Z79[]Q?<7Vi,B'nX,C7lKGG?^VZlk7?6Ld#HPdVaj%"2_:uISg0d;i$4,hqtpb3`oX/X;-aK!m%+;K_Kd32Ak5.-c[mF\^]%`ILWIC(;i':udH8P8A#JR_7:f[8nSDmdFNU?M5bqEHg+Y%DRZgG9;*N&.a,#?%Q^]n93s4gf/aT\_fL5Se%^Z3Hf/=r,_^##9//5%#(R#oPf3X:X11gu$[?+BT:62e>GKICK&=.L3Yo>QqXcsnU$6hLaio>ts.e`5C:8To"po2:Zejs"TKDP7(Ts=TI$&9pRlWSQ?+U*T%mq%iS4EkB8?;c&QD`Vem7HBI#-G.qcMiaD<!&;h^[I`8PZ/>HCG3@2bmW!/=55O+*oW\@fm#3<eZdQp"&XCTf7A@h0SI^&,YD<'j%?;M*(6lYcCFPIhr"Xo?m*-BSJDbM8Q9aK(Vj-RID=1u^hE":WD]+Z]Do]>o562+)l>^,\uX>bMbq?D_$;h:C[nciVu-OU%6ab,fe%]]hIbUt!"M9gSsO]!NFI6<o#oIG&s&m_A*!Ds%l$h"9/rki),Qs1"(OA58'T0-!0U#l.hjs3WgtPc*!eOB4a4kPL;Z&WCJnnR:kZ%_=2]!F:-2Uaa`-i'L-t+c7A[QSsA4.,eneW7WZA[T78lDf_lu#H0n7P&t_B/SEED7O%8AGO+o$WCH(Z&O'_H>ht2r+UN,/5j3Ei)%5NG$mkhNtP9'=m;H^#JjIi"WgDZB'U$_,>')tuDc0Y`Hob5\Yo47h]MHs49[cj.H1H\9^KUY,_5%Z`^/G/n6rRsmE^%_La2_Fr&W%r?(WpDI0<Rm2EE&UR=m&o&ARXLbdGq"UL)XCNS's^?XJmoS1DMdPh'W*]Uu:[s*'"1cXpY)kTo4Fe4R^K@4T5;/)T;#R1.Nki4,+%0RPXO"e+n:&S?C4P%Wg$ak4d`a:C5?p&4;dd!n(DT"XD2/a?`[o?n:8HQ0hJF8B?&kYFrhH>5^:G/r)2d@b^YAhrbEY._B:#KQco%jHd%?KfFiPFf.a5%f.iuh/U2R+nreWSFhS>NHPfXqpSlb5bldaLp2(5?Zj\@30!1'LPU4X)Ka<3k\gh&Rl=D?I=-W^bB(1:j3-:T%AO7lYA6%f1rnhoa>s#f%>9Mh:aa\]#J,GBo5BUf*ETcfJ=.Nj:r9E"\&<d;_6?PUM.6D+o9f['AiKqZ0D!)pnPH>Tdb,Yc*><KDR%`'HPs#(Bo%GK0rdl%b**6Y+"YLEQe#ls"K\i!7o"hfYV_jn<LK8"onZb@NL$'Ytr^gY(Yg_$=gr*pGufrHUs4l:Ll(NnFT[A")XS%^b]76P<G;D[MJu1#%fqrft<5ar=O.K470@gTDc"I[[2N@NL:jZYO$Ddfe*Fje#.f220QFuA`2"XagJ=U,qt"eq_lnk7]IZBbR'B:%7B6mD\H.G/]r\JnE(dhDb`*SnDOY5YPMM/JlBtD:i(!#e,n+*d!,cniT^DHSs*/ueFme;Z9QoQ@ZX'$2Jr%J&*#mhe*4)R$(/2CG%[i,;!T^m/3%q.lX_3NL]k94fuMpYoW.QbgCa;:T'ee,DiR>Vq"($"T%.gB0Q)k\>%j#T]c!"8kC-4_o9+mi^'4^.spbj8?'15lKl%7ISu)L5q$.65C"5b\jSW^9"VtJMtlnd-ioiJLYC7k:(-OdrB"=8!W<c3E8O[9d37FHdk<P@oS#p5/5+Dp"DuMM1u1Lk\4/PLWTRn%#+u>0gEN")\I8mn!<OaX6<Y$VDlZaH_s?`-B:lXaH/)fk!=llC!TfK1d:QVbRUg\M0c8c#%*h[c+CpA3@Y]\L9lL4l5%pO>8T6Kp%SHe1#2j!`"6p_.LahjP!5\oZlLmpdtk@qK_?8Pg+b9CPmM?MLqTgd1Y!WgXV"MZi`#-&@Ke'NgV*CUW\?lENOZJ^J7X'mjecRWqF%B2"-#a;RG]\Uan(8d)5c1->V_9L'Pq!RMF(5GWj,<Iq$:AY%i+Z>*;@bj6ZA;cSs1E$eKH!1+231"Dg`fbuu3-_U1_.Zd5b?1=9]%BFSE6>)3;`VJkKPmB$KX)i9YUaP45N@a&H(,A'i.Gs;fcZSo(`L?Lk/)cIfQ1X*?]6/hkG.n*.#7:0U.'<'.p)*Bbf.hc$^bR$ED%Ntk=+go9hVb,WUqs7BLR$d1V@SX'F*nXH")cn0+K;RCWP`/-+BMI_M>*'CPc`2Su4g^ji(K:G58KFJSe9+XptBu/410T/4DCQIEm%m)l>mR+=QLb!(UAR"po`1'QWoC^paRcE+en/*\[QIGuj'`$("A(W+IL8-KTphFA>b=W%AIB"cO=af-i(6kjC2=@=)uEeG?=!@nNf%gZY2)"AJ_a#$+`mpGqclA.`V\LdI67fE]tH#o9LZ0q>>,3iTKO#-+VU=G_t!f)QTLO'cPeMH4aUX'7LQ3i96#=jF$gp[#$+B-YF!%<GY$i@QF$5ZBH(ki*Q_1mJO9`ZLMJSk2c]UPZdHs#+U0GB,[OK!9$ui(:VB)UeYmem:NtFJ=?ueUc`u)\Cp+ogX<&RFPZ5h"ufc<%=gWK2f4b?Bl?'1G0q1<DZnn72^oc1G:g"!?FunM=G7(XGc.Q^,%</Xri:g[o0*F3qSSq^n"a:G&C:hq5gh[u?OSMWji)ZasD2Wi1%M@JD*ZjCWX?8W/]L#>Fu$efLQkAMeB^)dcrVnM,NDoiT!hm\^n[dnFaFnl"-A5-+-jD-L:?j;qm58p%irU(jH^&,tZ'HDdWQ9jqo%HE:Ku&Cfhs&5ZG2H=W\k&g"DVCBeN,>ODu["U&&V6A0-\^!$q]Cc>b&"qDC2HJ\sRahV_M6F(*UZU8^^@-p(MV\g,M@Y!7/j9Ze)%`JZh0a8r[ioH#'5o7P1`lQM>==,Of@>9%\gC9%C:/)tRp!naIe\#a)*oD:Y1!+msF")LRIT$%50;9/%[0K:T'!_tpOG<pRng"8Ed%L#_9+$=G8.?@8C"iJBg1_D!r=Sk(d/ZBZk#!ZE&0Q)5-DOBnG*P/31@Qba^OGm6_=2Auj%)T^YamjlIh?tdoGWj:+jTGQP1%-jh"%)a<ASK-Pb0Q\j8!2;)BJE*R7Y&;142K]+*>H6)U#B`^A+AO!N>[DE0g-R@a-K[u!"+UO7"bsN_C<nU'tkM@t6n3W@&cA$;&-$/:&%0,iGk)6h;E3ce21AAI,33<lMuA\](%?C8nYH&:9FK8b<qDs(B;ol_Sl76$G5^;c$?Fc907h+69])Q%^kD4+fdbg?d1*EaQqL*JRK%b7Z8!UJ.Eod*0;j&Vne?'qHq'l78o(Z;j2h0PJG]R4'>6*'rV="ptgYMFV)@"u0s"`?^S?o::R[fIuec-"6AW:8,b$j?,>0pSu`)%'>[/SG-M6AVcd3"^uKrY&+(H@r3!B12]7?g0VjDEP>_[$-",nM/\qC.]ZO**!q_AlW`"^CIrM2'#hP;T\BHh%#s9%L9q^N=$jhKB%L#]0<4O]u4fL"jSD.sP"bfD64"t;@T8dj;[dECZL\BN(;=38!>6AYpVKH*l5H64W!dZl9.R5RIq"CM:n!^LFs$oZ]-8nUJUfg&e/%nY3U&C@FnAdX',lPMf)1*Pkk\F6b:p$691o9BugcA(i]b`b68ka?DNo=Kd>eA9Aa`P"@bC,]j#ucWuIu6l@We,TUG!dE2`Hnk'%]%(Z<LOA6Vsl!><X+K+/Y99Xc28.'uPSbj0T6ci@/2c@d=M=h+emArE[qE!6&L;_&T:^+uOL9s(K)1U8o()NeSpn[t)o,"[!pQXpDK%/4]lrr%?`ragHq3j/$%;.l#DMcGG._,L.l/Z+t0ML.aQaPmI)"pK;Aqo9@>cTTT9u!_kq@_$NS*8PiRdk!jJaF,eJ(Wtka\n6oj!%(Enm'0=-\ERT1[-,0kMV;@'Ge;'=,J<b2uJ#d'L,aNtpV<cH6U8j"j7du!cm2N#^U4D+bi;HblCh\')NHr5VNMibl??3aPNP8Lc2%kd+q&7qKr>WWWg;[g5_R,Kk7q.[!`/4(G<>/)df/@\MtD8F$+3"0HQP#L@O:;"%[JS[_%Z<#N^r5%E?cj7'9M#E'P#AR<GR=cT!0%Mp+g&e='+b">3Q=g$;&+T7B*?Tcc7`L2`U&];f=<0g]YpngC2dXXNbc4/$odNSqCbU(s7-//iu^U+$h/Fl&@.<Fn["[aM^K8t/rf%K,CDcR#:*>0j&-EKgb3\`p.:Z9kWDjG\BsjacSEB-V?`.E$ZKu,FNHff_#0!@K@<':BD9gr\X`&@g3f<[UDN(3[Lf@]KA!KRR"M!%6"RlCP(g87M.,]%fSk(h`Mc&h_n\#\UDlf[CDJW^]J"WuA9CVPk$fM@E*U8N7DTF%GhH&H1K16;@Oah\>$[j:;\`G6--^dq#>@7e%WabPBhD1RKi,0<s.7'J.lt[7O20m+))BJC&"5#9-SlLM%>e>$]@7Osq.#V-BJJJ8<lgP>T2@.[ZMl'I8WT!@g",e=o]^4b(#Z_F0%'mBWu=Z2gEE5EI6>tbf4AVo,sKqafp\OfKV!nMGsN/':'3*$m1L+Sp!KSVb\O97LO$>2hO1G'\g+OE1?>qI=6.gB$G$RTP0@P.p:%.E5qO4bD?(6l-#D<cE5E!`&Q:dGTYD#-nIYH;dhP1uR$J1rTi]'qKRnd&PNEEgDKGc+1CdD`pU);M]qj>i60V2cbH[NA1MT*pXC`%,7Q%6s%u/R(cuZYP+ILMk!EJJYng.lRrBM.i-B$jXWls1*=/%41:*CnQ!K/APE6'i'2BE][:6+d%f:fb-WbC')&BHm&;amH$Na!A%%tleHWSU=GF5Src5l`snA'2^kS/9[OBM_*mD@W^1M1[#4JoSb(2mqV:I1F7-H#IuH>)NtkXKGOH3C>^*a>dfW)d#ShAT0i,fq$=1%-k09Y/1*>OQ\hYM3i(J$d$5GX,mX\ebZ*`%@m,D\9&(_L6l!-5.2'R@=_sp:06VV<jgic<jFpMfWb#YR%(;$sQ9^s89bCE4QW,Y;%M1#H8Zs*bgRUB,qFVD`&W73#aXdf!p#f<m,hA,jVW_iC>'H8@_\q-Sq'h:ZbX/9eZF"JF.fN8o'Zrf\p_''_=fK=#NH<IO2,o^?0%<U6D6K1c""!AMTLHLQ&2YE7:t`N)k*lg2iI*LYg7j`3_TnXCdbTF)l9OK]NVCa5+\<e\f,NN4'#;<\W:%H8hQ*YD(m;h2di(.TKr%LLQ7*;&c*-'Z"T1oB'<XotUth,TL%Bg/Bc.?Q`au;%$`YF^(>4i7L'15jN2-:1?]>5WoK,!l*]"/tQ7C*7(A+SAV((mOPk([4&%/%#%'$C.FCKB)Qk,cXq7[F&`Xh5V7&s#]fHM"T`.L9okXuPq*L/dA80&01Q(Cd>M5kc-41b&AMM%Wj%:`+EdV=#()NT%Z1]g.'Gro^%kp530)*Y`r@jj%LMXO9m3/^8RE,hU3J<c>)JVK)X.!%k"GV,B2ZTM@F#ck=g]O%?%Ee4C$,GthKZH3RnCk/<PhqD%^B,\V;D1rk&%,etSeiR&l>YijS)?A]T`KJA+MEt#2aC`<EN6ibZ6^g:6pmQPjY8j#%oWI?=)N\G'HhaYp4\mdj6T,u:A)5q+cFPsU+?1+qKW*Y>M%n516Y6TM.Tg"GU$YkCmM"BlZ+9.1;XVY7P$W,*4!kBVogh4bLtn04Os`LR(ZBApXN`6,qk#V7h7e-V]RR,\U@iiN?*8`X<GWEt*@%%.d$K.tVdu!/sDuW0Y[daDq>VLHq&<+WK_OCsY9s#?8^FEqC9)XeaL8):VTKA'mt-7`Z&0_YA'q92$J%!sVhCSn-7,XNWXmMSaWS%iJZFO%LjZo$E[DoPsV_<0N]G"rID`(lN6diGo>g*lk`3J/o6l.6,G]0`#^>sNWd>\Ea2osZ7$@8oLi;mdM*ElE(!sVKIZL`TRg(d%A(Cd^C.(2&J=I]Ic$FDVUs!H^Z>/bh>;X_>-sj36**-K_<Q9qlfY4^s!is$Z&ceR:ZOSS170AW?;iR!\W[`o2LSr+6bsUeNcq#Rh%$Hb&!VlH+8idG@AK^j1FRSQp.2M!@P_GsBJ>Uml8j]:&B6m:PO$`Ce@mbg&LYp<;1Y'2@')iH*Ra@lRBQ"+3\"it:+`9lfROh`NK%!f%m(kQR;H^I9C*T`J4t$%iCK&HLh,+@j'FY5BH9.V^I^g<^80+CCIc&;o3)#--Z`OL%[kPfU2OK=+,mi-9?cg"e0)9_%p+<5psZ%7`'dM7V.B'&t+)lIpnP8?m0;c>Wr\=a/9"$kSsj93cb:/O?e0N#Rpc:FW3q0g6W#VjI?>_+\.ige106XY]'`X$4-e.Su"6Gn#:hi%1(CGf`F(8s=W^'gE*jM;V#bbo&=<SZY_8D`_1((1g6u*C`"?7lcc)%IKP=FsT*07@8H@]?E7lLB_HI[7UsN^nd-<N%]!'/N9"IQn%jR<EDGrHnh=X^2JJk,r_;mLlB@MiM":j+WtOW#rn"1DVV6pjHco-:2hk"9q.*f%nbCb:^,Ol\;`P!-*,Q7cK"".AY;l_64DlDQ6=%?C!?9.&bk@qmN<)A4\DKR[Lu(8J:@3WNi3AS2/`9.Ku@0P9^1%,,`NPHjQaH!%CbFTpDH.m#Ef^j(P$?F5[,;r6$,mX2o,+o$I_q%.jn^;B)lIOcTk][!P0Nc_"l9i1r'>Q!3WE]El+,t*,'nCNe`CKhc.AJ*Z&&A:dDfN^23@p`!/!XOL(]6V&.d?pl&U6]6&%J.2&aD%a@T9GYKh7qj7qXp.e]*DW@6I'CqEUMMuOYMJhh/C-^ZZtK[Fcp"!F24=A)KsT%[cQ&on`](\\*K!#7/W&8?MlJ5m0*=W*f<#(*e_%!_(TL(`Y#&IQA%J!)RIN2,9UZjF;baMRt$6F2f7@EKSc\\\ig-kNd-`&d\UuM:;NP6I*bD7kq1m0ECb\c7SXUfP2o.mUHuhCK(rt%*oeCPX"e9DRGZqN?O;g]T)9o.nF?jbL;UF;&$'e'eF$/.CKlr>o.!_P[$ENc.=>K=6sIM6N>8d=gJhl0$.)2YZm!!.J2htK]VP]7%A$HejJCYb*9XY0@Z?56=?)[WOm2A/kNg,4A5gF69Pbnc&D"?><8Jt<:Vu_^J#i4IU_?#;N#U#;h6U:$laH;8Z#R,(6\\Z3,"4Pr?%+_*Sm@)t.Q@!.8YU-d5'<@(j`U+HIG8h2%hA[sVHIKY<H%07c.b10fR!]cVXON$,p2p;.F-7[e2MEj1GJe3I3Vgtq1/Y3V-NG;/(%6*^auGngC7is=k]j3bk5$E@V>6;W3FFBotX6!ak3'q0P_m%E!Hf2]rQb<#\Ed^th:6N^lS&eJu_ZI4YhV#cFK5dE39SP#<('GGLr%iLGJ!(=#\-=iK_u.-@b8/Ni'&VBPCC412%)&cp.^ChY$1,#I3,`rc?`I,5ME16@^)4<&SL[,OBpR1k0h&7!No"`Ul2#+]HP:mA)[%K3;n2PGD[tj+oN+0SM&;AU\2umPbK*l<"tGA)p(chFGSM9Ni8I&Ng%D!@C!Q6a-nA]9#PiW.V$e#B?H,(g-:_5?'"V=b3DX#fjJY%W8B0c+ZWN)KSgPa4U<$b(%+%."<i[K7slLD+h5@#$08Q&`BunFkmR(-4bkP\OGf/;+O[57'U"GD3G(t8MMR:$V[d`qSIA1I\Eoe9%0KGZ0<-]k[=%5q<SQ1Uu5+8<8=`0ED%L4kN^:\C-.Aa%s8!]3^_*7TKJAiZ`;'=5eEb/Z:mu1%Qg&\EKF>Oo4JZ+HWR^=VH0GV'c%FHU5.m+>j3iB2>dF0HN#OM4%-W[dI\+cTUiYCL2A"SU[YJ!H[sA%;o>H?nCg'YmQl?.hM%o9nnPAL+N50nGk1VI;N@KR#3Nf&[T-%pP0o<"D[Xt**#Q4:_a-<0uUk*'e4Gg6jEW0@i?XTmT<6b:lBaR_R$o#Vp(1m^9R]!pkO"m!Bl?/R$X.>eE-0'1OU-@'U>Qr3<?7K%Fhn^U1&riLio0*PJ:g6)K/R9N:<#^+Ym=<$J?^Tb"^rjJ(g:MOKHmhAMh!]&!@q5*N>;T!b1XML,<pc/X[Ss5Sh6Ig8!_WTPa/@C%:`s^0/JtW:_3VcO!_T>^X&X#%)PSlbZiXA00#6\,CB8*[<g^*<%2^_1EFfHM1=cbeP>6^EmE-7X]uHAi1G+O]nJ*!E:dl>AQ8@``%UF.904AR_eJ<CA,h*s,J!GXd$JC>cjiI*(+Tk38png1gQS1.ZhIl;P."$)[f)<sg\9NL/(h(`K[_:#mpQT16C8b*iV6D3jDBT#UJ%b*F;8O(Bs7ISGPTM*%Yo30gF*+DTRFd@Z]#\/^JbOfGKJ6McFH:,'qQ$?Rm)B4X_:BPfU/Xt=N=X19^\.jr38p9cA0,SaR^Cr%u<%m9'ij&Z,k@R'8DTW"ao^jeInF7.<?`-^G5"qB@`&P0Tl'KJu0MeJrGs'$Q)7"]>pBSj?b'n@I6pT!p=B6CnU53@Vi"/(d$:LI+Rh%7ZOcZ+C1-1]pMG-AAUE/F:ppC5Wfd%9-eO-\klG'K/dFB<O*#Q:mPZtALuRSSs)Y&`W2%])^8aK,Gq2I$q3hZZn]N_8X)OLpjdAM%"8.N\Z)T8XKVN?$!nPfP"gQ?.=;UtToK`O^033#^Ud(PQ,uQplUuR\3oc?26ghQBJX[osZ%X89cZlokqV\gtN2h=n@)=P'>Nb+`Y%Z5*YM;[AWGF_OoLq?#r/Bf=_X>*KrE6=CU]W)ZDFaNYWu`O\[)rg:Kp'p7o4DOP#p_ZL3Ba]PYYb<)YCp]3+9&ork/E0fEk"tqki%T/br_Lf(Y'$fA,ph2A[lfYTUe;B%bX+f@AoBR!jTmVj:8.%(^iQaAtJ,N.dn0;6WeY>uZU$)C+f!>e/&9/\$%W[1ml"/U5g?_X3]%mRpS"F;?0@;!RY8.lh()_Wq?KdTog=ah(-)1964R;26AM"Q<u#>>VA3%?,3^i3YIp8e/*KOB\uLRTq-JQs*^L:cG&S(nR!ASXCTY%P80eq<?lmX2ck1S6<-$Ma`9S.^u^BHJ2H@n-'i(P"2pj)"1C%:HBWn[Z)<;i5[DmJM<%&P>J^bCEe+kG+a.rQnNPL2GEtiMj:k"I%HkWLA!FR3+*7p6(3WoI;jE<P45G5iDkCA[(HJ%7#B9oPW%oni/<"30bQ;Yc]+Hd0Ia\PNJ%=5:QXIMi>OeioN.#n!mfgeoK>j;Z/%a%XIV_5=jueH)feFhrVVB;:"^[A?_H@LFEmdX^A2(rqaIC6^AO=))tiSPn[m?DE..<'haoU?OdBY'h%WNoh7u)8VD3=b:%+\%.k<%Nk\RKbp'E$9U)5H%%AO:0#h_B8sQj7'kLW!/d0Y@9*81bYbXZ$71<o=Y30:5a<%?,Vp/,6>7;erUmoCsi%C7GnApB<U#A>%l\.SQ%"pZ33m)9ga.3i@1Qd2<;WDdf1)[smp;8?%Dg0uY\/KMhPaNW9o\!2M<9o(N:3L5XiM7-Rp_91K39"L4<f8-t(gji$m:8R%0^d7L%%3L-mVdT+BTV%^)5Oo_eK``"Ht=UAtBZ]u@Ic:C63FN"Req2qK/WZ9tUcJZVe16g3>m8f`&@S44?[&$)%P)4ekjidoZgP'<K;[o?M%a3&BK)Lsiqhpe0+Mt(`DfI)sU@N>T8@L3=k8K':CC'^R`k8u!Y1.(P(,po4iZ=!m\.PF7tid<f&p/8Mc1c'u^H[@;TCQk9I\t%`0%T.P(AKCRY#Ml3A2Mfj,O_/OT(QrjI]r=RJ.`(kD7mtSe5W>QkBoYoKUR7o%%oWY]':.SkmdQjQ1SZ=99/]A*BY<a]K"=7XQd?hPG%Zd:3m)4)-Z+30N[VCE`o+Tu)N@KC/=*">R2CT:<rOfSrP=2%XnlG=ce8)o1O.Ci!8D-GL)@V0"R=p!saV1DGmUO=\AQ%F?@7r\`>%hRC5("JmdYdlRjQKB*CWX-<Udj;D*%G0r0>ZV+:ek&N,?G1is]&]D9-g6O&SPiI^1W?$l!kR_F8U`@;u20kS`/.G//]:m%7JUjjJ%&)e6</D7F1n4CJ\@$ZtB3qkT0EqfZl@,;Y:/7n"%b#8RZlUs-("GT8;5bDM\JIjc'71c8B,>tK@dlm.[-F];J78^:f+GIaV\P<=D%?F%:bgCIDYqkEkMA4ooKk#h*+npE#jWh?b#Jf?4K#ieGYK'd,Afr^Cj,Ij\<8"dqV5%(V5jV8eVP>u6F\V3<6pQ?ssR38P.D(8/p%F%$]$Rq0I(_Ja@Wf\g3h.5IU9gr;#YMZk?.,M:jq>"Wd],V"g]kS*tC<DI^(b"BH:$<#`?,mWF=8ZbuDrfna`@?;\<h^;R@R]K6R%gVcb8Ht5u9@bF5GQ2%\_&ot.uT+W,K8O?"dF-S;mb`c@iq]8@8Ut%ro3)sIoP*K4MZJ:ns%QH:CP`o+P%ZMkeM169d2Zo&8Yb;6N%NictdVIrjWs!9Iiq\#0*@['`h;HJF:,rQG%;H@XH@PbS*"YN=JAmA]COsN"3hQ1=mPCTP&T2_APCeC*@`60"L'dgD[9aqEPFh+'(%FoP+_Rq!(oOgC%I/iM1#$Hp5JnVU<l&e'un&l:\\=`krtcu9bA`Ap[EK-d=Q\>9m%nEY43+l/?45jbBP-UhUilW-YE3gJ5?:cq]U%7ts_-A997(6a-o\fLdTd'TXe[N!ePVW(MI>Ibm_lSFp_LeeMFqWXIo6%PZR*1??YO""$PbK;k*nqC7fs!j"eH-$Tf<X[KAO?qptF%%iZdAD2YrnNQrF^ZqNhW9!No9/tJ>%YIp'tZ?)b5?'5V`aqmFgE3V=_1R6De')D,FJ'*u`FU2f3ERU'R:jk>TD+lsS6o$IM3JJN2%#n*da.2GpS?DM;PHof.B#cha`\Q?mbp>mR6.b?d"-:OcRoi"a78&2u7P.-3SM1PiWnG*cqHI*!k`k*_`24Eg]p\E0/gi'oTLk)e=%MP<6mn^t%jUIL*T0;jB0/kY<3)QI7^=D7n3dM3[OdXWciRc5;H\0eWsA'"/MT.-\IC_7`YqnCRa,c3+0<KN\VpqT2G[kE<>C*#TD%WN_4[Q1O1%\aJeTDt0b8h-)$40_q[DT\B8W6q`prVt*ITYg/SSFF1EtrBLL#,M+FpB4OPRap_llnoY%8pnF:_@RRMt8XG)8aiHC%%6>-K@CLs`1;SX"eLm5M:]Hfe!O_bs!/U4b:<+R"/Sd\&](_2QM:sR&\Z^fnX-t(tQTqXbZE#mPm>TOW<q?Gfb%'r_*nj*nL<.1q\%A5NNUohqbd_,\T3Dl!4a>@5L-QuuOiHF!G'5U`]SW`5G+e6P^=)jOt6\5FPA23=&I<6E(f-BN18di#YkY[fac_A\11#T/H;TmIn1%9r`GXg;ou!#+cGoVV4d]+I-\CdD&j^L6F4WK/DLh7Otd(\:LBg7-;;jTUdcbXG">C022#<oia,lX=?nZ8lh>7(SRY#&2VZY_Plb:%&CW$/U%/T6fW/ricuS3BD95K&<%pkY\p>>p'FF!5C)Ud'ed\EYF-nAP@[M+-bJa^)g,HBeN+/r'hscP5eYn*4+9l?[\=bh$2scOF%7\b\P<s^fc3[k9%Ec",!DAb_gk7XfI)`fjZ%FA@n#/G9P;CH2AVJ=%0U63?.!10-24SKS0N+-ulc35r&+]FRN-8V[_oU%cdL8Rn.%PAs=@"IR.Kk;,h_\P`t\XUJ5hlt.[e0cIgJfj8T,)YL*CG!rQ8&s:0"+fXgkCSa]b(,`O*'VS0?)gi3mW;9Ua*Is'G&tCG]`D7(X%16?d"RsLJ@W(UD)Q'>nuhK$nXUH(i``00"dW2,d:LU9:n(7#V[EW\nV9bj8=P_#=m-1WP:XGM$B^SOm]aa=+o%Z*FRP8kSFVnHR0%EDf_iaZZ;ODODpA4&I/GS&tba@o[;,:>CVc9Zde-c;4RC,*V?*&Z\O+]3ud@"&6[__JAfEBT'P.p\Y9I+kAPh>*Ukt<q1a7X1\XP%IHaLnRK?Q.5N6L.lUn9>n+aURX+`ktlOXH%>sa?NC)>elAg%4q8us[kY-e?6A#eRQ<KoNN3@]bFN`::2/.&u%h3D->;!RG,@M[;B%ofY/5C"E.?//a=<&MP&1j_X:h9XUSQLPs0[OIn&[*o2oGQpi-ka'K[_,SDPo>o(b<b6:C20i6E&WiBqZQ7Hf+DK3I"8IdOU:+>+s%;K8%JBG!E\0&e7DmSZ(47:ne@2<.jd_#u1pEHRFriN"mK(i<8pS!5803Z)8u=C\qR:=rB@#QQlN7DP(QlHk(tpVd;*XgHlhK,*2F%`(srH3]Ia>_!.#?VpTqsQmipV6XGY$ph_3Yf]"\K4AI:@lL4l-VL-U&C`-p04[3srO5R+<V))/iJ=ER5ZH7T9Q?`Z`P?rDY])XK'%5W$PoQ>!d"'H_=gU]kPFhN?Y")(EDE^u@$M6a:[rK/SB#j8_URd7LKd(Rl$*e(+#Vf8>-u:q,di\4$'Oci?sQ#mK6"H'4]d%'6!,%`MlI[=Y?/j-0l0s1G3liG`pNd8;faqjAjF'.$of?M=J@fD,gkr(#2oY<m%!3P!Vsr0G`j\L2a8>`JW=PJ?#h=&0HcBB$*PoP'Dh+%WoCp`5W4Z;&.pNBqtet7U%hLi_@978aE3ZZ5qMQq:&Z8??-X_7TEQGckg_*eQEj!'5sF%pR,oi0%cW5j8\67TPe\K5Be.;;;hbo?%nOu#9'!RAD5[?*S6`')Q8u4elJejP@A@-Hj&1M^]#^NuuLDmCm\#;+6f473N_.?4m78A3@k1A$m'9YQoNPm$V1hEE?/<p;A4&]$,%20mYq9<-JZ?s%qnfp:-u''t8*@^Va'9=Y8:6X$c@krUaZJs$4iLQ'Z3'N`.s%!C]1,G?:cJ]ZT!Vn:LfP9q0KXK8K$85EhD!KE8,%6js;k"1lu3"Gljp0Xs_$XiF$GLP+Rta\8uT/Q`5R;XZrm5Qp/)"]BLfX5s0kl?fJ:%9dm@TQnBDc,E]A,4$;%0ssb%X/n;;o>i+4%P_qX!:73p]e[h=TciHdJd8tJ,V/tbtWIQArU-d#^)Bi<t95G1Mi@InEC95>V&ig`m+;.LK4$@B!`7K$T\J0sp<iVjPQ9_CtNU0nB%&O9`p7%-O&lOp>iUdh.c\Rj<T,%6J'9$SoAHU+th.637E6oe7(L?EJq+jcRlMDss&WT85E#"8u#`Bs-+HlauoZ[DhoVL`S"M%)Jj%#Xk>COs44j<A8`NUhe,t!#@a9-Q,^:C/>pui`pX,;p*1#9-lP:8o70YYN3'WdhEC+P#N"t.iJp,1a@:`J\B7^BO1Ta2/tO?dj>or%aD\k*70lI48o-e%I7G(inH`6keN&mOJgB#@oXQg^9)>Gu9+8Pb?1KQ:"KRp(:3&B9LPHHiKHY(I9OB#%+:Uhn/,Y48<8bJqBb\<A%7R0sE&?cET7jZ-[=HsPt-7AnPB!nes;ZrgroT/\,Sg$r2cJiS`=Y<<j,mPpB_Xb!!EDB)Eo+Hob-dG<GU=W9?-WP3]ERm&b(O?b)%.[d\h7)5p*Opi_T!?B"?Q-.cLln40!V+Q1TInB1UC0S=p8^m3OdCfr2C.U$Y/Djh>WCS$f4ftIm8\tVnql%`3'`BGWD60V"P[uHQ%YdTcWHMX"c9L5D:Sg%8A%*kGhZS^bjHIB(J'GNSbj`5(m352YpER>'CU`D/A3RM6+91u?8?\Jf5>f(,r;+[HdBS`TrSclXgQ>kra%K>\oVl6Odp;\J>C^;c6m=0l,/.?'4F;Pk#F'(TfHZp@['Kb&RP!$(kX<gO1M!oK?)R+_Bi2=_A^Zh5oBJT%8KTL@N9hp[3C3K=T/%=I$!\8150h%h7$4^i0lR`iR@,K,-V6_.(TARe&')&rDhSZ(eO(E?RS:1e+-1_JclhffCij9R<\bQ$^5#YT\Ar"YEFu=4XZ:f]NHT%W=XnTYsK#DLnsV>NEL!af8EsQA#aH&LAZ&V01,N5kfY7A0)68WTO/>#;GJ'$$G[cl<g&k"@0qL*P30s,O9db`W3n2*+Clj22]Re$%+B:4]Q(X'Bjj4ENr/$dMI.^#_kg@hQ>Y>BM:u[2&@;/@d^BqkCX=jh\+PY2d_K;.[B-d`X+9V_G6F1\JCHu49!YiX5^)W3n2[?-7%a[li0pdZj-b2!GjW^E@='T:#QGH-TT?5T"J0Q(1PiAg&bl2-,jh)`RAWKrO0`pq@NP2?Hp&g\;4McF+ZmJn0%]V?+^K"Onl#BU>!%NCqgNXH!F1-X18;LgA-4W0u>gNZ!;;__P$i]WcH`AnB/.ZE[B&S,.rI/tY$=!+pL+)(,D8p,mb#LG(KJ8P*/"6KIec!`@+T$td)-%jPiKV;h$DHd&i-`0m<"F(GV!_QI*ArM?6FMj[;BeF9nOMjm^'PHU4V.JBf4;P_TGtdc$jnPcIH"-o>*qL>eM##22CucI_5$W`5X,%3bh6G3ZJR6&l98gdPr>`^t41]@^/7MP857_,m[(m1H1]:'f>^EB=akS9?B;2X&B4lRZ^CUBYnQ4(1K/:bn!G3DN^2V:[gtNEL*VF%bCm"d[ZRUVjour0nsPYmjcIPZ)&g&K&6O`]Jt$m"_+Lu=XKJ>!1*ne#Z*RA1=@/ds=SbqY457O*Q@rjL1Onu&J0gRppcCj&KR(:B%SUi(EbVW3AXXTUk>"PhT7Nuhmg[9Ihqsr9@b%$KQfE]FQWBa,ILZSEq&L`E.L-K;Q5Zb8:<2fCR?'7Q0.i2*730V[K852YI79\rq%4k5pA.UWJn4)U^]\B6CSF#.J@Wst%^?iEY(\MRVjR-Sf]Mael9:Eh(J]uYrL)=:\8qt)>hML*6;$+o2U7piF4PaK%co+:sN-%]5n%J+KBQIn;!ZjW#:lV=*3+WtT)7d'uNM>lA-m8g]4K0#uI'#!0:f6mC)Q"a2WmjETP2fe9&SDRnu:a[Mua$gjUE98S/V$g/e^>@LeE%D#c8TH9`h1$Ymt'.7iN8nY(L^YtMXaGCB\3e6qplp[3G)1f#rfUj:2]QcaplbL(OQ$2,JpJn3;1>^eDk8L/ulE/Z$6EJjZ7^1\FW%P2br&b`Ag=/mj3qQFr`.?+uK_%f4g4!_oXFnKH&!#>?FDJ\HNG%_u8.@kkbs0"/6_>faajbZ3c)>$L84k6G$@YqFq@6q^mQ=Q7?e%k&D,kOol4r=)e?r-W?2i6K"#rBDK.W!%d<$NZiNpAc$<h?Vllr4tIm,a\p7fE+]#'0jShT%3;t"7EA@iA2l,0Ppi.nDJDbE919FH%<%6)=<*3YrjA0O+b5o&:47VH&:uCUU9=CsGj^(0^jZrG)[000d]cZNTq;fC)[9"/V\T/(6U)4f,mIGB"-`(6-h:Il6(V<j[&"s-f%j:6:UM%O@#mj`PCZZ>Ys*7Pci(2DGe5.(WL:op;"i)PZ(jGGBZKt7[lV(Rr>#k<XC@2R68pf)fCL.Af'49d6`;nB,gBoQoC^?;iY%YRK/63A\Y774J`r[HcI6WTMY%pH+nK#:9I#bB`L)W"kUu+po+0X@U<NJNZUffdJk1#8WXFfs,ou:4@We\DV`ZZ;IT+<l[/JT1\XM%Q-9d2"Jpi?U:I]HLdV,Q.=a!]HZ0FMgihXuWF\Z_c:/@R6#]OI8AsPKK`dP3LrGY>.k=AkU9ImR,@B^<+FgK.d8q'm`.aC>>e,NJ%^ifF`=j8_N?+k8V]ZiAAai^"a_j%>)a84gc*-pW`)N"Kfkoi]!?]$$d&BFW6?ru533]DZhU>o18b#d)EU>oaJ9o\7MWsR*+=WGGC%;?>*#,'QjM3is+FA%nnsR;TCMWu>OeoaP?hbsPK_X+OMp&Vb$g..QY[JDSA$'nHGo:oU,+KlLG%_guglEZ^f$[q"?OA]WL0V,h&;%#5*-.1G-f"CcRs3;Air%M-)AOiU?:LYg+Lq`>%p>=r:?oicKM"]MA7;\um?t;UJDI-RE-M8bM=mr@*g(e7u](hG#*6WNdbsi)IMR%PAU(fcH&YeU0KP;S"D@W2E%,9!]QB,+HEVNpEc/elZ0fD>\=o7hLAggYQ@g=*!j'E=@Op8dCQi*Jat2pkkLr%d&k:aMn?#SGS$VQ%K0?ha"Km+Y>eBR?"1^?:d)B)lMqd109i\=rNDt%Ab$[6AN)V,m5`$ZBFaAmq&oNPc7#bae86Ked[Ef@kJ*'Dus5Q',&_b@bNqr`>%GRkn&rs?Fs^Z;`qWg`bOI7UeuC]<6!cHON?))+JVg2(SW&)(F$FHEVf\qu-V\q+;Xo;cX<s05_^_"[8>Jj:a6D.I[id/#Whg&#Fl%Uo2#A0A3:U+'H1.XJ`eES%[f7nl1)%_#6'77^hn*7L#K\1`H4C[.$UnkKSKA-+RlE&$?r8"j0Jk,d!b!(GX)87\C4Ii<(%#'9:0;%%k^*Nd>9=dGof8#gA-Sl""Qr`lOY>!Q9)EuNK.q-#M<b@H1Kj:gR[(h*W_#hE``1<HJ(Kp!NlX92@lNXG^_OQ`3CAk2d3A+D79io%5Hgj`)$'i=!W;qYS\`kK@CgW_26\ri-Ff#CDRD@*R5Hs=ES3A=#oo9WRS[Lf@&pBO<b/PQ6Fh6Z9i)^:%4m]W[TB?^m(9Mj!-Zc"%3F$F7C:Dms2Z%EDAYb;dlP[snrb/8R6E+sPc'QsBs$bQUR7=^:-SeuuGTbs)6mc.5r00,C[d^ht!V82Ra"fV>QCjLLc_<<"+]0Qc%mH@0(4BY#n2't)1,Z97/"#_5h(gFiYDHP+-rP'4Y_-dsf#&a%>^=>V,*4Du]qb^H;&n?2dd%l5^R[Z[jmKn;%ZC^4X2$0Q@X;@]^%2ZB&nmp9eOMu],:TcpURnKXU8,<3I>*39iBqao_`QGM`P_,;XV!J/qpQ_fGk#qJO+7lP;#m<Zhp7,"\X!FdY_ih?`Q5[7X\bXDTY%NHPnXUB`_>-/9F%gJ^^`f&;g09dtWcLF^*n;h?U;Ru#csJp,O.UFAL1>/9ptn`HVI(a/LI3N32B?(2q&>7(jjcbCG/T8rfdBn,pK%k"PoP!RZ:6mE7;1U+1J2ps%t4qh*\J[9Ma*kOu;fh`X0uEcg)hTD/4Qe,F%5*P]/K_4Al2T2,^0r9.`6f!tb>I+k';d.unZXh3V5%G6[*k<I\sMmLA-cmbE+FSCZ$E?dgrH4a;-;<RpaQ3k#T?K>X$mS0,@qF$b3'lb@g)?%N:#&n'hX"n/4GSAe;&j6<VpP@1cl5)2"-%nFPqms1FaEJ$XI^D_>JZG98u_4#hT;IBHVrTRXV#$@qa)k:h5P6gn]7Dfe0*c==IF>"0e1<)-6qI6Hpm-`cF[6N1YX3GaR`S">[J%S.Bq`UYa,sTm'P>KXCZKkFkreIs?G=jCm9GZ+%_r2K@WhT\-=#b1XGk:3mGk]ml[;X]n//bb2`F3=SK6e,JuQR:</Y2*nT^rP:PL%e3\WQErsoq3M1;0E^!UC-kO%6AB0kLWXB$C;V:Z6XV(d0?nYXHpUg\.iQ;THSb:"Yl"I_U$Ymo[:.g;:oC5]Ho5XNk<W?a?P$L!3%VNMs;.S',db@Ga2q"bVK@=NBF2Oa99l`e7<(]YHf/,R&'^N\,:ZZDLW%b&^3g/*RHmMr+)jtN?b]@etWHo^If[bPFt9q5GK19D$\%lo_/9a0bH*Fro,XA(l3%S*2T[/)`4b1Q)_:Qu;3VopOALqrW3!pNf't#)BCna.o8UdDMjKEA'kdU%c(1>4';eI$l\f?gPFbo8b6I%j86M3qct&\3js5GqpJI:kM>aOUu*3L>J<[uBXk36;]EmlX(ggC%?5CU)(K3>E\clR0;+U]`R;eB.*(@,QcQm:E'(LaE<fm/67UX8%BJ:@^roqsR0;0gth[J(lS2&_D*"8p?_--6jI*`luq"\__lj_S)MYT3fs1HpSf)B>BR<IJ">4ii(Bod)3mT?"g1-$GKFH:a'8):S?%VM5!*VZZS\jEqj(]\>F(VT?]FY,YN\OA5C&<OL-92q6$p*qD@es3KuXs5t#sJ>]1AE-e`h0^.<qgj4`,edklrDimJ/<FXnP9%&^L%D!t+6Cin1h8k&>1KrM]Erq+`TDn<r&crMjp'fk2Um8:N&K,n:a9,RMu5CM8Q06M9C83F#X.+T2/Rn#t\%6?820_Eo8k3HSuWTMRp%Ae'7B`\`IR[U#5:O(\8(dG"89`[,KXj50QB&(YWVb`K5t`g'a+G;k%X508;T0X!r0M7Nca,]<8h2Ds!n%M<PkT^V<DkPM%%i81uq%qp4O0Vd1ACQK@'IpBTM3%MH7lfAH.pT/DA;WB@V8kSs!MX1d$unDiqVs*P9D+F'5cHB-!XY==/lbLNV(F"I?l,`oH:%'>Xe^St]+%?.?m\`6b\]%'<H'ZDjq;`V0bB1%pT>hOD.LaS4#a=/VX7Fe7=<e.]#1M)J@k<bnYl>qP]>bH?PJZ$M`p=4s]ajR&tWhr+ce[5stn%s/J.#p'-;c618J=GB<bCpE-\H*G^,iC!FDtdjAuhp17AAgE<@oO+$&*no`I#k%="^hLN_:2%*<`E(O6mIXcArkT9ClHc,+.mb&AT%MUQH\CA":J7XGp:#bd4mTNcdKfG\8WGQCujjIa`Q:Y#<PEj#1Q%ECg)/huO+0H*0iM"*E$;Q[hc)p@?DK--T+jf?G9nQ`dtiT`M=%X'nr:k[_ASQ]qDVYZ>qgi"C3S2*ju-CD\Rsb>:.@oKsku"s5s1,NqU1n%Vt425AZB.K+^P"(*p`)>$Q-,S!n^7ec-1r:Ko=_u/YM%)S#6a2WGkT,c`;7I,(@fIp?VI"nNA,D2,allD4+>#9H#LXc\k'^t_1lF>=o.Xs&6+lhtIG%"@KU=Y7\"ZCc<\lWFCEq#2#Ml<,+1%E=3C&?'75**VN:\O[\^e$\)BaMqVKEib48!+P%D,`qpB-j":dMQNlt4mtTPb4G\,JdADfKh.O+',8&pKM\@8b)#Got@[@Ajf$h4)%M%JFC:6)bB&Rpa)DnK)aNgeVU7#9AG`@_a3QO*,>#bd4mTNdolZ,YET?@]3"Ib5r5ClG/nLJp*sbI9GC@Z@X24I9E(,/csC6>TF=%a#]0d[LfsE?/*@,][k3cg9(6*^[AktPlk6pm-eflQdkj)hjAT]dI[6[LWB!n1=WWn)WrSU?ue\R:L58`G9nokfEnL7"dImNW1AIm%"9Gp!&9e3@=!aL\N&0BnC-_H"mQ9sG6/lTk5OHD<!qGpK1nSsNC"(#Lc?e3$Vj;RB*cjID--scD7nW0_]"[3dFZC`F.QM&4XEPZT%/*;qkrL\FhVh=E,k?D1]p3sc&n\2&%X,^DTA4:#+C7RJf#3n)QZ>o>T['V<29<P;Irqda;dFmrnLGGRH]^2=V4RSd4LW_nmfM#1)%lZK-"f-tNSTYC.<?)d-?->.:K`QG`-`UssIkPb_:;0R-4;(hm\lK&!$ahRHIhoQBimi]mN]pBZ;Wp[@K'YEI!I'2eS>+^W,<<$@.%d;OE<p<JlZ,dq%%W`sX+Z6!XsWa%TJmrbi*_>9/Sn@(QZ>/,U\P'Hj?q4.<Y[V*YZl)W:iFH%<n$3ku1(>2eZ?QG\b]`pF.^5Qgp%jp#(A$a8F4T&&$;q_\Xo=[#ZGTZe\jI<@CAos/Ydk0WL-%Xm$M1l&6B?)MO8f_t35f<4CRXT@c`/:WKib:UF8Cj0@!40dS3=RJp8%G:/]g'?dL;Z+N[FmU)Lu9@U=fAuVgmlY522.HTu^npc_cChSoLG=m/ViPF>!jX.8*G+\1CpJ4Q0f=9dh@p+-Nm80#<nOYVO&(eJ?%[=u<!qm#ZXC3:Y_Vn,)2B%q45`a%Y4GjgiBdi/]b5HUI/T`=T51dAa#"P6q^T%GUn#&Y4(d@*2I6JdE[G2]7+S&&:pZ\p:"@S48"%dV;h:`KW86VF5%7SX8ACDg3Z,&%t&mNVY:uGCJn>#/08lEUW\JB\XU\4iQ3R@+2=FPE22Baf)^1:tbeCs7C]Mm+YN7!@EWkSU15!%=nDpoO7`Pp%Fe%/Enp,Yo5Xghc=J:mga>VWJF0FT,3q,ArNk?X[YDd4IQkr@eiJ9Ar#:t6P$`QBlhelsDes%$F^p&6lVQ=o"dalb%Y!aUd2Nloa+D)G%fYoIdZ&;oS@McZ/`@c>=$Xt$1<)Dq5!uVrmfYoIdZ&;scLMlR;oIfdA?llr,$]X,,?*Go>]j-hCr3u3J2`<L4%V-Nh?<UY6*Eb8C9J,)ce74oimUR67(C[q`/l-jO"Bq0L-`7*F#P+,[5^BP_G9(@CV:LNkBIhegT4'hQ/,jE=KYq<[n7Mc"2>V#Dh%NmG`1ZJDoD]5(t1:R>qEJaiN!CNlW!=p):1cEG0O15E'Ea.o8M?bfc)Vj[Em[R\R>HHM[8hS<?D>LT`/Gf+30@l\#kBA\`98\jK)%pWo0LWD?89]dZe$\9GTW@+okV?=Q&tJ*7Ja/rbj_i3rPED"%CU"L"%%^+&sKY)\(A?jh.,d)PlIb#Hto'&fnJ>59TNn,:;all*5*%WIMQUH5!'epGq#.DY5"#Y\u/3]NK%:CD[.l/n+*h,[bi&ln/pTM13e$L]jgYOSpdEY[KArYoF@"Oap/8m5;=^(CA_6V7;EdCrS[*%+p%.?!4te;s54,V]Ba"+mC])Do7B`Wh4n\.nE$U`7`mEu[;%:hmEN8-A9`S",gZ2)Fil\5\F4hu8&&RMbkk/Kg08t9ac#S_pMepb%pN^\%["eB8KDs`*1`RN2qpV<O&]1E7$>@c^K68TDL&CpACl:YaCQ/5Z*M`"afiR2$PeGWA_G<[;.%AU1%"95e[C\;m9PAWcb3miF%-'Pl3\#-6:pmd:5Vea@a`-Ukc\2r6Ur46c4Gpa2fBBS:kkC]ko[OH$9<A&]%a#MsUs6j$:4i/gt\2Z0`-1ZlCRDjpD&Zmd?%F$)#%A)s,K6WC,7kK?I\[ijn?MkD_0Qg#teBhRIKX&&#i-@B.e<P'+?(;uksFY4u']CVDmR`DcN.IDM[S^4\7R5Sjs4.g6M1L93#XZ#9a%51>hn9NNV-BQ^0C(3rWT-aRl_G#$N3C"bRAZc[FR2!pg194poZY(Y92c7Cm/BtC:Pf54],m$m<#I6/>f^DqIL:f0<XC!4/d/+SsU%p$.GoPrPs:`VjOIDc^qn@5PBsr4M]Hmqo6^\r&ENm-Y@rKQui+>E/7ei7fmhh4rSG3Wp@lFcZCJ2n.Cq%8Nd=f(uC+TtUJrg9j+a%]WnQPhXJ!$me7:6CPt15WeC<$jFU+62(!Pgg\uB&nl=2ns4,(C="5Q/.?\GXSVabh?FQoX]fKA+E]u\O*q^#(\nd^,/aSJQO,XrP%X)HMGWU>h%pu1<lI#Q_phYX*tHF6LVo74U4I.JQDhjE"HrW_d*OjTUKe3`#hJ1kfY(>mT7b\Ck%qmQDKfJT/fD>F&S4h'q0nn[#;%,p+dfnFP=HfNUk6beLE6@TNcE^5e_5@l$ns2V'"b@eSm;I+<;uD9DTaIVkLlZ85U+#0R`<=:SJUD5"ph<MJ)`pJ'i\e`^(,"oaCC%E&WK]]Arn_eS/rml^>56afe7(gDZ\,?\9A*?cG%jj]gNp0:p`Y:3[/o[!?c#lrKN$*LY.lqQdJkk0WL,GQOq$^'phuFLBS/^M7&_%[Ns[227<]6m*sZ7\I9FYb1<5^SLV71U&QTAg%Ig2G@0=_N.#pUg3X3.s4n,lMmiWMge`$V^5I(Z^=g-1S8p.J=]p#+aVIo_CuoLa%Vqp.Xl5K/O(;auU9H,Lk50pE-/k@bN,(Ed=.fO).Y6%ie;>dhV,SRg`FJ&i5n`,NEBbNN,8uVWf<Tg^#3+.pej;ip[hY3!k>C;(=%P:KbYGB:0AZ7EckV&0*1UhHlK-#TeHJnQrZoWra_e)odcW*Q.KjjVa\E6#Tc%eKR@"kWNakK]mZl&W=7ORGqjj+mU'jhqWfAM9t;%(MiBt7L/@'BD(d$:@jr46U<<bbI`5dI!G;6(.j315Y6<r;g#5m/Ub@.V>!STlKX8'H^C"lJ1_"i?9]BQLQdoZ/jnM9R_C9!K=<V,%2VJ/,Z\s$<!cE6Oc7XG4%Q4>DW9t-"^M8hh/NIU5QhO/7jh6Sths-+EfC(n$eaj$`j7;:D!',Qls)KrDR[_)c'5eHX?LMHTfR.Z*%b;4AUl,hDjH2dOOr6W6e)g@?507'19j7CBncK">sqm&0K4;f7(_-Qu?6P&q'K0fM`8OpdJ2B!$BF^4*G]%?`b5%JVJ*qt<4c"f8l%0;sfdBHs"l))dUaG`l-N,sJ_"Mi(56JH'T8SI5APnasrmBm9ERKt!+;]]tN<7bpAnB'3SUA+[bW^N@6jA,j&._Bq$9hU^Y[0$^Ac%5PN12>9@t\BG^9K\+];-VM-=Sp]5c6V;<Ek'D;k6>?1G_aWs.SIJI"FX0,1M5j[.aJ$eYIb<t2%Q=%;ZRLZQ+f5WdnK`C.`hGL1^%Y0a/b%W?[F0f7R-Z,X,^9-)W2]>f5J8NL+p4F(3/F52M&^")q)#_MZXj)9)$+'>LH*F(3sV`F^B$b'Y/bfqqr+I%i@;>"o!f'Pn-%V3q;?,[U`MTmZJnFDdchGcS+KP)I"IrkO,l!9+lFg&"@F41>*c;Y,Ce2H6mi35]r#^I1lg7NK?7l]Z+nr\>Jl1rMVa'm&F(=e0`B%h=l=u]O0f<!Yab$IsO$:#ti`nEii)oK7CW$B#%L"W]csUlr3lqS>IAT\c@'q9QDc%?CIN-5a5<p,=FV_3oAc,<[ZRKpEoq17K2gE%#5n\+rODInn#O`R#(QBt2=0u1g+BD?aND8+"=.*2H?Lg*k\57fb<(82HMSi3+h1,pS3leoi/^KGSU[G-H-6<&nb96XgQUk=O)a`"%_:ZO"ca?pN[AQO\[s8Lef&ro:?fOAUL"YS%nL\'!7BQScX57^dZfd:p&Qg[Lb#o6>@Yb4p#gTpe+>E6-TG9dD*NW21)de#Vs8Da@%g3)h3''_Ka_:481d<TEH=-^TD0r;Mod'P_=]6?6GN9`7b_htF,NO$ol1,cV/<,U*lH>5\&FkbBVZ3H&"<E)!l>O=]u*a41ralBF<%IS2]MCiB"Zmq&=o'l\#,`3j_;[qh[mP_+J&C?'C;Le;s'!En/RA`VXHYB$C`DYH?bXkm6#hH96Ka-"C&YQL@\0Gg;N]&<GGIM>+X%maU0P!=4"/YT,sl(/rcMW<MH:JUp.7GrN9h]Ls0!/sBA5&oLd$4[99j4tM!K\LeO)/5_5*h3`K+oVG6X/^d`""[2!Bn^qt\R4N=M%LnsV,jYeZk?LCN<gb'CaUS`W$>B=PqW@O6s"\TtV]["\')\nm[<N@UA>SJrDer`4&N#G7rp,nDliQeJ>Oj-(a^,!+Yd6ej-i+0K[%.Dd&SRhnl\KR'I&Bh-f2>fDLlAY@;4>)V$^6Cm5WnYdNsQ204._R*1X(:b7`16MYB[5HhUNm3Q<"I'[BPM.lUCV`FZjFtIa8]d&N%YYcS:]4c.8PpklHcVNL1,_+T$TP4jfpT;\TJ9abu_QD-P>t(!93X\K>$Q>0&5^q[te^RI4IR,n!pb_GP*dDJ(>&`oN3+Bs*"^8k"%I&183c;g-`^.j`Tp!f',J9PBc*71*kEGl61g`,gI4)-G15&ne$92gMs<$BLtL@tXBS1Gh^$ePZ[5S@2TlD+$&437U*67ku,)22Zi%QEOWT*m%#GB8VKH[Mj<36;+o/Zn48D;-"^i8/?:A,>4W,:f6]#+q\?(<j[G/a<q!k;QCQ@brk!VM:Qs-dRDP!`N0GD"aTLB-gASJ%.A6qm3Z'pA)%/j/D/2a<3-UWV%[+4/R4"*1oDU(QfW.\I0MC(Aq8&40R*o$F&O*ZA>CFaY&_S(YVQDTp$-Xo`!m3Cd8E:N5l9sO_%_F,M5F/)d2E1;upm7/^d12W43:sg*o[`Xd"WIi64[hdqqZWOdpeRPX&9GQjZkhH'DT()Y5q`*ppX%&#J)%@H/=`=OB?mNOE9S4e$%$#P!YK*#cn/X\fo7/"n2<$:%cLm-$QaJ%1mPp%pk6uE_Y%"NYWHHW>co1tJ?CeOQ2+7RK`<``soKZnUsFHf3@d.mnR4"%ms`AqVk%4F(+$")TAmVdS5E9(RUqM,(SPfiBBm-S$Des3-&$B4O@8PC^,p>_bu6E+?]WnSJnQ5@Fo(\IXoC=h\>!1"1V;23EZT],?87*Dd(\%*C]?CU,rpgThQ]t-Xqa?;b:2X,2-/F^.hp.6\O_4Z'3G/,#Yd@oB'0RLo6t6+Nb$lUW.F7)d>#c8nFEEQ3D,TPIl^P="2]Oe5l7K%O(:"K.2+RL`JRQL/4uUP:R5+"5UpRmfEJ]pH,S-9jUn6<p(>8J9L/oEEsWaFfHLPX=j#)@_LN@R^'BiP[TTU.6mTCF*0&ULCniC^%ZO/WQ(1JdfAC2ua_(2lb.\L.t[Z9';KT39IilIG0L+DSM1B&[d*4[DMo<gn0bF!RK:d5SEG1mk/>%:DZGaD5h^`FYs(*-u)P,LY2%P/K`$#HQ<s!SS'/g%&Sqa8=e#74(j8Cb1pp=BRk#+']f8HSfg`g[!F><;7fhG!KOlHZC6#_))cj;[d_KI&!bk;71^dB81igO/*/Q%D%g`g1>2En9[+VpDj9?!IPk6V@0:K]CR.IW?f%FbC9uHAOt88Q78ph@VAB#R;)Y7A),$t@m0$F"M:/tP6F7ghTiiHOY"Vi079#A&%!rAuZ3nKSr[67YkJV=h2DOq2=&&dJR8eq5DR5L,@;AQ<(%_6d_pms;CC*msU%!a[#=h%uWEhmI!>jD]=Q^(g0FIa_d6haMl'pluD%Y=OBu&T^u(EDMHG2eknli!-_-l-2=&HT^'[W8;>]("$-LHDo<!nOH6o$YY5n9JKtt'*glS].Gh-YOt:W593l;3/-.Oh'_cqNQ[hD%RL2(1!7B,+5P3&aQrea=#Llo!\jN7BbN].gPH:1PKF5UuA;cB'BdiBTb94+:J3ZXNI9Jb[IR&<m3_2fkfeW-N796lM1'\ZgW0/^,%`!hN7P[/5B$>RjARX)a`o>)hqeoX>U?oA.e8aQu,SLUla`87jYon.H#'O$Z:UUKiGG:`1n]$qHsXqVGi5=i(AnT9]GNO?>T88\a)%1=c)@B-&d'VsFqU<uGL:,`rO2:HCm70+)iTiY6u$K'3ZcUp`1OH,Q1`49\QeZ%Ut'oJ'G\l\U3CV0sI)eAJL.(3OBqe'YY$<;R!6%e6-*SA0A2,S%D&2V:.,ZK7X'\)BsU&%S,\+!]=VMdoPr)7kB-5^'<)V*LJD>8\aH.O<i!*B^&FF%LsC@%[FPl[ts)G$UU%Y$/SJ7%R_6aU.O7HWYUFe9?;soDa/I&gm^A_=nFAi?XfB0S!,bZp\+jJS;4pdD[RLBe/Wc'B;5OC,A'cR1M7`FG/9.T8O%@)igk<oN%b6A-%+SA8FOqLg$;7_"H$KE'BZO(IjU\0/:/jYGm6W%)fM)qgads'3"76%ONW`:1a!+cs\a7>%5&ed%TkgkmZ"E>59.TlWRM0[V%^8?,a%.\sM\5P%9ph9I9,[E4RHV.[l0'Ufl=d[C:O)Z7SFD]4*XTIl;gD82Jd@_m`1M%1bGg%:>kjo_qTI9D.E1biN6=,bX&<c*k65:Rp"%.:,hJKL3:=`j,u^<^D%Q'(<69J"%io8-6.MnR`i!5OD-5/ojj#r8gpFl'%B%U7f/PpH6d)f(<*0URe=G<W28/1!d0HM,'2X!Y9Fe%cg&ZXLdL*5j,NnG+b^&Y!fl9CC.?4O+0eAZatI`s4JHXIH*38<gF04!&>.\.*XDLiB^baT%F.(F"dPtuaXX>R8b9$h/F?<=1^8ef%/;fSd,r*gp>TsfK3cGT`dY$i1":QrQkXZ@&.b%q6X'.D]W*hn@fXA/(4^dYc")UbuJ#q_%GGKf][ZL`!bYIumlIZTchDEn7D'^t/%Lg<md?6V.E;A^7TfpFI(#s.X\NTcO7<7g3']U6u#`8?$ZSN4a5.IaT6[OSN1XHT'W7+5p+EZ;_TR<rh&/)Pe"$K$NX-=t[@FK8Zc%?5>&m3c&1#ETdltBR\g!Rs?8"Bf)^Yc;TP>Rd='8[Og&SM;fbiL7kh#??+V8`jBDDP5#%tpiS8Kma/\kUooi4ZVTR8b[!cEp.f@*%KbUH%K'f"T`&!>)a[JhJ;f[!>Qpi])D,s3X%RS`d72!!KKUF3.PbSr3qPn4kS$N0+M`+d&\@BMN.7[imM=V^&K-hdR=+9##.8RlN%:j?O21Tr!.kU\f7WNq;p/fmg5Lu+p]0h_Qc9PB:9[aErX+EgK9Q&,8qTZkaS?QiE^54n%\Pd#ik7t%eAJ`-oFjt2SD"6f(8]lFl@%8)A0J-ZIG)9Uj-)F%>VRnD>K:W/;W:^,^Tr)F-+Y?R(uB%:%=@O7iM9kkqeHSDN^0]@X2M^EnARDW>*Km*k:HX3RiNHJJTA](^Nk%cUMR)8E/UpZ`i;6/k_fXoM1hc)u6Z.I4e5<c)?dpqX0jJ"km=Hm<S[+7EN*lTATGBE:WqImW`bb<G$-g"o,+7PVSCnl`VmGSJV7`%ELuI<CS`e$?Gsb<oLiGDeLT.fre61#^RaD(1gHH7S^@Y:UY!1Z?NJ&A#j*eIrVtpE0?SLQrd:hrm6d`#3eY7g-b"r[Du[=*WrqW5%;_^u7k^5-+SR/HEHZsRVHd[V<5>\1ZFKA,qn!l$@=5MX%5)4.n\9)c^dfsUJ94iguTRX?9Z8a>G#E_nB>*htV<H!k8-fQ6Oo5\D]%1-5<XfuIAQYFk[3.mM%1K4)X@S^gH:ke);nZrZ",7jGP9l1h'\c^`hW("6<.>o\m_c"0Zu'AL4Jk^mN](eq>2!&!5oEW>.Cl9ZK3%r&Yjjs&&8_+ltkcFnnI:i-'H[?T`c+q8:VT[(GmM%iP2=5NlC/g`h:rp>o1s[GYb??IS?;AT+#3*sfSS*o119G4Y0=]rSkF&<+o3%rR:aqeoP7=aHsX<(Jj@54F0$U9d]f\f8;YscnAOD=0"mhhrif]J%Cpi.]=<#?,P'"W&!+7j1FkALc55Yqq/Z3M#UUFfUfh-,Yp@2%MUa2Wkf)J-I.oJ`hmKg^'Dp3*FtmG!:1*XR+78M]*KNJ[XY[T"=#Rid>%nV^\"H,na'SIQ=J9.0jJIlMEq7[j&)jlSm2gJLbO3tf%HQ;:"*62uYq-\"Z^2"hn,WP33:?X_d!t_?IhRGB0:8Y_pbo_:&e'Y\sU-%Su[nKuFd`a43KDo$:BEVb`T0))ib=jINMr-M;`^FbC%A$7]bYr=k!,=$_:`nqm4Nr/";SZd@'dGUNfEm*Na1TFAK"#EB;TAb2%eETtGFkWgU7j(Na-1fq_WUmVYH.D]tkJoF8k_@qJ<U5Vl%kL6d/l&'\bH6MGUGL.AE4R^#NFe4W=cHcdR(AoG1LWTL[Cm!"/n&O9mY%@S0n8'qXYBu4gk;VJkiO>A+fS=)aW82qXlAigjSMdig%r`249!4b&:(GtgJB9*QapUWku?]Ms<lnm4n>)h/pS9Cg:.\qXqoq^2bF:-33GLC_]QL#F^5VGIcINe*tLpb$%Zj_,,)Y-5Xn>pud%)c+34NMl`MmU14mQG2kO;'qIRE7u<`T6kkHo?fi^Vr=5B9NEeNMmp(lb+mqCi;=GK!>:mG'$5`F@I8Hk,J=@%=8$Y.lrhe#>)N:F%rjNGPqf=!<Gi;J4M&r1Y:#G=3#(oM%rjZW(#G\&3Mqs]&:o:>m_o'GT50GOQZSusDGG>[s:-P$k66a"Yo+rdL_/U5J[>^Lk%W>5-%]>m\`DJ2c@V6S"7SS8mYE$/WSI+o_aO+*N6Z*S[^&,SRE*+T`IEVF.$NuCgk0D`)+eDB$Yk@]Fk*7J6W@CG1ZV0fmWh&lNh,r<td%%Q]9a<9*(\.q8hJYOdgT1/&n^/`5$i1?gCJ;r$9bNmmrnn(C.q]&GSn`NT#.k.:PAH8F<f*.,f9[JS)cSCqB9piP8r=nP[6K`8)7%ZAUYe`EQsE<ipU^aTeqn/,WIeH%,)HQ9FeCeQ]_`(.n=%03,@N[!Zq-0G0#dgWK?;6>8XTXD(iqT$PKd#="i?``"RDMBZ_A.,V6q%]>J?tPDu^t\)_!Qrgm_%Fd>b[XJ%j#pQ(q6<<'e\dpbIIJ;RKA:#$]1mo=_ZCOBLHIJ!#V0TZTP4(A=%eoZc,CjWsQ]tp>Qe,4+?%ZekK)r<YYnj=;$?:nRpCRjN"di>J/<6a-(hehl,OkL2_Hf]u4X5>Npjn-*kg*KOP$Q:MeOAIZtsa2]uAT6;TcBDS!+$[;k+n(sjK%\K_t6TCqs4-JQp]0Q%G#kO/.f</g[-aaj-T/>o$h==1%/i_"?"%nB-no40pj7%@P=g<X(-W6;j%QlS)?S2t<=Zb1IFros6O@IWK8%^G(?\MpJtEq#"pqZ[\LMAHkoaL8mq<0"V/;2$9=QkFU#_m(-?,24JnPmYMUh&pGnsE:9<:b;!",J1FJ9"'CCa#,&2F:,%D#p:J3a%]9?D/WRh&3'j('2-Ml#?j8QF?1l@fbc0'^VG*]o.SXg9<AaAd"e"b=c\9C']!M*G%Ni&r!U&bc[Bo3QOa"/fL<p<@+j3Pd%j$&Q*%2g[XIgg9'edRsh\QFV!_$0O/B;S+=,H1:IqXh1=:<ql9q^9cbD$Ji>hoBDo0SDD+dbemk5Skl[jl9.<Q9`&ITSh0fn&ID^n$_e2L%o`O1YoZgah4%0Q7Bb&lb?[eVW.UOccW?CI>QF2KB=^*JqH<+R#1BN4X,S=sC6_U-!1SLEVlBD5lD?CTXp+c[>MKPX/f39Z??+EjM%[)G[,3#Abu/^fEL3l]_7%l$bt(K/S\/,)35YU^uR]RQuBRc!sMoO8?#kRIgQ2DNfF1A:k*GFKIfAmEO5]bkPU\psDtYK6#fe'=\I%H[2o\hIp/ai+89YOq1/QC&'#b[Z-.!.:O8Ti/?!@8&LNfV`&ZuXREFq^$&6f]+DrOQ"D9BS*4K<:LES(!2F"FEjA2,,/rMDJpuDo%^RiZD03[adj6)V4QD&!-'Y\D=!kE!t?tF\p!faGKJrV2,_;6n(Keso6[^]>QB!aT'I0&Wdn`f8I2]/\\KX83si@H<eobPJ7)gQTb%B!_p]39+tUXRMEX\8<+eOa%),oLlEW=a)>J_nnC_hB9ENlX<OYXOUP](LrKkmUN(G`bgmrND)oH.NWe?]]n2nB6?7A6;m=LYUS/d%HT7HsY2r3Xg>U"^9o\ouTIUqM6(?VG`'PF?@X3(NS+L%t(YIpZjlHkF]Xk%16u3j!?AR4(OSi6-%pQY"5M<ktn$JT2/AjFc%J*Ur%_=tNK$@l:Og^C^l'\=W^`#^#hNQ,@%G3;T9=i?N*i*VJ`s!d[867c*9(CO^;p#Y%a1rhR\R@pRV=SV,ABko$ONu-,^Eca3!HF$i`%&^JdCEY7\NS8%[j)P6&Rq;m#CFO+!k"63Z@G#U]>+[chnP-]ZrJYS$Z#Ss[9*7o"G!GWtNBn'=]APXtFbCH#b3#HaSJTHAp?%I&R%*hBDu!HY95/WCKYj2MhOX#^Dsp-j0f\R=%Cej-?"ej,fbVR-]>Tg@6`@Hq:&JR!r7#&[ofMg4Ap38HY;>V+e=kA5N$RQF967@Tg^%&FM?4p1TU:=q5Ed=q[$821hBE_+%5oL:rr0Bh>X8JcngOVW1rQ21V$9b4+E!#3lJTHKMm8)8+(lDDosj(T\5loqi9&*9OMkKilu2%)_3J&l9Cp.[B^>.!8e49Gh*;D!6-5,QO=5q7<kp*>%,\an0lA'0kOHq(Np+ik\eSo?%P$s41[\W+N!2k*CkeCo<l7)RJ/>B-F25\%=fi#Blf<G<F9-Xu%L3=f(OE6?g)UYL/pm]N.RX7"ZsaC!pj2CJYOcW"7;%+7rQaHK5AhHiqrI!+53VpCQT7sAff!U_E/Q9aMuu7@%Is:us@650D4?@n3JHt!r*8uYr(APLc"hh6%\F8^MgXH/J]tr1Spn[XK\AnL+lbR,#q4cq&b'4s:?[&1>^G1g^&:,\qGLddl.$[Rd%gjdBg,>e<"QSoaWB&dj`^$e(W7ub;^#jk/a'<@/ihR_=*RGL*^J+P/#qg#WjnC`K\p.nJ5s7[$grq;O?h!':^d21s>:N#%dD#F+n%X4o:_^\QmJDa(c&L])[GDt6!ioq*?$hqnA!ld%eDD#\VSi#dGnr7UlC-p2mM+33]ig>>r]jSf\a?[buQm^#"Th#$,E++JAjq/#U<%II#V[cgDeNAh6J[9^f[mo3W"lqq1TPp\US1H?=XTmgh)7\iMhM^YE2+s7#mPn@-`ApODu;T)IEgO7&U"%OQBA*DTsipo4;\q8<+'%GMh9S@IT%jY?enm;LS(E@:R%[kp1ZJf>%@Gm^)l*DjGV$`4Q!HB-4m;q#+j7-[Va5hZ)g9q84/D+.lfMNf3T"?dG@7h`pr9gMh*#%g#0Ks-hgqApKrWhWRc+flhC.7eA8maqtNs:pm0XU6_<ZEoAr2,q:G*8IK.^bUYjk=)1VG;h8>_s*RYe=lQ2[*]:OJ]n_qlJ,PTe/%qlfAX4!3@nDLVWE]e;VHf8$!cs5E:!qn;ScIeq;*^O:7fkc"@sIe>pQE,tH*H</RuDA`+tpTN?MIsuBbDfGYNJ%.N<n/ph;%h=*h%D]&KZTAB>&Q+;(ohtcF3cgD:(rc%_m-]d`O$E*q!U`[IUabdPi5'j"gI!o4a(6@m51&3.L>PLQ=Hu#bBg\q(Th7UMfnL$85Iaktg%#Z"61#6/mdrNlGm+92&h#9P6NantYmn,BegLAfLa5Q(;Gj1jL&07Nd]2Z)b.HCiK]rf=gJ/c!$Yf)Kjulh'GTf,sdW9UaiY+&qP&%h`ec(X8DGU+9(E?^Q"p'%hJYrXWYcold^pnpW2@_%mPL;1&q+FgBW3Oo_jglr/2KBs/-rMdf$?FnC(/TI&-62l/a;JcF9EnI-:9[%0E6kj=U(DNHZIGP0,a$2(M*U(f)ni.55>PIH59rW2tu`)a/-N-S,CD)^\Jt3mQS8__h[t^DZ/\S&%^R]r9g/+nb$8<e*Gn>IJ:k_%]r1U#%f?;*m,-^XIX1>W4o9`TT$q0JbocuQ_/o;.2tuZ_GFq"1s22=lp\R2M>B`h;YJ5IpJ+?*p(\#n'L%*X_W9u;[rql=@GFolQ%nLkFAIrP<%=rUUXUA_b%e$Ha&Ie]gZ])SW6IHk>:ZTHL1s6oB^0;dq(;k$qC`]D11HoM%a1j,0GkK3_qg@Y]#421\ls6J]0h6.n!%j"l<5nF=7WIX"(U`udPBnD5SlF*=b@/)/i]fa+=B5J<MUj!s0$1tUuMK?s!Ms$@mJI/MsVSUWf8EUs.9pSR7V*(dd+($H_"!R)h"%EmA."Ua6=`KJBgL2?q*5&7C7\VuQ+!5OlH"=]J+1J_f/Urm!]?5Ps4'7Aq[d1GU^@k.%e4fq#frf,t%`hH?Dj4?E%gC]3;L@n5Dr%T0:BL?L43;>MgGM<=Zg8fAJ@7G92<%2rmdU*0m@KEI@KPg!73MB)h#$c#VFn5.h+b>^Ug4DX>\&m&Zb(fIu!Brl*njZ]uc)2_I<U%.3.Jt^V.%!kJaa[o#]!p([dM8EbKWDk:acsMj3i4LY^uT]KEO4SaQ?<k:bUt><+IA93/J#A9VZJQ*%]BjVA`Z]"<4Q'L02-p&-fs%[XNT'k[<`<X';bdD`mpe9,Za;a^K]Y4/ZD7mrshqQ(Kt<4aHad]_9OrXaG0XR<$L2gJ>PpQt<_0T.(T3\b5"%`kpg>Q[ZIWFuQ"a%q[j89rq=8)m.TSd,Q$rlT0'W0mD_pTlYeH.cB=r^(P-sFr;5gK]!GToNkK_PHhN%Q2W=%IYFTnl`JN@r'5$XCLEC]"SbrBZGgdZ/%X&/AlpZ8AJn+$()^Xr?1c[>WXM/_h[0@H0`nFEL%lhA/`fjFX$q\s0$cIV*>qmV4dllFo&G<c#:H2YX?3<#0R$Qg%t_8b7.dmnPi%VW[R:4(l==14*$(4aD@t4hPu[1E?A[b8nt%b[$V'D;a%Am^ikp>ke$Pl#5@VA$^(Xf_P&sPp>=QK]8V.@"gDNaFE@<Hi>MoH;<@8%+.*);V1WWV?/$rFD>Te%p$S:i4E?_uj.G'V7u$8FiM#_\EV(dVhY[p(_rT,SDk,c2R*?/3d]hM$:1WGlQ`1A4Urj2a0Accr$jR`d%_BBDaW(m*W8,:J>]^,9ViGH;M#(Pek^)9eia#Q<%iiAtiXpuki:4*OY3I>H*AG>7GC<>'+#9.Yr)sf*O%ZiQ.c".G^oB80S<K7%>%@)J<a/=FDqd^>VFj"8Y-o@G[jIWYR]8f#;>5=QJ3,muiJ2lpa>Q)2R]+,#dnO`aFNb*1<$EGf#;*knogWJ=76JA?5`YsZ\[:/9+G%n]guJB#Bt#V@S*>&!*V`.!aUM\Qq?_;Crsq-8q21Pr$;dIi+Q.&h3igB:m*@ql'KN]b';D,"FO0>K-ZR[,G]tHXs'Z17TNLQCR!C%>i"p#r2&Vt1,sRWkO-"HG@L0`X\5j@2njTc6R;UXIX5GpS$1nUI(He6s72`0]:YWrQWjmaWpR6%qbe]+m2$_N^UX)]pAEdN)a!pM%IQsi6fgM?$msk,B3\qL4:>Vj/,J)O?6GnXt5@$AMNJ`0LI!beSnW'*f[^n+MDLHZ/T0<'jmI'\E9>>C>(UWl$j3;AC[]aLP^\@Gq%8?aa+%c$t`:/Z9qrI+G2f<]8eG@)HkldqaNs%/I%>An]Y:Ykel/"cBJ'>;e14aaj>pr(Is;7;(Po\G:O7#X]G5M%D!eSQd(Lh[:Q%[XYjbqMC)B$Np;DjgDMJ?XLP@o-WTGP*/B%l0a%rSGW]D"Hq2_WLWkme\n8tJO7tm1f]t,FPhEu7Lc3.>^q+Jp>G(q(FC7&ptZ_)%fF^p>;#fG$/>u)uIHoh<gR#A>=7Uq&&%A]Zr,cE6lB,H1;]H"B-qj%deO<%&kOYPCm;IJ)%n<p_Ac]gfqDVbe/@SsRh:TA\o9,3I%S5(BUE?ZK'.MSN<F$;;uJ.#R7o@'<[rN@1Yjo<;V5/+=NiPgr"EkJQHKi)>eI[te7iQ^Nrqu5ZEq#1,pHQQ*_c@2T0k/-9RQQ%=6%mAI_2rG1:qnJaDOlV1<kET45GlUC^RV;L0Yn\skJc_$bo$30j;g\kL1A\%,Ip:"@54t2B1%o;2(5Ya[$\@;.JTDNI&_a*SEkskt3%4)EAiF#n?ug-*(>oD1.5ftI.'M(a$r?@@o6l&YHA<@R7`QXBblbPp@B>??=,OPAd?_=ok8%sO%M?N'm"/a1pU&%@#rL?$lU]COt!%_]QJ'2sW+M]Y!b0m@c2fWBBh?^\Z,(7g>.3h0Ahjg!+d<o'LAjJMZ+@BC8.!RrqO'fsd0MYIrQ"\.q5EFmdc(GG!.I_,'e`q_OSi%L-OIL^TTlZUb9)sC?+^Ehd,##EVrcMG'.$]Ro>ASamF1eGPB_LT0:(a_oCAbpKh^l^3]A6l";BI5F9Qss,D+aiQ_f8N/MK+hn;0m%?YO>=@QrO,Y>5YkGAaWLGC"\o4N\TSG*kKT^L8r[Ier\3-A'\sWo31jZfgeKB35o"I_+*Y\+BL`d"m0<bF]2ioeX.hgZ].k^0H!+%7o$\mRE5<<a7&rqIe1u.pIMd`gnjH]D*L)F:Gq,np:9DOhfRVZMdP[Z[.a@&oBU,s;!Zg%F6W>WqaV_IShC$3p"%=ZCJG)Ireb1*%aq=U3pG_Ck429W6nrlcHl":sMDr!K5gfVl,\eD69^H<^-keG*-o5s0Sf6<k5b:r#05>cX6qg._184r";jYtfSmr!QZS..Q@GOAa^%poDI_B>AJX*8fF6g&8Q$O7cS.rS=V+$eXX[(E7#%\Tr;ogOnZRD5CH$Y&@W0n\`i#CH#"GAoZeNKjW!R$hrlP<)h6QjkSJBhu:!,%!lDr74sJeXm.FqRY;_JjH%#G=094oBINnR@H<J!F[Jepdj2WS'$tl2q`7#qaKI6QAcTM$oqQhIiNH0k^Hae(e7"-o)hQU("IbhTE%EU1gBmtWRbaVI,>/AL)s]dAu6DQL%drTUB/\o3)0E7Ta\mT3S*0E:b,am%tq?+hd5h5SZTm5l+[/6gi`F6Vc.OYabbrorTA4`p!X%q0r@fPs^V&H$o)U$ej!'J,f/bo:8g`mlKEda_b?[]>%T1G^n^'4SN(?0FLkP`B1V'/jE9#k*u;/L"Z4,>MgEp%J*o=rTkmDRt&1"%S%S:g6oq]K\og=-m5HOckQ"bk#O?Co0BIS!p\0SY[pSR";$aU)]_BBXgJ>!0Im&/Xq3OYY4'pTfFoL.Ib@h1Y!i!<tHN-]hq8q6+%o?-<g9,hNPhFo56S(ZJ))fO@)&)bPKS)ou,hetaDmsi#lp[S-UL[a!sp@bO+EpqntZhaINPnSbSH"%Z0-3!N!EUklaDn_c=an^!<%/0g8U`TGI*c-fsof_Fe+PH4057TNPuZb?.QmVMK]Vn99pVq3PMH-UiMfmis0F87&M-[sg[FlV3]]4\V1:M(iApl!HW:>^NuFJHQq%q^_&sMdI'MmKE8VW9B"LIs.Y<k08s-p;5"r#:Iia$Q%oRq>K`L42XMk@?`kB@&C[geFD;@NE]1rI$fk@5(E<8Hi;Zn[>iYms7TnG%SBHD"jNi$Wc-5i9*7s(,TtP=aaR(pAri]XWrTs'fq[M):itNLMYC,!:GjjJ#m8FO>GKq90o#OP!`B1hQ*F(Us(?srGkAl!a\-kmm%N&rA6/fkU%mDdc4:N!f[AZpH$0KF^A^AI$kKd44%?.sQ#`P)$#:L:eA?UD!1gmV$"_mf6tmd/%S@6?`N^Hab,0Z9uI[JT'H^HM%5%HLYhK_YGF;7E"Drg0jYnh0h3jHY3$)[uYDo\bm=-ilCH,BCA,dpi(7Q!1T<&S2b])VRL2UMc=fW\'6F@.u9Ymc&7RfkMLYA4c<#C%P$a9aSm\gMGNs'0Il$M/VR9&u_'n*u=83=SH>hEm=F)?C^:X,SB0X(m0<_K"?\5A_2Ttd:]<VZcIb9%]q;g3!Y6a8DeW1/Z9VeTS%l06A=KA<7]Ndg]":?ihPlb7b*n-A!#pKe@"NE;U?s(;#*&Cp_sBE-93[(UJLc0t&Y;m.@kAL4,[G;`dUEG3e>a`H@qrGI3-\TNAS%H<E/?Uaff5bREZ$3Um.JinEY)-YM<H/"N+O/mg`tD7t>mk5HM-I\a6j[Jb(-@<_FGW<@,aB)TX0b6O*eQ1tF+RVq`Nlb3&IVloss%W(BT74q+chhCnfLd@L6^o.Qi[I.h`-Vd?u[=P3EIijCp!b%I:c*'GcdqepbEKpG70Q\Ar<XE1`0/"_nPcJ78:H0))jK"u_KT6fr'%AN>L3^6C;>XtT\Cb)tZ;[l;UHgc[id_%.'"rT!&N8,2i3pH/>%?772I^Ur6]bYbkrQ?;QIe`1kHTmZn5o.Nk221`2![/914YI!`>%r,SS1piL/T??l2cY4&dSA)FEER^nmmn'4$ZIIoeUI-p_$bNF@>TG.^(r6>6$H#EFdZT`d.FE/[hiSM9Ei1e;=YIcSd5!4:@R.\0W%Z2O@VNPR>CU00L>Is:j6OghO_mVY-%,/=-9`hPbqhb9l5G^piS=ifd7(O>*.jj!+h2Ip0dSp3-k$Aih:s24$7DUu5gcQNk^6f]QF%dAt;ln\q7nq:<etDUn=&m,IBb:QI\pL@tA^frO)gp8(Dp59HE7LL1^?D"kcnSW,G?g_@$">Wpd9;nqc/QbWDambB1.2Qsef\*'.J%K-*&/*WP[$m7Z=?+o<q$hCN08c"m?sh/_Q-&$K#oaHNrOgJ:cIr9UBn5<mKWIm:1_>0r,`GL,^F)`8-'BjaYp-Q+"QB1g,R7o,`2%.%bE6G!IDFbH+ruo_PX[j);ZE[l,-`:Hs04J)dncE8lYTQYZ$/Kcfd_pe(8ArRPZ,dmq-ep[H)grEh`N6aXg6e;`$cS[oED&_#"m%d#g\>j2ong[q4T<*nu)8nEIQ9\'9nWcQDWdSA\OR%=:a$f6\SBJTm+[>J'`?r2\8umEHS/bDd*XrJQZmp137i\*$GN_".HYE^d\+%hJIFK^OJ&EM%Wrq?_+m8IH((Sqe&^\\[8bI:OS/kN]rf;n>m*$dDmru2TI)U*>,0Wp,B0[\d3NEdlY?tT:=9ZcfK1lr6q&=[pT.^%g?[?P^E)"`l!H[4\bG-jS&0-qmOWY]I_L*hVr*HNm-XfMdBRnV^H_=9B0RJ6>F1BmIpQH0HhAX@n\`rAX)dZ9hYg'fq9-B3CNo'm%X`uq/9m6R4]i.]cDf!0MOak.<i1"e^)]oaTlE$KThD!*/F)kS.SpkZsqj6Ji^6fJc0FlWZ\T86E2FP&9Ha`HXD>W(SZeL8<r6A[J%q2='=QaWp\b7Aem]q2<Tc46ENcL;hMBA.WU@jd8+EUM"o+ZN_S7"]WgOPK5;;h9rK\ju?MQd\#,mf.HFo@5dlrNLYKfIn;$iTKUs%5't_;dq`InHLK(e="[h&VglAT:tG2^f0i"M2<,J0F\cTC7EdhG+8C+rX3[]YpuP;*(8_#^P<5+,p2]FnSrtmOj5&#[q27#Xc(f3k%lu2=ioO\'p[ckdfZ\u'2YM\*InSJ4gk4l^:%j?2hEGsU5?M5b@r0@RL@_<ekGCS0>=L6V_*\mKMgII<3]mp%Bq59Fo54\7lik?!j%a>]L#ZhsIh_<0MHs*Xe=`O.E'r6K`u'baoe\&*c-J=uY[ifDha=j_!]oflet,6\kOfmNSk+.ii6D6I82VX&m/O)I/XE:EAIKBKB#%dDqCbg3Yd85!QRTi9cHWO$=ZE5()P\K7Ak:]_&j:1]#T_LR'fCBkd53nkUh_JUd6C$PeBpE.5,Jd/E7:<,;Jc),B$-(PZ8&T760^%OMr%K)F'(7bHG9drWH4P%9@E9?N9L+FSu!cqeJb$piqbd*u$:%oSSI@q'GudVs?fF`q\%I[JC/uqeoh+I.2UR_7q&+IJ:k8r+(-d%5EB+HiUtCW/HP.c-i'4.bku6=^Am&ap81tIT3)hl=)eK^X._,7QE^/YcSZqd\s@gj_S1GE/.&9FcJSXf!pu-gN3=d.R[DOmr\MC8%j,Y;HV7@KD<mA^Hip7m`GohIm^3oa-.8hql?^/`]Quj^J5^a.\GP9sS<r%">WJ$UH*'*oR:6W@T:6(Ot14MFSY+YI]j+k+85Q9gf%,P1d/#Ho0X73=b==d;"iJb\:G]O"#;hRn.3-Uo*`(]7De9^_=Y2kJ,dX?Ln+GkM$Aa/bME^&"m3p&!pYa0/P$C#PuqY?%o8a73?.%$W,.6K6R+FQn?Yln#WkXhKs_1*FG9Tp0Y!fXM,9u?%)Zdos*pK-_Y$6IIR0blLS))D08/mVcMoc_u$WJ3NMUUA"<M<X3Xr4iPFg&%#CPoG-k@RoA@4PL%t41\ru#GGmAk*$&W^GdGP,a']+6[Wf2'E>4Faj:iRNifE`CXTc9iL'fRNerbp4TMq9DDmCaB2_QlsMX\#)0A%++:MQ0V?&d7V^S&5,f=f#F+iC=L_TMP6q0WW./pDrF'uP5EaAW-Hpl&<#]%P<QW/QjJN0h6h9&A[f5`$RT#7>OVGW]]3Ocr5jtTa%n31uQNDeZ3R%#c6?M$0'C"&\T#3Nn^_bsk>;mT^YS::#M:rM.VeGbn5_"+W&'=El#:j-))d6DV35$eb'<)FN=jdOkA>IV@!.%b.,%k-X_#@?7(T//#oK%;@89Y..L1IiVbW\lCT1/j93;>>5+c4^:#@cY'>oZhJ3g(%^98ksf^bgMP>mgQSX'GJD;,2hu]a9?Rfc(9=p9%^I(HI\KZ^!H@G^\XSLJ5DKSnWs,[2Eok_@)?WU:>eS\KR>Q+*.8nY2ha8RCbpeH;9-D5jkb#VbRrTTYdoauqg[SjbF:H?JGZ%pfE%b1N;#K^MR-:0n9UQN]@]^C3#KqoR";fUA08S*LphDf!da#Ahub-T9&;r1D`:&%XjgSL^9pSR!=H@Y\_8]c`73ZWhA4U)h(*NqI'4%SN?KEAr#QSU\189hH9AqWjuJB$RMo&hZqik&K"eYQ\kC90r9#R2W8F+b&\m*e`c'Cq;2di^Cj.AY6d9P!(4urYqKuMfE`BZ.^+lJ%OOn7VF`eZUFD3n4]DM*F!OBHqc>@rF>ZMe[a\);]kW0cIob<"]C`i)W'[^j2e5?BpI$YN[G%)Ircme,=a3ZACr[U'\Ict:Bq:PN9%*;V3.l^a!&1XOj0FXLs&TT:-RPb",.$)f1udLfG>%m8>c..ilSJ>#b1?O\=&@q!(ENc.to>6SnT#hNSag91lY35/PH1YU^/S*3,`%0D+R9-`[tY=SEu]X59s?HRc2=*%P@gEBU/87EF=b4;[pAoT`)5A\Pj:(?DNRrB@@8m)&%(-&/_^frP'toi[S!jjfm^X0KS-UV&'5%icW+d=mqn4>$ap:h+i9YkAhr.N[`/fLd<CdHC6hf4Cr.2EQRgQWNI%?P>9*Y?Ka<!FYAqV1o98kJ>0^'K8-Dm;Qb7#pHfkF.BFkD%ZoC(3*@=j^Cf8->\RDJY<i4*%Q>UpWA0IS+=`>uT-_Thf%J^b#7rmDKm,URHaKNb_FfT*92<\PA;bLO^FI93.,s'=&U!mEqNj=$=%boG>%lt(O-]U=XnA]!53=a.7Yg-?k;R0Y!uC!:g(@\5>\N&KK;>E0Tc@EB?\G/a[j&d]\W@N/6$Qf)FN48BUY>gIg&_M*MNYqh[g%k2D"6]#[t7Vba*J+iied*//ioj'E$PqBUhgQFZEU`)B!J0'cEIIU2[)kpKB.68ikEI.^f3?'!A9A425LK`LbfTbq+$'-?94gte!4%l*HmV#>ePVOdnc-d3m-sP`Zd@%!:DrZ9TRIi%;-aL"Nr$%Ig2!,m9pLi(0':aqj'F)MDRWmf=%>/hUQTiUX:"8dPg1a/d*Y#uHXM%=N->!3e.QN8+qJ.):o9lre))AKEktPLS?n2g3*g!$$&T4bp7WF:]u^:,3?AlSuYKTpej31Gs-]?ab-k'!YY@12&Ld/kNjaDEY;D-%E$''X!33^;8?eK&Acsj*n*m2n-6X42/R;Bu78BR:'&LNC>/EJFX(=n+O=9HSGB.SG:M-"K\[.VKaT&+_1`GG1/1*fiC0@^p!+=>t%V[BWq_5gKORC+#f^'6Y[SX`b8CS?)betM@C@K?GjX99e"6VaNi`mb!_,Qj?jKA-,-n0OL;>T%PP176o(i[:s8iN[Y`'tG2n)cJ$l%-)EoUCu=9ZEpVmY$Pm:aI3ooMrX3Y[Mm`)(TbrnHFITkuj%Ws-`C2oiN=3o9(K/2P4ch7NG7CIUaLRL/WBbe786G++r[T1MC]DC/%(Ktf%%8R7=9*[ib-*f&<*osi@^A>C$JPd:(anS=Y(QBtQDV?k6HGlLL.83eK=E_=p)ButoWpeaH>t['mj@&5LQX&-0P/Z6XCZX^%%FFsZ/)h<96TNnijFqA44Y:g'>Y7I?3j>tY#Y'j@p;tP)8G`].kI\5dO=+q&:%,md!,V6l\iLCJ7ei>r,2af,.q:b(1Mo#e2LqMTD%^sdf:`P+6,B-?AqJTBks05D.@Sd^Eh6?oP62m1em/g*1;<C&7H2`k0/?GQZ=PrT[QM)=KXNtI$_\b8aM);>4k<o-/#RM7^%Igr+r%Na8F?A#2`uj'X*Fr8n7uio3+Y$VKkX/0N)i!#.uT=JtZAiM.h@._C`8Q`t,9qPFN_ZnX?l16J#q:aSTDP'[J+ZLsbi#1do/F:gbC%M+W?@rIS2J%5JK\-Y1ST$mpoAb986m?.#gr+G4>?ciA_U.FPAMG\Q)TMen<hh8u3ojXQENG*$3QiW/&A6r<?ok(WI3L`%3c43pu^%nb&<;"gd,m%\UsM\B+h4'LB.1"P&ZXYR^=OJQQQo2Ek=+RNW\n:+%F+-A5.Q0>.[U_ApB5+KpYXa]f6??B>k0X"Ai`#>mm&U?FOa%7kQ!i6Lf^F:R:sBK5<In-]81!i,2h@p69A0;'`rQ7ifM/?Cr_ZdJ;0b/eN[`*>+N(W9((A-5@r\.C]M`P:f\0!hKQj@GNAQAbS7I%QO_*]eUYL[N>^?Y9jSrs=^ubEA58rD8:=!Woi*o!G1:_@9k7'FpC[<m&1dBL8,<nK?T8ieJ$,8S4cmA2WUi<Reh[B.11-\(k]uG%%B-#LW&gj9"b&8I,jp@.?^E0X<fG%j<`N(61/"'.%X0SO!b4M_D[(e@kDL?8*JT!B[YgPh*jDH;?_+d=fXQ"oGd.b@PJ,j/G0FB3/%[j1*;)'/oST0+JHB<P956pq#Qq+0R("$'d0X,so'lG5`+W=o`8f(?41LPllu9^cMBW(R.o=k,$M2,T/1d+`WIScV<4PP2[UTQ*;+%1Z;0em(9'fK,h;_D%R@`*C3#*qU#HAK<Oi("fNrfgIE"Q&4CM$@Fo`SY!E%`*LVY`2"Dsp844o][Fu)9e^>,!<HVo4#/5bS0[@R%%[o=t]H7Dhpj:tEdCne@O><P:/3AVcL_-YA5c#O3..KM<\DqsO[K"ss:!BPGtD?&]<Ln/Q!6gc<eJD+UJfGt#ZVE@]fku:q)JPL,/%kQeI##cLH%N%jfsjmtl%ptEI-UfTPgJiAuGZEE@B.-RHe!d];H<)J0S:t7c&r9B2'(En#jE:0dPbo7IZnj;OG$6h7h3K(bVI5D!:%Keq(D+EsI:f]SLpC=FJ3^nc=[1s3AJ3DbB,G8--sV;[e"NR6GI`E/a[@D[X[5e]k0/W.uGI#dUTaJFTuWi/Qejm`OIH74:>C'J#U%IQ51U0p>d39M(>LB&*?B@*tK\CBSeTWbX*;\BtZe0lUq]`_W#X_%bH;X)(:G6ju%%<$a(a2Sr0R\eN'\ptYB/EO6<70Y&VDbRf!E%382/'a0/5tlSuNH\R>f^@##PuR\*BMXAJMPgYP:7Jf)@ob6aZ4+>&HmC]GIm@IGX3l-0C^Y<[&M1mD$"\[#\.*Pq6li8\2T=Og@V%VNY9G4`!T*r68)S)*l@B.[fAY3BpWLCpYY4^5>u^?r/$b8&HE1LeQi1#8$Z,S)"(7Y/*S3Z<#m!g6'Qm*WmXg+TMb0a+%2.cB9*o%-4#,nW2ei:4sp_:/i8MF!=_tq!o&rpdDgkL?_&BKR,.Pm\:ccm_Ep`pn6u>&KX9N8m%]VV;a-T6Fl!FiW`Ic1BLf[i:F>Ic/EXNY%+G_#HW/O_k<0P?,IF:Ts6YfaM)oK-IeDi^7%^&h61WA7<]QmK""oG$R!>`*";;2kfRHddPXBq[peHmNf98@49B78(%:2^:nm?&9D%P--l7EJ\^S$mr5#6HYmgAXphq<*2d-nJOOmFN'9\PWFa#J/-'9d_$BXgZ;6I*(jWJ'1GB&)fZRj5eB_V$Z=II8eb`qpBVI9Vs'B+%l]+SkRYChM0Lu;qGG$KUX30>HJoJ[0juSj.(Zg`p0OZ8)Xmqh#&l>p.d_J3b"W&mMJNYltdq"@#A\$.rW8`a#*Df"+2/SL!<DDRW%PiV5^TEiS=P6:l]\j6lR/*qq:/*a07E1jGb2S2>t__,BPeN3bM&cI:'iAbP"?frulg"]'t.J$IeAtb]`1/nr(%kTC.[^6&92J'd)%UIf3PJl)jWHW81'Y^NVDR__s6VeXh?fZ%XrEohc!G)p^=CMckHWn+#T],?O'Z'lYp,Xj;-eFG;%3%S^cE2SA]CC7_5KX-6*B2U-Q%'Zd#(Ja-0iI7N09S4=05?f8:)m"k@!+o7;MbU[$9m2#,U"1$CGPJWQ*"p"k)kL*lu@3hi+NqFS^2.g$u0o\e,Jm@,DHNbfc6E1RQ%hCM\"dV;AVp;0n$+'CgN@=0N&Oe`drF+gLB1Z^eoSq:C$r1!lZ3'gbETbtJZ)mrK@-<np>RZ*.UYI!Ea!cBnY51HX0<MY(Y'1@Sm%<_tY//g94D9r],n/fG@4;SO'O9Zif/YNOtSI'**IVB?/+9s(E5<*pB#iY>Qek0usN$[=Y_oV770&L"jPQH>q*Cnk.5KSh0ROnE<J%drp3tOR>_ACI'@l/41<m?-`o>+!dRsCg5P"_"%M(qi$'p2aZ"R,7ra&*Y/7W%43X:8\qqh!EP+)1ofQg?gU'PeYKthjfm0p,quMp%=d%#^0Y\uRgn,Xj8AfF*L(4.uml?1/d*Ck?LdBi2oKC>KV4d2*=tTZc=%IGo9Cg8*2g@1T=GY4,%TZTR1!l?cXG;(/`cFct5FlA#%@KRDUo]1QYES[X?YbRfs>>j]:"%A=FnH&%\"dYa+VOUc"?(m7EUjaiAqb!PhVO$A=KA_E`&#+6PFUAELJ4lf$C,C_GbZ/uW;_s-)%X=.-jR>Zi)&o&34@F]qeitQXW?L8Efb1r&M:`C6:lBWp5&N[R%Tqfm?Z/:ld<.F8.57/oZpndB^[o=CHY/7%D\].$B(2\p%XbkRU%_p).\>ZQbdaKiSoU8dOgX7/'`<^L61&]8S'iU#H*R;>[EUHpW5isuV)p^"\UCK>Na,+MsV<@K-8?ICq\4OJ!,G`TS6!*?+NJiZ).%H3luE[3>3X!?*hi*)'TN@ErN>ln]W)Smi][<bc@j-6&YsX$/,e(0ma+X-DI!+e&!a-5-HjPF:AN0F4\,.i@SIE:E\&Q3Y`1Dg*[S%]W8Q&iQ>2,2oDbR,I;?XQ"^rC$>B<[nlK.c_I+&UH^t]hm?;Q[7:UktfRCUQRjgPDG=?gO\49hlqX\)^TpQbV:6PM8J;SiUSR#$o%LUf]/5VUP8J#amns61kQo/A*LKcPa]p"k3E6pHaSA5;540HCg+)eSVTZI8phjM;&!Mj.Kl4O6I`I9Ef\.o48$<H1TBW^'tC!TYIu%2,X<NJOU@!1eM;'/0G.IW$IRNd?N4DFWN]aYShRPjnpr8`SU3s%^TEh;cHeack'mak)'`,n^S_"YC(#LoGD?i?$9%`oT#+WN5'tM%)]@7-@#'7d=Q.>r&-s:AaLA'#ch.D9XuY/)5[;Yk5X#DdR*7BSNESuZ_gq';!2Gt?YkI2nDNK9l%h]E>;WD6sN$V@3DI\[!p.;pN%J.1pu[PJ>XERr=oP78Y<[<W5-[&K,(*+%MJ%]a\XFrpu'/t7+@SU;3C+SL3ioLj]H7/Fm83mg>HJ;c-Pc&f"O3'nZ(!nQc^&g.CR%aE.puU>WADT[AR)]LNeB/&:3KB-JoopB;i:8TC5A/;Qq"b^Q\P.Km@"(?sa"feXI_42;i;pUCi!hZT_l"ArP/"ChaY3bY>q!6Wf:%enR(0ga44%(#hC:AmCPC8e,$hbDLXt!&DDP"HEb@!AfC*=^-,H^?@T\'LL,<&:5V!0C5%N0qDK4_H[0e3mg4&^CPm7IlD35)rNP]%K!mfG;E#Q"9+V5hE=2chE^>XGA`FL;LUj7h0-&8'<J(";kk1$%b04(_.@^J7JM>T4E6>QsminSjGtt4A6fFJ==cQuO=:np^?UO/g%6j[-:V(e$3C?[KLM-s+(h$QOfr3\Js"-<ZKmTL.++$5'i3$k.0n3\TTJB?%ZhsQ-Rd=f<k^P7O`ZL`YioWG:g:*U)O.mQC](dc["%V`4^5Lm&_uJi+<fd4gZ<=h1@(cW-)5&?j&EoaibZ6K+CF8m=0iT5Db%1rudB)@6FhJE77BNDR'Pcf#Z/TLK9FQjRB=8DOX*B&!uI%OAOMKd$kGj,<'Gb4f>s5/bGIo"qbk%Pdo0S\/'?c+WuOO'gHbU@.]4Pd#`ki<\<U'K2,3RSq^hdZqUt9N=[up_*`!o*/$=JL^<_d%\M`LZWH+!-4&DDfA$FlQ-+5TYMt$@fE:F3E%1ncbG"XugGms-DnI+$m]nDkQGVG*2CP_]F(.C3LEF[/Y9CEa#E2Mqr:1@oSK<Vi)%E,,e.CDiTF!_3A#*JV?`rQo?4idr\/@<LMY9>dcjF`<QNpRWWHD/F.Xmsd=,p3PGlNtK_o?>!#c$/S)9`=\.E`!Q/Sh>h8$^mqW-%>R#8:F-+R,d.`&OTku>3:2o@tfH.R%J34)$Y(1dVm,=6DBf8`5#H!Ujr.Ym_JSBr6kGAN,#[rZ;\q\&?L&OLhjGaJW0=]'\:3+jJ%6#2G;7HC<JVh7&BYuD<)9h8hQl@fu3n*GCmf;NA#+92rVJq'OEW#kh8$-58J%Y15Ob!?]3K/]'o1b*alJHifM'-Ye*"J:3K$<eD/%)VPj\2g44(GK:XH!Zg!]p'>-3;O\*m,/'#2ZR*EMl&$J9*Mq>,g!0co>n*/%.?t6oe^.s)'[`fnHCa@MpEW`K*=]u@7$n!d@8I5W%)W"unUka?^GhE5M@"lhc.YpPd2;ffJ9PWGg]mkoIKgn4EGKpW%1kipt7&uXdQNI696<;c]HjJ-=4R'aSi-)>_:Ht4c*LH$'K_;hh%_dr>[*;#F@-J6dY$3M@=(3Ih&<JS\9LpL<d?qRpn^ipn+$Depn$;QEY[Prb+VmlHXjP=COn_K6dF$LbG)U%btZf9^FY_%Ct&>Q4s%mMK,'8>(/3+S?nU68\2?c$`G[W*(:nU]GJ+?LI1rj&H8bVsj9Q:gb_!4%#G[+>`A/>^M'5Y#<M"kmS01E+2X9lKE\!PVMn26Q'B'%)5C$bPjOIP7[hBUhrFJ4#,m%7Uj'Kb8V+lC^]<W8i&JISJJ?fg6FS*MoM?\(M55YU7DOS%,X1<=QjL_*:*GR9JR'H]0"oX4!_'_/%1nZ"OPT/s7B%Z4TG7;(rLhN?!8d!/NTR8U.$6V1G%)`8T*NK!%E_6J!;BW`irLml@_s#,E6an>;^g0-ZPW?tdh8*DaRDHg13Z4.;%i!frBAq<D+_'fo;dpRi\qVi(B(?u#jISGGrR6KeA\L.b+7N4V[X1X</OSM,S>Fg]gGalb<<uZs&D6o]of@DVnmI4;qf[b*7SkUmm%^kO:r$l'?m26Nu^i;[op"XhdD4Tu3hcBF@paCOZ?CmaQCd]fJ)H]s-oZPoDRAj20\YeGsk/sg`);<8L"!<Z2U=s#U!!_tU8e*!l/%>[^CP+Q*5?N->Fn("7i7E((R4F3$oZ/sE5Q90m2.J-8_rlR3t\MH<[8SOFN>]GgK<.>3i!a^jVh,m5qaEm\To0-L03"QF/_J27oN%+q?7+f0]Hl@`6'(jMGCn_J4Vs43+3.Je\VDBp^=lWL)Z6&VEKfPW9Do>EBd<M[Bu:1^S`lhP@'$g1D$_l):$tKi$0<PBe@.&BR,A%k>@:6VcGl=Ja$p$">.b*,L&$@?`jn?G!5@ClYM`-p!k)"o)*CL8G5Ui>dur]%9B1OaaH4e.#(dbBV^ej21m/@F'+FGp&Z*=GL$lM%m>H1gUbOc0!4lU[`PKLtp=63a=j.\7X-$^m5U[1qp_&ODCIP%D":m<,ZS:,EY_"Q,8%i.Lb)gq2RL3j2clqK\6CQW7&132.+O6!B%%QP5F[g3U%GD]S&i(XoNU2f8pna:t493M?=Opj]JQQ9B^4>k"MRH$g"/h7(AKUKY/,*5=tf7;>fR+H"lOVpOfkCFlH-d!%"+^D[T%A]6LZ()I\j.jQrT(t#>7\h^gQSb_gg*>)Q7<@k?SS\2cEiDiPWeL6"@#4PWh+\69D?^$CM`=Pi4#l-8qK+^MOOk4ZkpY]))ji(/!%M\K2!o&RS!A^,K%WCYW<RMoQ;MF>kd*0nSRR24R!M)OjF$kS]X$J"V8WQp*'`fV0MqRm)cp;_+RLkIToHfTNQ*@\gtM=h1K(42*K%Amcc\Sjm%b)pm7L4LYbU$\sX\F#.I)n042nk]q>50O:l[71WV.C_BV4]hf$&0@L/2^o$i>b;7)!b`oF^DfNfbqo;kN_3OH35\CM%%-gG_f,4,Wj3%B&^[65Wk$W\<8+L<3_'J^0U6cS7,>R`;8m`c?Q#/@J3Cf+gQ+gCJ;iaH<ZH_"6l8nPBE*"#XsjFbnO"Qp(c!_@9>%>+mWF(Lg<e^!5>0-2,RgL>*%</.)Sm7!q1s9a_:j>Y'gmT]N4QL'!09VOe?3P89HN#1@;T/3kMu'-e'#s)K-B2TFUP,BPEniG782%dKm09AqV9Ep$N0<j$uO;=jRTkb2r@I/C-o^c)eki*H:%6*nk5&.(QH"q0.urm[_LTlEfu?d5URc>=OL4&tE,6\YM:h(O?V@H^U8A%BQ'`],R5=J<X/uLTm'<me@l!b\mWH&,p[6D;)f$EVhEU0X1Vu:EC<)-2)Y+HXG0[ZL(qHV/=0[HAJPf_6:`t):4a:=DBr=BOrRO?%IGm>B#R-(>_0]P5#g$0VjS/l.%_U-tlqYohTO]i0'7h&fR5^Yu1,s^[TFC#kTF=4gWSnd>8JR.9F<0X.\l290_\$SnM&)\7.lIlX%V:Q:7<n2:#(a>[*R*?@>a/<MmT22"n-I)TLea+FZ;2OL^V`2eL8u`3AK8]5);M\g,%rIK#4qrEA9>?3!(+:/"%K5F75coX0=@_d6%[4dT:!LUjjcq(Y[ZNf)/Y:3PWI=T;q/Qd!]j)bP[U_Q8()X*-=`JSEaKFek0(2d5r3Zgbke%_,&1R@:7F65>/8D:2UFF(9C0Y%5#%,/.hRU/35W0A)G>OA&/0'`$HVg0>sgfT@9?<>U##bF*kr4X.Gc`';&U*5mgB[F`6hR1]:*":8Nb7n%rMor?Gb8,F6d.(p-"5"3=D%11I#HV9&4harHsfr]W=X4\h/S'?H_7[](5P$AaXNUcFsoT%L[g[Ap1U#LoJO8M<XUs-s/Npn<g\1P=ZopTPWoYXl$"c(th1Pm^GB%DR';_'(nf[$hgS#kn+IUN41=>@nbp5jPpK#c'3d,gjCU7W0>siPs8tI4_uIF)SUd_/[M.h,L!M=#B4,Z=n%U@rJ+^B)+hunW$'?t%\i/,](9k1(_%)S-n:o#D8N$p2$ADNNaNi77\C>pT63WE_@N=1gBK@q*dm*Vd)TDfXH=tkq8BJtni]Dff.lblNpEm`'c5"mIR&]]m%febWFEL91+[U_71:&94,^Ir`mRI+q?^pVApG1]p*pV5<'2d9%>9.8rkYg"2oF"/@MNM277dlFJoCao?"f<G0l/5jb;Kc052)(nhP%4?`./I-<9N_.*M%Q<=56@EsYq[\a&K)g@VeJ.Ge>)*faIENY`>cFQ5;*n&;rf;QN>-HCJS>c_bWYS*f66[=k'8&Y0_bM6Nqn\P6n%*rW711^0EhP'[:_ZN41'hF?#uj#jg\&M_h*:U>[o4BktJ^u,#b*Vcu&7egQGHK!_b^[\D7FW;sPV!S&P'pGrinl^8uQQ>)'2rWVC%(b[QfC(&KGgHP'<Q9.#O#:>>Z.EsD[a_Z6I=+t^_#I>q;Q]oa$m59R-K8;Be2/u9G(rk%+L/0h'O[3<JC*IJ%A>VX-)t(I.YqHsA%7UYX<=C(SJTn;&G6)csnEnIB^"=J4\8'q6m*,LV6)hALOU+N&J2F<.:m]T<7E)q9n3TFKZ2^#CH`fCTPq<0NC!B=4_)f<\heVa8H%LKo(?2+&`(le3VoM1gcJ!hg*XE8V3a][A[K7@:=rH.C*q1nGjjg:b$*cr\7,$Gs6uJr!'gi[Z,`N0:C\=c.sLbP4q/*:bQrIoYm=%C.]n9'&\T^OOmS7?^pF1;5NhS]V]_8&7PlEe0@RHWs0Cu?@'^Cs.[:0O.$5YDs\-da=j2`B#Ge>DA'@[!IlL<7YC"0Ij4W63g`G8%FdAIO_&ok8;WmSjI!7b5i30KRK*hNRB8#'lnE2mncQiEWb;#kRi,<V#Iq@OA.#IaB6KpqFg]`P5)2?pf&Yi3/7onaa3mZgi^B8>t%a_PQR6!iqj!+s/K.hH^c!7AbU#S,`D5,R['Z2P^(5G(!]m3due)*G)Z&`@5T>g(=<dda6]Tqp)kG^!0oN-Y82q+1.HYVMVSZsjp5%650QVHFc"Jk(V+.!=-t1Bh9?XKhr2RI#eP5g?MX`#dB>IP3\5g)2R<dog(]GAkEV3\W4DHHl9./L,ORB1f,[,+@(#O)>>Wsml)J>%Z/uKUB*E)?:r<lU/0IE;9JG6EntP=XN$f[=Jp36XO("j<BiVON034S%A7jal4YQeCr\-S[-$4$m2)H(*TEDaST(:TcZpe^M+u=VP%l6C'^H)PZe$RN.W'g3?B\2OS7C/u\S%BhDgNit\C]3N`+Yf`/mL\b9i=:]sLa;'hD%$jI!)FW'F#SFC9_a+*0O!YR#cQU1pL!qs6%">nVmRK=)PKRFh1b?h$pa]BDeLLce.nD(O,2V>l5Z&?+SH4:g]XFC:f;at`,T'Kfn)&"XolPJe[NS9T:S/1gd%Q8pYohU*Tb2[0Q%\qZ8@Q9WZ3Hu*'(0\F67V]KQ_$(+Ic\ko@S<>#(0=Y#>07UKQM*),r#5j)Z:.)*Ps/t<T$gChV<Ub.lVV#"POQaeR)I.!mt:CB&a%MhLRcS2g^'lBr<Io1C-EKeZ%W'kX!K_Af`4BDJ,'Nke>f,qgq]jtH5j;o$2.X\g5J``@O$H/(7RiMfT@fO3qZ$DVZ@fRhr3./au"%l]rDsa);0aX5u^rHm8],9E7TmeZ$oAJbRZT`^TSm)*[>/H!<;b3WO:O)Lbcj!'E.)[?ZUj)n_&uY@7cpaM@=>\`Ldq1H2DOT`s'M%`&^KeP[M.\<EX*(5qM4:s,GE..2#/#q5!T^P?6PFlD<nhr$_UlVr&J;pb3lhNLi+7eQGa&r11Ri!sLaB?O[:&M3\9e##\+sPk94>%B]aO@4'l="TrY2diL,>Y<G9R<orS4h!M7mXCG5cW@@tc:8'o*e<*C0X.5:(QNO]4X.,i8P#mq\2Of<p$.QjqXr]/b<494DT,A?Yu%&_LlL1I*MBau,j/1;BhtP#uK/'FkGFWMe2C')3<MP3+KJBP3e6/Ai6!l^AW)ec_YI2]%X6m)PL-k%%)YhmdnZIr1$sG<ji5:8j!r%8?EZ=+_:=Rj:96C(2<mC9.Qt;@WhY#12D_4$\FYW,6TV<%sAH;Gt6bX?Y;XKCjM#gqpVSg3!_\rb@^MI-lG^M6kL83TaA"AW\*V#%"0+.4,NolJVjAJD+jC>1-3rM3=8+fn;CRn8/[<4d11g\scltNC<f^s/Es\\=O_e-F#]!d8/6\SYhi>e;0@O4E^HD`29_eb!D!P>s%MB5c?>+&@>f]N>h>c$`Pm#WYSG[h=)%&W!)#i6_\"q%L]BGM-V.]slgBsq)kT6p-7cbm`bOG++)C7YE*Xga1Ii@$HGY924F<21)7%OE.H);bt:d]Wc^tWg8H=:^MgM@Iom#LiZM&]G?&l]H\gT4Wq-Zkc8GD"c-NS/OLW@6kGpo=:u&)F>,Xh)aJ&l"kmt9%qQD@-IXDI%'5E!M74U.IlBG.B#;R"/!&L%NTh<X"VhnF1E_.GF+rVZZAs+_qOQDaLLZ&mKL]XjL*#3<1^<Y"1):(LmHVcf=$`[,+7/<9^7<]35%lDoK;>/_-@!N@.V4^O`!dHPPL`^52gVmX"b;I;8j9Z.d]ZNV%c%N[R@$>c[+=dacNAA"8$d(/8rV;D5$Sbp?\^[J0SQ=#l&ZUPoc%"26$iR%cbG+V,<X7ffU#ag5_OP?p+&4i$@I#@<c'"H[qV!2:>?+I7[,a>)`s(cA]$NZT[0'Y.2b5c=q?.e2rk_+2cFSn;3pOLI.t%;sb0od?4WaYXtQ=TN>+5_\uFVeU;O!/O<1D<F68K!ql\W\P"Vb&2ca'i*oiSQ$2q&$N.SC4LBYB"tC%[>XZ,W0Q/J.d&5iqd>Eh6%%@'sJ.!Q"D+5ZqJMsBlgQj1EDS;"_:c_6diH#r90P_\r5OdC>opnj<O=u$\[X:mNoDXqcFph1tC!P+D>CN#!C7kH0m$!.eR"?#u0%S6>uH'X.1,Zn9Y8]6O]"FW9u.6;FD<OGir(+\h91n2RENS-SjD#F2>i3(KK&Pe^/:0a?g0bm'nkcpIhL8`sr.aaqc7$HXWO;m%K"%Rc78J?7Y9^>Th!LMUMNWnBZ,^,j[gX@N?lqBN$sdh4)bfD8$eOM3W8Ha+>A/.MskVUiu$-5SnCmX$mJ$R0mNPn9gYUhVd'q"QZNC%!Mg'h.=u-8!06=gl`n'NW`9D)+agT;LM-]9#IZ5E'.Kle.jRFfMaB&eHQ_([ggs*#b\@7B;iVbnN+tY1r07M"@4'rXKVIsZ91Z7A%e-BR0bfF1OJLqLB[STI[6:D67B#7AXOu3l;W:*76,2&Z7U(6@FAk,>Fni<GnA)if/7B`CLfR9&%kGq9R;Z<R3]_lNGUhSHT[O_V$%@0c13Mk(VgS+/IO\7j;11`5fC0TW6:?!iIiWY/-+4@%Oog=ns`$^h\!#Qb!I4#a7%!'-V3Ylp:jNl.nlJ,i.P3=t"@c\5@%6k+LS%SrarB`XWqqCo88<d6$%hP?&(RS#hAP:b56%4Th&3S%WV2<S#ZNMVjI3aX3q&VkI/SBST5fANKlET<%Jj#9\JJL!8MNVS!-iqnq2l%Q)Fg&eEmL&B(3T$8VmqC:%P'RdZkCf66[g5_ne`("OF@<cC/G5XDi`]dDYe?X;?Vcf=lbBe)3NbLQ3QslAEQKTq?oS`2uQfkTO-n%h"Vj]]eHHBFkHiIPAca>Pab%Y)2Ji]2pVR-_,,"cY6MD1UF8"bZf+p8[M;Vho?`n-XZ#?qWmnBU6]G.T2TgMWl7ge)YWfeD5Z9g'%G*Gh"4&`D?m51I=[2NT"<RIe32_u\S%]2,3BeCRr,-Lu)*C+H;W+h'O$f9g1#mJ^nTOQ6C%Bk,ob-2r`,.TVkSY8EskdWHR2+k[3%6JbkQ?D.i3,@R?D'L\!YFBU.3Y86M<_kX91'Xc-]`b;<4:-h@pn2lUp'@Pg2$?e!^ot<,6J.HXHk\m%Vf&@R06"GAOW0%Hd;dBaM%H`OH1V5cqEUW[[MoOXt(#'VT\$a-UP7lKN<Hl9=\"sDY41$Y@,r9_4nMReDtJ&J6:K*J3%5UU4::Q\F.]LpZb9rs/q#X9))*@c6k%'"G`7W\D=DX'FYGl4tu@A170qa1,c6lqk<IG;N)2,GZ1Pg-A$u'#mZW%o-l)%-*>OiPX+G-LqNjPl%/-M.U7MaU`[)%'aWA8K!`6%F5uQ*i>*4,?i%4!E6h&Y`uKq:9n;N!@jlb6,)u:b!$Q,\ER5Sk"XoVg#St$F_#OUP(&stU17nO]ZWRYtRR'uo03UP1M[F,XEJH&r%WPq+/Po*R?!_a,].^!fFON,0TWpJ!fmgrFdP/cE6\Of%[,06emlhjEA$;e;U&Vsg;Fls8P6kHLjf8h=J1,pfHc/Fb(Yc+ch5pAr0%O9>e6ZF#/%]M>\el2oZaAOIb7d';r_J4C'0AH_?&PE$';\V(&7=^_:6W@,2\=S#m*@A'oB*Q[(P\d(NPp`-<V1.8F8]gPm0q^\HN%FrFi&(S(c0j]s:g#N/d&n`0fVO=Npf;fX8,e%&)D7OA@rWGJTOJcg_F()Y8u<H$C:m:_LK6eMK79-'Vi)nR*0Ze>MDl$)O<<dc*F%\Jb+CouXFuIqclQ5\nr,"fBYo8in4)KVh)PJC53cc$Rb[G-Yl&-lQa?s$HJ,Ou>L->)^+Ld)7YfRsA,/T:T&C&X_sb@`YOVp03KZ%AmK<0Z7L[caq(_o!8UbG8.i4$0tFC[<cglJ]al6d5bNBa_fOK];]#_6cGSobPE/&2A-B\-4&cl$bhBR_A@WV"X+^Vj]5L(Fb82kD%I_ab`h9Hf]i7/>-M&CV?NIY#W#N4GQW0Q-2VCsS'NNWh@aWRBQa0pdkSb@Bg<<3>K?iX?\&8(&RnC$tiK2'`bTE/R5;9a6P.%;+W%XUJuA:?S&PBn2A)poGG[ZFGP(e<EL'CO-Z8J=Vu3PgeFRK3F!2/1>3:G#k4Y6!a$S19t<X7R7L)i\\qZ46&=H?8='0;^?U,.b%5*%WB4b_d8#>E)("Q!E0Qu'IL9IdG7Uq;/U=%*\g6I`,YcXh.T:lNAW8$VN'hRnRa?>T%2flpHs/AnW0`,pnA8gIDV<"_BFS'3@'c[T%WW#]C-C$*C-d6!G>Hk>7RReC"eK_j8H9GBX[!u+,0c75^g$JbN"uF.Gk&jUA'\M^RJW+]q&iHaNNFiPufBY"G"/j3tZoFksBf^+,%-3kY^qpN^dI*<I!01Y"i.Ag'#,nY@SCIYGWS)aMAS`T"f;i("k\iZ`;nXu3[BhZk,O&/Cr7L^VCRg9gAEa90Dd&#Jk<tZ/+@SqMd%+dHjrEIr5o>?\1u22L#4Bl99K$V,:\hNYc6a#9k-P*EFZP&8dO<s.IU@W_d,,d#doTsb:8^?*&6"WW'H40WWPK)fUM4,=0!RA^Bh%Elq:BC0RHRBI"kp$gN=dngdcWfbm&b$A'TablKEneQY7=LRt!2]3]W[&Rt"5/64iXbUSNG#Fg="Nt/rHY$)fP`7G6"]H@be4ff7&%1/QfmL,UpK/V"C.NeO:`jQ>sFYV1K=eno>*Ib26=hO+V53Rgtk!-&`&H\UtOf`)9Jk$!,\1K:Qa8fF6]ZCuo;^@_7EZPK3SC?I,`%-4%9<:^d?@^:e<>"A0dj9;<U"<S7a6C:+X:R!@4EeX=cS#Z5=6Y1E,0_@2-67bSU>&[gmU!3q"G5(u(@'l/mPDD4PD=/Ves-AC!q%r!f#aD_cK)a?;?)S[7`U[(+'ZiYmJ'0nMi\j]0&`N<"^*;A!QU--HK,>D(LB!1-Wp#G/Fh#5bEtXMLpQ2D5VPeJF#>;&mL.UKN]F%;:i3$'@0:X"L8YSD7Ke5h-Q`]V*PgTTF_\ZPQ.#V?DBt2oZ`GY>O?]l(92?Y:SjW(,1?[#BKaRhE!Y3B<l]nWJpF7<qmBJ*]2g^6%lc]e*WoC.;lBqglq]Y3d!L\I=blEF9$NHUK3n<ZYNWb.k1SL7/)PsFFV<+OO(=:50k3jkQj$,BnS+B,K6S!)C<.Nqu.4=MC<V2sn%/b]X,`P-+Vm@]0uS(3<(+/L`cb).Rgii@)<2-&:^P1")[@Qb,AGDQX'-JYU[_Qh9r;'EG*&HHgC)EfFQ'pY+,k&XN)Ou3N>`Ya'q%,ZqP\e@X"OQ$6e`Z804]L6SdK"bFPi/[$Beql85\KL^Y<ggIaBot@3fRf.mc^1a_#8-@_gp1COmk0WLocRmOG%:[+ko^j&Fm7N2J%b'7]\fqAVh9(c@j,HYa4P/)&>dqfZiC?Wp1<V`"H7",7r:%#aJ"><b5*9oR`T0pW"<^_,0m;B-DjQ,6=oUQ^)/EW4A/G<AJ=-[CR%@+C`W\[,!AYbFldVklUY/co$DW2-]nSA=&:V_leI>7g<Zp6O4_nq\8=-WW9=-0&_e!\Fid=N<:_Ii;CDN^qM"RQ=I3JlN0`AXMro%(c,A9C[DR&\sdYnknFk3=g*jP-o.E"YTnUQ)>p$a+3Q,gmD8HmX#jJo.1M@\TN&%_M.;XS;;dMBh6RFEODh8;?B/KNQ2S$VgP<5n%\;k%(06]T^<Le4A3OV4,VXA-*$E&*RBgq["/)FJ2/(Z%cLfb[?>LjMXG"tCJi?1sNXahDQN,DH<e5ch&#X5^Q=l*g?7Fe#^Kq@46%l;XV]Z)b>$\Jg>d5=%]p<J.RA&#Yf=ma-6&Pu^:Lc[bRsimkO>$X7259Q>/W*(!-_e>lk2X1=-hi3Xl<;+*f?GFH.05SWG*Pn%(m%-nMR=$/H_hVW8L?_hc$eK`dlLdao>&a8QhCi)Hg:'31Bhd3u!7d7;B8K3G!I"^E:7D2eOi(PAAiR<6tOHGYZpZ^NksIaC'K2+@p=%)AYl*G3#E[TFr2o/;c[G\V"JWh4]rsH2d<=-"guI-i._N013l/Me6pgm'ocLSFU!>`?cIW"tG1SU#Q)GYBnns(l.@Ea]g3G@8fHJ%rup,nW,/uQJcr*@H58WiFF@+[TH1d_"!SorG8e=L67R;Z]=pjDa[.MckQ-9:";WgsQ`@CDQ_QU[lpQa76.\A9FGUW6X@,>*Y@D!l%?m\E6@eG.JM&_Ngr<EbN``:2)Sj2^-$q4)Ac_2ZlnN;b2Ze;LY+,-`=bB]U_)%8o<",!qS\V%CoWi*]DfYi^c;:f0YSh3AN/N.=5%`J@rU<>6)EYS.GF^_JltfA`LXru8LqX$`qXV&eNrnTQ4>h@/G"W%X8iEHC'6]p8A(_)c39W@I@Yap/#oe:uoo:0Mf^(4\T;JYNNT%i3H5I'W#_QY=,M8e!OGYC479q7p0fglF*!bgLC94RE7g],-YTM%P$6^.J*Q%ITLUEJAH$,D/O?aGVa(&D(X\ug%A0WdHVu,(-rZg%bY1X_#(i$J6#ZRh/686UBB^Y:>*(B!d!]S3Aq+IdKpGN9Z..!=V(#ct3I='a/WF-!IRI>D5L!UZ'7CTteYj'R2,do/BT,;SNkdPb%Dip3(?O*a5caIQUd3t`0[qG20C;?q&6-F*F8.G;%9Hp*5A4Ep*$"c#(\J"$llK%^E@RD!&b9cX7<gJY8[aZ4rQ's\>GFHGbX4R,(%3>misdXi&W)$i.S&?S<2$&5lKi+C939m]tkLJ6F3"W<AZcV]lc@$WrmI05FN>q$fZXKmH-B+C"R<Z/!JDPO`/e0RBK?SuO@C9<M&%]@%9ZZb4ken<&;lJBc&J>JoV/VPHMM<nX8e5V48`$;Tp@<OV9qFhcDJDkX2E%3T;;hjSDU"W=Hd@_7721Xg*K3SNT]/Q3^f(Y5_H%qR,Be$VR!tB`XX/37gop]?fFQ.>`gdL[eF6PMmaB4Ar(iS'4!lCt`&H=0JWDGlXgDBg;_mAFR["\,p<=4>FfgT`]FhonFmLS!hu\%8dU\eZk<PUo@)M"Lo$&"R],%5@#]8A;Q=k3@^V\efRT_a\GSE+WVSeXEfA_,;lb3mTWfLPUdMQM,211<='64^pHKik_N2R2:OoDV%NZ&#[a9ZkcTJ@d0?@Zp,;8#-,d3UlM.AV\P!:3.\X:>c7aCDH2GW)WFSMu5`CmnY7,"i2cme$4-Oj8W$AGalRYS@M7d;,.ko;.4K%O,^WGJQ1Yjh0a-8X!gUkRLqjh/$$@cIUPLDYj7pD\kT/'o)R:+SE]KdWJTGeWX(YT"mL7)hakMgQ&f0D9<PHcf:6kW[='b36J[Ei%^lZ)YXA-C>N$u(fnq%?pYZ(i08-=DS`^]BRE(/k&O];m^`K]"Ai*W;jL?ElrYsAHrWbT/*IP;;-0J/2^JjNEQ7stpq/!5qGTF42#%fhu?QE@"g9h+3uRGNX/35efjkVYb<XEn!m(_cSCPWpO7X/YuR&l1A'ad&[2$%=GERInE9i(S7o[*-1a$7M')PChkkV!<ll\5X4ZP%JXLD=[]>Z^LJ1E]FT!c5#AUVQO<^&^)p>%?s%#SId=Z'M$sFGok-,!u0@]$IE`luU38D.S%ME1OFM@Y;=G"XbfC]Q(b:(^uaZg:E%Jtn<Xk>I[h!0ch.F`5cTcoeE`WcWA%I;qM[mSohHZkY"$B?&6l(*ageYbtV?PL1]E5sS[hP`!*@++-]Z<m1S3s4>gD%4Mn5>"'\#%1(^.n\];/@l8HLLZY"lp?`F`a['Br#b(beu$=X%AJ#icd-rJNEX0@-bm<&u/4o.!%4^er[A0usIq_VnC;.SAp`#27Em:*8$@]Mr+%LJnMG_>4/3F_(OS`.j&B,Wm]/'U[QkS*o1UA&T@a%iI##Boc9u;<;;O<8AIkbD>.G1H6shafo.A4#BLXppeFDd9NqLfq]t^(5gCX%G&8o\C^Ge(@4B:eX>h>e+Ymc:<5u>]nC8[e#*&a@VDSrpLs(H%8JH0"=HPB$.*CdfpCj;9fm@33C)A7Q'&eE\'DEs2U=3UHGoDnb%+93j?DM*qAiM5u/#UJ!4ZoX5EJX681hqnE"UWGF'nZd(:D6P<:r@d1c-RTHcKS\tZQl`C7gm\B(,=%4YhXpK;_"%(@>3Q"WV>n`*%rnk_^repB#(egjD`E<k@%^abCI;KngheA9YD-)69>7(N"d*-6Q)ZEO#,=5Z'1q'+,!u4rq3AFp]o$UuVR5]_*h;jL%`B?KCASY6J%%B?>:>-:bVWDm0Ye^?MPf`YLUCr>GVco8=leJ?="X7km#]<K_u-k$o/NC0VHT`Kr4cDpDu!tGEEH^?*>6pkWWJ5&jre'P?Repp)/%:faE?5Ts;3CU!D\6M=o$lhLR8CaI?;_#k#H".0u!2ki"Ueqe<2+aV)85\<CBP(in#Oj*/+X%rX.8;>"@<6Kt["=asDh-,MBS,sPB%,((A6h4N$Z3VFj/>oO2OkZr8="\Y`*`Q)Z^F29VHKs;eYK'#Q'R9Vg[Gi4(>Dk\UNc_AVC;^c`N*DG*7j'ZnuI!(K8[94$(6cN&@%UN$_MlJh`I?p5^^*L7f"R"7`gL*R=1idIJJ)?NNE0W<WtrKhJP5ZgFGi=p67LY=ff,+P=9>j]L:P722,;^86]Bt"b/44QlXaVG.j%le$LnoVA1t>5=/e6SPu!Wl)(<Yi=2-+>^=N6<.oN%!>@O2HajK`P+o6j$s,dB`pIUE[(c`%gr@c3C^E9$O'@:Sf0cmnZ5sJE&LL_%':J?..@Cp=;V&LubZ-]k""*>rNOi\9)!O\/mT_UVC'<pf8#[qKnf4E)j(,MGaM*O58"f^&-\Hu"+f9#Fd09Z_%[1\Dkn8*B,qB.>%fah?bhFnJ7!B((6gldWM_BSX:d*Ep:Xh'2uf"'s)$[J5#2M-\*9S#+bENik[j$tI&(ah7+2_Ld5[]n2RBGO@Pe+Q80AlF&i>5Yt>%]kTf_L4EqE)M"46O.k3/\'g\hh6CE7MXJA0Am%Jro*b`5Z#E3@H.ET[JH6QL&-sG6ko0,!VhVcl,sAVZH"/'U2eprc/V8ZG-li;`%V=GIX%'(O:5uVpAMgS>.MUlVa';fFN)6h)l>Gq/@;T@uu;$Nh_Blmgg15^gj3P*2Z43]h*U3OLh!`*7<beVCXg*^"s$D>nfILbBG%3s4e(ql+AL%lgCdli>BCH!%'d2=XsZVoXXOA-f+eb4%i[Z-)s/`Mc@S()Xpn,dN,3RG)5*'@r<I!*TdGo5m]PLaEf>D.F#Nf<p-W%#"[ZPI'emR`+=J)0iFnj"ha+pNp+tXWM`G=X')nIh<Y4p8[QN)PCt%_D8VIg.Bu3o6O7hC$j2/,7oo40[PnIeA%25Dpp$8aC_ko^%i@K(G>Jmp$#t=RIVYk9cit)W&S9%\h*Y9/*D`[sZ;!`3D6lTH6>Q';4OB+6k$';uI!,66m`(3p;MJSgJ9fco5*IZJlnT;k#.?Vq&%NUt.u5`Fe=A;jVtD*VaR#7*H!dfRI0%Y2oqC]_JSQM<Rj0"8KeEO6<7q<A5Z)B+X`W;^HK+C]9i.V*?t/(5:,X-t`dXPifPEsi7;%Zo8aFollW#$-<'AToQF&KhMk^0m^7?J&qLE;BeEs7cZd!I*.T!LZlk20oq&/?*hH\8AJ;HDfOY@!cs"NU$ZArCIYa.Xkq>Q`cGs6%!`K-G6ucDA6<T5\$6LVd.sVPMSnM)9!(WqL`^":0#dtQRiA=F6.3Y9S$W(VcNT0RK&.n*,E5is?WWCQI2%p/sQmF._6G5R[kqeXq%`5,'(S[Hn#"K#Y[/*54$7i@I[M6^<j"XA2;L?B2JTn$QWF`9;o]nP/(6&UQEC]G5pJ>Ch3-PQQ3$qQqs=G-s<Zr!8$a[CrAY2"',%S=\GjqSA;=//B,?V_fD/JN,e5YlJP'CuCUF,m7rU.k=5joP;!BanAYdA4.F'IGa>07#!O^:_CX!J2d_3l;]Zg>$ohFFY9E-;q6r_%r<1>P$)7&7]q'.@%L#Le^!H3sl8t:FaU/C&>KS<G/UYAF3N6$'9,-YKMDSH"+qU5a;efLI/6!6kjpb3M=U9TUkqr,n[=-BPpC./I%4nD]!bOR!.MPWC*ngt[.:'RN'+Y>UWOV_of:5(r,<Y_(c[:Qj'j9`n/>"\tnV(;ZO`<t#.I8NZn!@[Fi9X\**UIJ)&G4\nN"g<)d%ZYHD'Je^[^$JqpL-q'7X)9UlQHdcG0/Lg`-T%:PaLb>P2DSu^/R#uKfZW2&_pbMFeaP/Q7%0ac`n>bhMjnPK_)uIb[>s!B>@I4$u%P?rSfK<U#-r`)[GQ5!>WCro8(]/.P@2g![BH$hMuSs>]-NC3@I/-n",bPL`Ig:"b4]MB;C$URn^J%2Eq\A('-=mlq)*uM4UJM1`=%k^3gQ@"\t]CD7mP'c[_j>Quq+PKN;bF5S095bKL'3_S"3g,2,6(BB]*7Z!!#)JSH[h+[Kl\b=5N6>oRBSf'crBi#MQLl;=j7#Xjp%,>]=r':?;AeMnP4VI4E6#\C;[G,BcahGTZ,7tn<4g3M5@agk80"ra4IC@NA#k;Tdt.'%unW)?$c9WGZK/f-I@<E6r5XaL_IL_\S3%0s^^@mF\RV?36LS77j.+H82IFgIVLlk4[S\HYOtXR"=4-Ue@q1*&=".[W*!<_9k"-)l#"1mZ1#Cos,\+$!a"h<2u*7WftY>S9lTl%Bo7'!Ht8@S+D-F4`R.Qr-`.MU6K:(#S[R\`ShO#>)MJ./B'fR6Q&)E%p!b!>@@@*/:I9]OT8b.*m5+JP$+s@[eNf37XGqQU.DRh0%8#Q#9,AYf-o=Jb&WBG-PlHO:\:^^5FZ_[Ys&."(=#80G!70Z+m/fWNU+T&T`)2)"7XIgWddq$:EM!Z%]BBh?aBpdkl"EW3_&4"a?%6*P:OThS_JhkS]'h;BWP6"[0iT8^G9eTtoWfut+n`?BE"*l:13ZQTY\4IW]OPVt:OW*.lp#%r_*\](3a6ZRkbX?i9,>I^1';WA7Z%l>lLX3,^LrR-M'Oc0^bbq2iQMZ/$HK[t$Lkm7AsonuC9hiF!/Z[6tuT:hh:F3JqX9\u'9S+OcUC0Jn&-=es&JZk6hU<F)R)HZde7%c-g*`/6[ZJkgYMqZj)nG2$=;11=J,9KT*E,5WcZlMa"])s+F0c7KgcG=F_,>,D*5t)N.Yl+@r7;YuG@C/T&Ch<QCSH=5PjWKl,@2%Q:!3BZ,dUSTj2(jq[ppZ><@hjm3)G71j)I2W@_(N,^sjL""-d1mQ@p0RZolTS,#=^207^V_mohE*?,*ghKE(fRDf/\#'ej6-r"+'%M[6m])eju4n$S0EYU1a*3t;?9CS4j>E.4ni-G>9TBUEo]AT;FQ)\I+ElP)gW0(9*LF*/DKbY3qO>U8SBmI@'k&,Ap_/sSD"EEHA5%.L%Y8dFQKEDFEYWf\Q`HOj+VVl`J!IQbg[cLPQ#m]2QR6@P`=lF+UeJN35PAVTTl_0Vi;\<r$bA7#cZDI7^TAaPKHV)p'*3VVW>Z%fgcW5e5alp?r1N5n1lr)*Y<6921oUjnDPQf)"mX1qEeY5ARb&RWYPE;Q3#As'3=<2M%TTGqX'@pMbRWR:T*"\"9VurRJ1R`:d27b%4=b:bD:Wl#/+mZW!P&Ee;Lo`U*lkh1HBpSaR[Mn8'V9rg8';E)bG(RJ/=#'70sePFl=Hu6Lb<J/r9[HDA=l1h1hSeRif1?L:mDQq%4rPt4Q;J0p5s`hc+Dd[fRNU9uI<ZO/AkD`mV*8Lm^<VVuCUCnLg&e*3[\cG8.Z2;'0b(]qCP]Gq3\4RENd)s?kd2=b[W(gh6`?mf%[H3OXU(%*m4k"UPgB;1o?U2-3lq:a2pFI&BU"Pmk"().BKJpLIhRHAPP??S0L8T?5mlQJ]U7AnSC2Mj$X_AG]L!CSjCp\A8VuQl!%9uZmO$!Pe;=:JHB"D$cWAAqp`]f1LRZSh:iR+.j:-nVJ[9>tTVlrY5CH\-Z4O.]5UIC!(1QESMEcpsB=nqg6;eZ(*7]pH^%Bu*T#%MLI4KN.WE(,IOa,VP;2`h]\1tI@T6$9WKDm8PZULs1tTa;9e>h/j!X(XgRosfPO"i?k^dpa_Ku<M:3;G>:Y=DjNphmQBmd*4hF%b%cG,[>@u',6)P6n?1d"\TG+BAU$!+&I`H="M<NbuF9-FO@#Har!&a!NQ^!M'XBQMCt2%10GZF)ppSAE58P$cgQ<g1j5c`QHu(/Dm+%IrmHQj=)#bTX(G=/C)Gm!]_Yj=j!0L@"2ZZi!#>b/B?O90YD3LQL3>ac7U8jATVs[T(`.Bo>K<P-tImjL)>WZ7n@)^:V%**cj>Za%@@Kd3lE=A[K3]Oh-<%_geSC@=QF]NC@Ro=:2L/gm;qBACm.&.(<%s7>*?Nbu!&]:\@Zcb*L,!@Gc3p4q,h`m5TpV3jI-b%04eq=u%(6;Y%'^#WG@<9o[e2&+G(ROktp3-qh4WX%s$WU5WYi1RIO#48[n:mAb<;B"j\Y3,)6Q95knhicR$?S88+qJ@>0o[n_"55f:ZTFn@%>ofmmNG([l8(P3kd"[>rA`XA<$`j0JgH%[3$Q\X/f$b59Z(\Ta*+&4gOe2]-%%A-]N#s5@;Qs_na*n/r^S<j!F>WCG(u[qtnO3R(%OoSQW.77l@VrOu_\)!lOCZn.Okm1Ydpcr67O#Da#F%hcN=YiR&5do@MDe%[co-L('dl!gm98,U.Xd^nHHp;'E18qFHL-07gfWis9%CM_C[)WbS-"5#Xn,/uFeXWQ:JjI@W.a*'o@>;HEp5%5A#=\O\s';P!J.Y@@_kQJ+kTK+\^@4DrrQE/>k6hV1Lok_S61d&\h5@HSa%iX]-JDt5c=G\B*r2Q&THb-cLro63qFa7oYn-Z/g`V8rRNMP!8s\,WpZEb@.L.<b%8&j%5;Y]Zdn!743ZJDbr6F]2X?Xl^1&*emZA%T;,'o+h3j]];d[lmhM>\7!*OJ8eYEd%tqedHQ)eO`*NU9L.h";AmcZ&OIqr&e<u-9b"[3&"]c"abj(qr/IG7BVR2IhI4#:F\>$)_%'$I!l8Ns@a2.3^[A\@acW\T]WMO8\Uc)bK=[29g%R^1b:m8^(j/@dPFce;-C15S$PfOTQ'XRTS[-)(@Oajmid@OAK3EXIn,VC67i%_MI=T3OTgV6cdu)F3i@UTGQapZd`/qo"+WnC_[=&M-q`t9H"1n])<UD(U,if"@*1%\J[ORpBp5`Q<J$2!2M;'esu8?]EE>SQ4YAA%]l;8l[`h.@5SHjdrC$cu*kI&?`EgO%V;4J/H=,W$%be?i71Y#QY>Fo(%o9U/\7)06d_9@R6FB#n$9^\:*_$L*+Zk.u!7iBZF)'#0%diO6H=PV7HPZ@E)9-.KY7.X59W@\<BR<+p'1>8R<8Zgr#`)akAOpB'=aTH@HlS)4@cLAAaahsX'BA0`5@1Fr.dM#S*KjGcdI34\q%@V'PRP*fVeq(AGN5Np/![s-=M83]om4Ihmd69iSp"%7.6Y)'N6$S8MA!1@?Mdr4NQjV's?8YHE=dagt1#Xq0m2`ub44^n;L*_"*r%.hQe_/2$W/>^m;E>U,N8>s+37ai5+_dElSJ"q0%W]GI6A,KHB!R/i)VY+Wl(cEJh<''VGMXK83l93F]9@8#g&9F)O@+LY4\gnO-i%L(n3s0>U2l'8^ojOE!__.tqOi1+=>d@2'Y).kipr1"a>q;SmJ.,n&u;JT^[WG.QsImm?,ED3BO;0+N&["emL$Q56TSR'a\;YSqPl%3#V:hNO9TEK![#pK>Xd2nFam=/o3Cj4W<amq?g%jRECsOOgbidD$Nff#_`U.+Vebph*G!u)&phe:j^X4KUd4b5uAq]-`Z<j['?03%rKu7(VXQLj_Lb7T0FAtDOE!J:7s&!Vlus:.[ZT1u8!W2)BM[-D:7^'4WMgsQM@GnmV^KAbCXlrU$]#:#qDe@(+lpVIVi8=o\%%2g%;j2Wi?$cYULt&l&HA$!8O.+9JIB.0X&mL8?p!oI&5^_N]7i"l/g0TX70,T%'r5!i:=C9!5Z2ZZ](_D*Ii4ic;V91,#'Z<s<oBN@A%ph-_n2n*j`G.:O6l_qFQB\Y<oZPQo9JUB49b$h!2SiasQ%rRXR8Q)N3Nc/q[Z(i]^+`o#MI;AN@eMjN_2E.u5)eQVa,cd\\?)(YQ%[%:"q5r[3pB\(=76f=nK?6ed6^`I!V:TZCjRd\b-'A;f0<='4ClR.e:G]%/t.BFrTAmI-i4T`ubMDX#Lp2B9`8j0fq/JghiLm&u#%@/?Du6Z`J`Uho9fSJr;c@.-V]ZD*3N6GM60(bgs;ZiYf[k7LX\a6Pk]D50Hr>ETPZ`brrmG&3/$;V.&!"RL9"^Hs?._g)=24!Eq,%cZaQ/'lbfJ$]5`jA2q@)JQYn2<H'`.'fW,NXTbWJ#%`'CCLQ1Bn5YJA)@[<eNF3ttH*;igO$"5\dSA1il`g&jXUHgiPoQ#*6lR"g%\7o'^Hci$+W^fBR#(Op+0.9!'R*oA"UaXq$W+:.tH#Jk<=pr$/4G?ouW,ELZ2XKm5XPOQ%*'UcZJIH2mN+G8f9"hgoe7H%iX(`Da%d1Vk7KD%dpXkK8XP2=gl]n^b2]?N=6^I;%^[<3D)53N-@76/g&gLF/?Qo.AN,%I\S94mG9#p<o0>*72;(bWqKWduB'$=u)qNX`_Z%Y5Mc9#+82`C,"ikS]6Qu0=$4!SW)A)D$&F;MP)lR]a;d215ssg]7?fQoA_N)',;%VkLY.a_?(T+\d%m6gJJKCah.i1A7?bl->NrH%D/_J\:fVdm/;).ib@#[CZnt4K]ntAO/Krh;+!KYk%^=&%%^9A1_rtsb_\<M5>JufG97a[*aqCdjg4U;_XHH^b)_o20YIT!sHOui8%f%N$$"H;X`@$>^AY^p3%_&H+.;](@2SE`Y(V,cFkhF%g8)CL.r^gu%9BX6k)a;-QAgt')fWIZ%Eac>G\/W`G`G)"2hbo7dhM%-]2%bXP\ZQsoK8W((lgj>bG/,fc(Tp\X_ta]@&B(k%'rgGltqgGm!''b-qI71W<6amh'f%ZqtSAp1Dc5]26]GX.X/VHSTQ63AMVU!dfs%/7/D54[Z11Mq.f[4YJ$M08HcD8h3%N5&D+Z8mV]&Y;.8HNVs%6[:O`G]c'O$j%EgGZN_XcRhcoUgqZT>;^F3"*!Ns8fMHcD1Esu(%'_JuEL<AjF9,AQ7BR3=LA/'l,_3C,@Q)2r<MO8\];))3Ud(oiC?-qTJ\N0!kY>or#X*3<2H(`jkpnq`t<[MXNac\7Xj?.Oc.101M%ZaqhE=&56M_F;0F0S+d_S8GUdkGP\ZrH`*0<@aRB_\!NI3'YujbGOLe)5j,5(^%,.5GolaOb)kIfdc^$k.#0Ra?F57[)?Jl[DlC^%:%nI*ln.I(3<I=5erlHGM=eL"Y^H*#e:,Mq<FaWa5S@oSeKPV4@a$sb].S)Bof",i,TB-elrC0kToLW47l1dTm?P&2[bX>p#<h5U%!O_(P[510!`+\3rZG#ID,Nj8S42u:K8U-7K*DiDJ;$g31lol"!k5ZS?<f9p*aI\)3egRi1[f[YiXI^Hc%oQ6?D<feXMW*pg,u:@+%NW7kJR[I%9g*4pC*mS.RadOR)`0H_ie_\dO=-92IJV1QCFMg9QVS^]"^;hisk20V]<Q%eW=D[bmb&#9nO*6PohPAKid52KVHmI-j%f+uC8*t(\8'LE\'m3s$SeO99oC8#8U6"$&'hRZ3BI&7b_4U%+1Uo8A$Xb?gVVI&@'RL7V\;i=qh@O<pu.@n&Ml&:lJJ)fhH7<72+%_],c$cX1O/7:$t1E9%3<2WY%"$;4og^";\FN*GSScoC*SME9r1TSBZ:iWs",PT3dL`7O,mC]@@,$-d/$'=h66AuA6cXtGJ!2o%U]%`N!(A4bK8%fL.urW.bHV%N5aneOSXH>0\%P4Dn\Hh2rR@_mi7h)S@jbTY8s`^NIqa*ooZ3pQ\H%g@H,'A$oD__IK'">78M4p=q6I%8irBD,>53LFKHj_f,D]L]X0tlZ]L1c/Od-kVQ\ASQEp9iCs7eD?<djR"\=VfF(B(?9(QLt74ON>J,ge]U\1dm(=S>C2fc(LP-l9F%!ND?OjnGG=pXU`R+_lV^F+I@ZejP56_MA9k\0-N0:'4W'lAcug1$Pa-1r:ljlEA"^kVVf?kE""p%S9D^#0q6;[)EIHkOljjJOd;C%'*IaSIjreHn"\%qPS6L!+IVDfmqM6pSi*;GT<b%jW5B:U?*6^Z?JX>hKTtkN["D`8OB8a<SiLG>aJnG3[IRJSqTO1;4U7q]ihF/a%[5"taJ1mKboec[@Tq_-%T*IK?3&:tg<'ph*Qb:(3VX&O_(2/1hI*g%OI5+K(%'@;=0_Su&.G$$CJ<hVo%b;G5Q'4B(rFWNSlZJYa%M`b5mq%]t&okt4o4hQB#74nsa4WIq=&;.A99^=nL?rVolb''0Z6CE"&(&l$cl%rXXM7<hDbdeS;GOW@3]G?J2=_8\j#YF%][0A)N%+tL?XLLXe+s%,oNCh62fiBgr36M0:(j"ZQ-aM4$!H_s5)<lO^E'H&q:ZSa::oF;;ZY/W&X*f+Vmg%A$lEW`!["d^f<Xh#QhiJkXH%oH-.VjLI='&CIPJAmunG#n;WdAH^\_Q_dm?:]k8'ir7(+@iK%T'A?".X#Z-r)^,#.j0T$KA4:@:-&Y`gi>d0'PP-#HTO,C;%UcUQ%YnrBW`h=`SB,ucEqE'-o-L/"'fEqW=Aij*\lR==qDm6n]%0#2M&ABs7]*pU34*X%9*IaMZm9#IEF@(B9mb-P?U.\CpHi"C3lP"7`%Yp4Tc2Fni%j3[4RSR5mTSA>;X@UH5+.a>POKLNoD79\@(.a!.d'1iJ*h]Aee<nE'+cX^mWSB7>Pr2'=qV_Cb&Z>*HWQP^-#+!Ko9%-n8]Qrb?XX$MKY>JXBVr'r6HRIJZ80(=C\m6n9b2Q@Xj%YTu6-&$h4".r\F2U!CmkE_B4fJusPWkC&r'PHjqPQ"IPIX:,gk(n7X<%#`cW;Qt7mTUAMuWh_<(j_7<]]en^]>aA]tV5-Jk;fh,]YGKho&6Ret)?YeqYJsiO?[A]9Up/_e9m^:ni<e^c)+#s?iM4gde.kC?p%rn!#ITLjos<nFgR-4Om[eB/PaY#:o<%ugt(FW`.ZZdYDT&`j@Nl5t%nl=2rPG163,6Vssta:1ME8BAcQCX6[rMjb25g*Qtt*Pn@Y%_cdj\p)+=/S,l_QAq,O5ab#d+7MCltU*`3-1pI02.Um2?0[2S.<E@JGWcjpVSVABVmGr+s(d`p7hAXJ2f/823n=4]nA^f%?_hLmJ%m=u8/"(UK1;4K4rr*MEH#Cl=:YRs9A.BBNP4gH$h5%[4^,G;J`:XM>5Gj=]j(g;:X^H791%930l&P0W]Lb/<"1U<OQ^l6f"5;ZLY%\M3)Xedobp#DZ*@B%d4n?LWP5U=";U0`A=C#HG4loX2j2Y`NVZAQDN:&$Xu<CH]K(3j;\0_4Kp7<3kJA6EKOm52N=B$1qN/40UY7%/V4R:J@a>2JrkC77[IA0kc$`UI5?Q&@2m,:8V<GOJ<bHEWSh'Q*smq@%Y$._E9MYZ$Z4lIOKrb14L@4M-gc:K![t8l->nW+f*5<o%"J)k6kd&2dqpn,mL:D]<2\cY]HAZkB:dQ@>!-tK!rA#"4`T0$_=Ca"1ru#V"gTHi%8'+DA]-f*Nrd+I#A'"b+Jt]lT@mh!",Vi3s%"akudKL%oQm^5,ad?XW>"V&4gh]2f!TMr234[Fqp]jtt(Fu*A]l?r`:(lW'0;[#2O-oU<-9-12",L")W28pJ%,Y,;WnIlbO!nd7G%ADC;o#g&_FLqSoiL"1sKe]MAHJm0bP.lokIMN0h-<MBa2X$9`qZ%&i_oW0>aA1J\+JNFRqD,h;`9;i24aQhCl*nEN;ctd1s5Is\N%.KW,"'T\>;NXHb"8+]?HUbWRcB.JdAd"@5hBWNik?.;U04d9/?\J#_eE#PAV;IotaF<fb.\BK)Q^%Qpl@0"o@G%%WkSI'-_1csNo%6NOZY?D**BK)n?rK@@L5J(T+W*F4iq3q!C+47nL5a`)*.S2):*n3SZ.]W!D#BXk5SU&Z&6\g2g!)VAus*8d+qR=G1cHdg6I8B?r"%@<]t]IqG3\*leOq!iun&NJqYWJZkm)T#ut3F)L^K2[CKbM0$K!OTAEj8>,J)oBKQM?1t9srOcNrAalQ)LT7Z-Z>de.[nC3nlJqW!%0"686%!Z+7`c7B2CB$:eOn2&[ZkKX)C!\bJ1*hX$:@gt83/9qt.+LnNWU@,?FGDkLX;r6$)7&aBId1d`f>I!rVl"=:3E[E1QX/NV%M:?NT@sH6`8E*4)A(h`EP0J<?Yj3u*K/R3'fK_TM,C]V=C=5:rP>]1k\-lY[m%9j;5ae8-YLo]I+^$O$<eqZNrZTquL"56]1p`6d%*kG<LG+d6p`LD&=`Wgfs4@P]pNWJH;.O'[UKau!U3sSRp&6H7gPoZsXZmckrS*/,Yi2@e$EibQ!P_t&g_=T-hBi[N'^ZoTSGaDs^%C]Id%DjfI>IrTDo'"i!)m_7uL1I^Mk_ZG'\V4<JW&@3r%=H]a&\Ka@h+G_Jq@&j:OT"?"nC4WUY>dgZNKkiRSks40]8trca[t?]>%7h3m![).`@=+h5B@KG0mW)6YM$/!5V6h--l-.q*tch/V8eAfP#&m0sQ/_::5hu%c"mF)Qd`GF=m=S37)bj^OF07N`dHT!5$e75g3%=r$eK^6oUq^3-OF!?_L*&Zn0"^tD@;<+$?FPp4H"r=(P^%Ud3BUfAS:;MLj.*SaF#\=<X(9#iZL/Ke'0(OH+9K*Z"g4]!M[$<ap9%i'/8&j&T6(h*AaSb+s+0acjNn+@ebRN`[f:2p&sCL?)WaHn$AuA@`O\f`E6(j?B,;^0Pi/(:0@F/\;nJ$\WDX)!k-dHmr8fGOoP7%"`.Ks@(Y[maFaPo4YVr,f\&(=pM!=?%U:>$Ej5]m/%:=ho`1'H!L!TH&)(HKXKPg7B7>0No!;)[-BF/2N8)I0$R0\'M$R8[QUepu%h@5s/KEF`")An,)ZC.dTNWoB%bc0s?pWiF?HaD7ahAej\5=]Vi-9@4CBAjfH8>Nis(j&.P&lTn^WPf;rQ@AcJFOO1Y88:X&_an1O%dJ5nA#[mpg3XHC6ARQs'eoG`=S3Li(+e1Q1'V!o&<,l8<i@e"idE_h2Q[JrBj&UJ0b'#$Vm9%!B`#FSp64$)\=[Sf#'1Ajp$6koW%&D2^9kr^U#dmTpUaoq&_/@8G`Pa4>N$\^[Q>;`EUj>:f+5#7rrIG*o:/r>$Y,4GMW.c2N$Y3FrS5"ZIcTRohRP*[pNkTToS4A>k`%Q^,YXa#qQ>iJ"+IdPc5$3MF"*?*gF*7@kP`1p=k\Z0Wcq,@1N9b1A!,;aMKBPubteGf97].&D%IA"MVi;e:PRPd`6Icls0$ObJ(q%09L^0cC*;)'M=E'#,=8M,^M)\N:%h?.oh&eEnm4P?#Z-\CF.#lNEDRqc]1O*gNYX\U82]J3`WgLRW\eqn=1-1YH0A%$`R7?3n6D7%J6Uee!9QhX@gl!l<q`YEB.&ej^/HJbRMj8;:)QL::Q7SBYZ.#<I:q\a20N2nC3)C%'AB=DaJ*N^",&qRLYE2(E[iF]:5pRSJVYgo%=pd4BV=7Dl8I%#<dpAW"iGm9L>=;Uh;Rf@+4h5#o$Q(1uT[Ij>3tnamA@-SC*+Ndd7@MOsNA[3PHI$$b+jkUt=roJj-W?Co.nU,U%2CVE+$ATZa9d`(3,fcLa'r4iog=i3?p@e0ek54NWMaWP)"F'2-]42$WKV5/.EVK[IIl+l'L2IA_7,BHW;LEl[Qs,D9o#b[9`G$MZ%T_RkH&VNTdCn(cpQQ&<JqmFE"`sqO\[bf.BH6J0!IQ2)'kA&$+aF^XWVkB7F(It_OMF4/eYje+G#-5*g4WKl0%&KrQ8itLBOXS2A%'rPP7P`ICa,7_to>ost(rk(XjJ'OZSHe]EKC2jO"1i7P_[mDOp[T2PgISbg`SJu9-[c?>Wl*_j%5P^=s!.mnZ/ZtAQ2LXL[F,+RK%Y#!r6&#/2jnG8u)A92_4D?*B)_)3W'neP$[33m^=BK45DC3-NM'KCo_5PI^@+lqL#Nus,V;*f@?J0>g[bW=6-M9]ETMkGh!:Q''-%?1(&N6#k$O<E4oP\"XH!:URA!NY<`Z));I4o1-a(0+gXmdS@Ga,V%56664ir#k:#c??5@'A/,);S:h&/eT1T9KtSWk:l%)Uq53*J%n#B?C*qcQF9#$h?gtRmdEUNAP[c;uQU'7Q\<'<6pX^O5!Js*($+2*Z8&1BII@EGO_*9'k1aZXYdm*:kM.mZo4fCHkr#-/!#qdGHE%ZGp.K,KY\VYih1+[[J^k^6\-7k<tQs:("HN?SN';1d]Sc>>WPKq-Y]m%O8b"5J:RJA>-IH<%f2pp4nuOW^-n?i9B`A#\t=P&Yr2J%&%1$lP&MW'Z'4^<*@mX]bG`=]dp"((!3.f$E&u*#U552oq'_Aar$bXPGLZ$b+N/!kO]NF?=P1BOH'!kAL_o$_l>5E!J[MR_Eh@X:%7;^j'Wo@GOC_1'*.M?YVf#(f)+T$R?#q.>DF45i/4ti.g=[kA"m<AEK]Ynf3!k'Ki,fTE-3LLf:B:DsRQY0I[Ost\,n+pAM"=Fm]%\*7jn.^Obd\s/qNGS8HsI/0a"].76UfLt`Af_6/9%aG1rLRG`NL9#;D;q:+#nheBUXCo!2H-@5?ROAEd^(R@9&9rG*Yo2fk7W.#A%-pSLI#Z3R;[dJq@,mfO!:3GU6I:[-HXY9F*JA,H#/tm6J(3FWAK]HE99cnRPVQcpns):LYpY*>V+n;#.64l5-:8`obKh@pr4IF%F%<u'fnin!QdY&aMZ?Wr\Aq<%`N&l+c9ap!Z?`%r/*9hf<MG#5o(,-KbU9(4`%CS.e[($5-NB-O!$ALCH]E97!^:T3*XF$0q+I[&4Y%d_l_pPQ[OLB2*S:mATUVPYB7j8^;Jt9\b`%^I`&3AISn'gG`\C*qO5R="ATaC6Z@0XGECman:`>lOU2q73O]>or_('[O_0`2lm7i%f4t8V^[5%Sq;p0t<KrW!TECapPG5;[5$DDj=?#g5JsTZ=lf!Z\FR?JQ;F>DF^4'"FpR"TS\1'L"cH0)oT_qjoF\2oS<LX%gVBBmF%mJ/62AYJj(+-[*G2Xe)BG$A][-ROCW"uH$g62YCS.KW,A&LE>@V>fL-4%s%WU1ZRejON.mM8H>&!I5(+aLWNmZ3(#mq3FYbT6gN\%M2G/WeluO(OL;S^[3Y4u<dV!IXu==iSpSIZDJ<BmX2B-iZrK#GoulRDd:X#!p%W2VLch:Ydj;J0F%KCWDR*s@HI;$'qV&(#X%>s-%Dg/kZMuG;%#+_rB'qhXkjo7VeM`mY1-G!8/V5'O9Z.8(D*.?7AP>'r`Xki?/ZJ5sHnOPTW8;:bp1fN3aiP&24.M>U1e@K,m3>AMq%&PgQ82!T1RmN_E>]HK=PG#9;toBhDg$.[4ZB+\Kp+p*'lJr4%(VR2JTFc>PA-EscrEgldZ^7f!cT<c$BYF9?d3`pmV$K/:o)&6)A%[i%S#[o0@\=d+2Z*8aPuJ3RQHL+"+=;W.`XOjfke0L<uF5640]7$3-MH9c7t8^rmrI%E:#:9$[X9r;?6B)+LUY6q-JAYjL4Ys\qS%=>&`V!'9.:%bm3^e"MVA@dh.lK)bTW=2>e/<D&W"V-63%nbc[`kI3El.a'c[A(#O34DQg%1l24IrNkK!+Jut[M]Yrn\SSi%S.`eP%TTL*</:_6rPIO=sK\PBR_)9G4e)C.^F'3Xl#Fu74E#P?-(/Q5[-eP\3TS/LG#Z4I%%PX,BiC"U"\E]?a3?3GUSsBmt>IfTTWmrJ,%6'H=@M:3i6E(h[$-H2H.jgqg#FDIDOb3*Ng0dNsA7Y\TIBa4Q67<4W?eA^?=1uS_?KU[Y=g#gUT=X2mucR>%]=b+@=/os!a8k>DU%Nd*]EHmPujXM:rW/WjKaK4j<q/M;AtkZ#j-N;"Xq=4J4)$JmKl']j*Q4g^j$hp[#1\?.LAVt+"_h`SA!`6Y?@fHH+.ID\+@]pG#(%Y1Z#5PgVM"7p9k81n?n12BS)VQVtm-[_6/?1PuqCS<@RCWIh"kn,O4j=,r0oahlb5jBp&OM]<(6bjR&=TR:"pcKo';NDuo'R/`_,%q<>l[<MYW@b;#@cgT#0JJMG+ef]Om5G^p',.0=C6:UNHMV02'HaUXls]L:P%7FHts6:Y\SB=$o-$sT$ni6N/a,^)2M*1./GOR1%d%/'n7RS5$?C>0(3,rli[u$JEFd5'I0*jEF$*j$mXVIV'KW7<WjU4Y^:3=M,!;Op)`VD/12bB)D8A,SS9VZeK1YCnBW^G<-]H6<^o6%.c=f6RbC5'bGfofG/R<HW?A)[(/U'=&7YW^jU\Ml`gAV<f=OMC)OtgU[;g]pB"g7[<B=mTZlXmnc/Nt#_;FbEL>=!k-"6G00^d[N%]]"@[k7f8+641:9`1LV._JBG'hnEAf7l=BQ'M]^5fa(CGDr1]l?ZH]*OrNsSMSD/kA#s2P0bYV:eeIm,<f7Bam,nTQ6?LNH2cPN9%6ket9>b[j1eBZfe4h$..$rT*Z;a$2slPB[$4:T&QH_.CL0.-@;l@8V=JNPT\?bTWYc\)&:(IS0a0u&)jI8=p3R[ZkiZ^?n]?7Kte%9i)UhoK6uo?VKQc`2%;NU?$`nb_XUr6M.-JDmQ&k7#K-.%SAu\[a`MTg&[(.^<"%/M2"\a4E=(S@P=ZV`aTGl1T;Z"J:(=8M.QNK%!<Of8ZL0d<;t=Tr?a[au]/a8rk7fL@8>RfCF#m5U[C!M0lF`SQ"Asl!1U38d3JZcFc+CM3kU+o?KnS?+0AcAdgk5,@.()L5^tsTP%DjXTP1<4(=ZpORclNka4+U<7_$a/kj52e$68GN""\t@fD2XZ521lHGN.Y9\-i0;dGSDIU>Q^%i_^W]t-M1Vq?FWD*D[cc?cT:136%OTrq_XH=GHM#]tO[;!cuP8ApNbHRE<I6k59M&JP*5Fe4U[g:*tVpRmKY8dd[CFX7jKNeW;fH!+1Bj]QL2LfE%q;F'&NaoKoFonc%%l'dOcP53V$KZJC"jc_18nN'M_E@'7bb,S0i*\"UnRa7W=8lJZ!7F-5?.$rZR;W_EKq&E-3I+,]:c"W'SPG3a1c-n$nkiOCjD*At!%;c:fBZ:.fK:(msb3CW80M'X#:GhNZ!M/b$BXLOi`QC1nB'U7fdbf:Ff_]rEQLh$]\FEg.%$q8O.6F);j<=FcS8m]X3ZtDIq#n=GC%6MFIX8tqK6H]Y=4H][/Ro3nPul#RV/hsK"71%]R6]fmNOMp(Fr\Mod%D6:'R=9!_?Z\c=ui.n_3`8PB1pMAPhJ`p:"`;<!kT'E'q%pU&\W-+u/kF>$3haa<P>0hnR@hVKkL@<eT+0n0Amf4UU<!#P>R:pYs)/!WRi-E"=%goL8(HfSh%Zg0$B2I%MS,^\V'q<T$?o6aC>%Q?-S0\[s%TSLM+,/+(AL<G>;tZUJ;t,h)s)@<qHsn#PLuV8t#81BgjE^oD[9grO(iDJ\X[cdCKiWufJTjF(o<r=UbnjMe&i'!5@n%p(V!fbN.;"`u@!:796&Dh'I8fYc5"SP/5d?i<Qr,3+ZtaDJA+u"ZVjkFet[1@<1J1C@+$js5Vj8"TV=E!h\``=O`u.%Gnf^=!]t1%0)SIm_c%/cF.L6NeJ-=e(XI4A?WD#,f6D[?#P(hGnm#,a<SbbueLAg%/C/GkT;l=+^HGZCi5u"(>Ot;Zc)2JNhl5^_Wqgr;="Zr=%S[su^2>S(Ri8(>q23f0f_YquV3Ze"Km!N/"i,/$9e-/aJRcqN`Rr`7^^Q6#,rDRF\a1k?2j&78`gE3LbI/UW5m&?TqfB8mYNuq]8%qK93l@o:V-+07DKIBLeBqm&!O7psO7D.]rmEf`0RTfXmDY%4E-i[VW\ILqQ='&"CQ)ac!LAD\V*81C9]Y0,1K5qaR_O`PpYL-3VK%:P#;@^fF?2e$i?E(I5N1g?n4EUX."*b>':[pm+ZWK$P(NZZW?1gu`sM;`J#DV!qFm+1nRPC8=;lM8BN$klDaTo2o^%jRV/>JM-]s%a1\VFCKCk_/C/5ccd6D3K`pG@[3H<fDdCLsFubP/;e'3A<SOK/B+?&32TKG$Nu9dbkHRGW/ZW6*A.+A2((-l]i$@Nk*D2&#l^6oo%:uj$S7JSY2K@S$R<Of#Q#c`m6f.VmDmIrjWEo,lLLEf-ZQjq7M4Jr>&>D)EAb!KhZ@d@a+"APX($q,mKnZCd?d(qnWD`:g5#,H[Z%rUqbpoikCde)nkf00>T1\kLELE)=;Drajo/7/VfOKnDDkY_E6ViH3k8oU*60;r]0nr/*S7^p$rF5>W:4ZgM97C+=lKOS8@s/A5/(%\g/)?if[#r`V#tI_RR='0f?*\:!m_KI*6T_X=aj9.ko<H+9jTSYYfCCNZAXVT9j$96,mng*GL:I7h'%EU*=rEjF4%K"Jtm5P:<\:%RCBIsA?!6jU[,S<cCn7l$Qu$r+^ig/bmDdl3?TP]=)\Gt.'fJ%4XYTAQULLj/^R7i9Qt%XXQB+JJKbV1T>I$/,]:L=,&QiIVc/pq%<)AQ=JJkUj=bHt-FFEBTSt3CpTT^[g%T\c'X,'$Vhf"iP/iMfT6X^Ji,87Zie)\9i(OVC9=$VWW[?0`)TMo`or58-@kN?0dR"l(.%ifA$I?0).1;c8WNbmJa`Ai(\R$t=d9gDl5&6"8?(c+3ZpCE>`STBjTa@oN$c3GY+JJ_/6/GnE$lHnhCnpr<6AEe^lf+Ynb6kDr@=%C`qDN'E(Yi/TDK3CORLaI6g@P_VNr.i+a'WNmcN>D4"2VR`)HLS=<>1BapY@&kk?V^D'u@Sjfk]Vr4)bA%:TCaY]!EIp,Z/U$d'8%IrA[U2's\i*^SPbPH6,313KL!cnsiN3BJoq,r/6oAltil%Hk.Fd<V1pQ)aDYFE5^h=&5q3A<lPpJeabdq(7W_?M.[W654R?W-*"`%[XcC`FOS7T`(bEOJt&g;)Vs_l?2k&?g5@l65'1+%q#mq+R\!#P0\+-uaHVW1$'?qfMC(q>Vo6b(1jnCtppC""o?*1@$ZaTIdZTk`%Xt_1KXH>'U8pMTK8`^`1"HcVUH)6;ALSM?p9TO#N?Qp,&\jbeJ6)*-m,RTt`iNSK@'")IEp+Fe:gM-$Na?2_2<2(kIK(IK5OgbQF%1Y$!;?/ZfeFfZmLKr&Kpoh))EaC$I=FGf!:OJnTZ7k4gFL\4flL<Tl?=#A2cBV=TV,E#8OZ<q7J&FB:C)[f5F`46(G*\:-l(fd-q%nmK!3E`/GE>9c6Pj'5ASQ.r&=>-DJRQ#7)bVjM.IN@^=kC60qSN8(aN'R#m;L/k&UMc>o;g=ompH7_s5o9uU7(9rl_P@r.:Y1'=r%"7&#6Pq,;&#?(T$#L>H^G!"l0IDYQ%[SiF`A5Dm>9eHi?CiT=8g`77pYJ].pDPi8k\ia1VmorJ`oPtZu.ij\Um#&V<cN3\L%JnXc%gH>dYP%5%'IPrBBBb-(igklOG;DMG.+c[j?5X1Na/M_'+1En!%JkNH<a!Hqf7!a>[@lqcO3GqVA)(YmcRuE&uUBJMDNrZL/R0iXF%;Wl@&8XH,.O$d<83s%^L+ouse58+)qnK^Zud]lJ;SIj;^k&(ugiT@+TFp^m,P]a&6AdWVaHK=cbUjbKB6e=EW!@Zp+@U[!BgK!)H%3C;/F*S[LC]SIr#c0kKGfGVUgq6tip>Xu"FNeBtWXq(Z#K4)i`_"*)Q*_=LtLnl_?5uJm=oX9qDMUPLqb$'moY9&(?bb0\8gAt&J%Eq6)d7pfuE9&*U5!Ts(QSRifiKLDSUi(R'Xf`3UiMkn[^9<C.#/Cu]Kr:bSgc'7!J2J!"Spg#be+K\BD![!$::rl.S%';r#:_YIF%"9t3JZ+UU]ne68U$EV5;&D2l"\;O,Z.H;93e68GRWHNJbgRlDfH#2.oSg(SdLifHYmo0a`VJCK#EN:lcK7C:u>NTM&ATB8@]&^Z-%e^k85WI4Vu1Jl['W>RA3'#6\/8d=IhBTPjZE)XP&$#kUeEGMhHL<U"]D>8=dl*dt.Tg!M?abeD.Br#RQ9(6/MGULu2@MJka+o6DO%!21e\`?%iS`\g1VJX=TmOUh$mp66i?,[brqipf"3,k^W1%nrK6V_T1!SH8SPhfTo[nSik2G=p32$&>OdB(K`^0.o6ZFcoSIoH.^m%LX?ODZYpnc[^]m[=o9<.W`.fT\'7Yk\l63Af)3%93ohDXa4Wa>]0^OA2Ia8`:+Wa4*D=VGD*=`^L$kV7?ZZVPZ1i/q&N-FMh-M<V%;<IHBZ&n0ZX%Do^X4?a7cTTa>\Z<N,<4CQ89B%ktb$JQucYhr)!#+_Mfj/lpXM36<j)B2@lKfg!S\7F/j6\_ONSDKSB5^M5:T[+,%HTlT<7fAV[3PP&jmOe48H4AKg=Qsk'MI$bnXdDMM7)Dp)j*!SAPURJj'@N?\A:Z`ZZ::j0NMhH(b!no%^",'#/Gj0"pF=cZgcW_o%DK-^:#eEU0`oH`g$9Q_>?W;,J_HN(#+B^#Z#tQpalE"Nmb>)"FYD3%dEP6b%Vk^eQIPOB[!1O]j<+[D&(^6g0?W#:K?GK>cXCHSc%cIO(T]n60!8%'@&>.s9#(bOJZ_J18/%0`3`I?Yi:iq8*'J/%[3BW^":f$#5U)USoA5;fsZ"Ysk&U>N[VOq\ri,!@nF:;GYgS'U`a%(_O!gj`8bPFt/c4_,t4grV8:@M_eLdeWRm7D<[B,oEr?A.RLP.VLAERahRf<,*$NLh(I+\#63^1;]V[d9!unK>3>nFp!a_c'YL/=%nrB&fgNnb2dAKSK0=iG#F8FRS.E3Nk"qD[o+5);df@N@YcK#VB]:PFmT!*G-Rgtkk9Sl=NAreUuC8d0Q>>J"R(o5i3GGX_^Si*-<%/:Hlof.>%G^Iu$3/$gQ7<c_WNc`R1)l1Vqmlt9@gf5$t(FurgLq0qe)F0CuM/Q\\;V`s;!o6I:c=@:clBI"h_rlF)Fhf!/n*rP@R%a<8fk"S+fk.3WF;cRYbsnMFrV]+W/;3O9(j"PP*=-.Vref9(T0!P)j.lbuN8<F8)5odI[?2d&ApHO'au<(%0ln]oT?Q-^nZSX6?I%QO&.u3b3Npgs_=QC8]=+UYdI;!XWCqGhgT:VurHZ8Ur]E^Fd4QD"<2fc2:VTJ=.7Gf1BfUaaL1_Ufpii"mGWPY,V,C%HOG'7b'\e%q4`W_WA#DbgA5$'E>qK1'ecBnGS'o:FHf#USMM?mTH)a8N<lCV1Z_K)HCs$q!Oh882Ce+%f=M+6/U1-76t#$>o/[DI%rj`ca^.BV%*q,>dM_0:)e`LO\\!BULJ2TsjEG\h48Q>`M8CW^3F$jI$FXfY5*[QK!qLd6B(%l:YldW&;cacra'SHaO4&18U]QPC4qZ+t?lgM$T%@*_KPA-\g*8@1_cPY?t;6_O2AL[r8QEVp,dV^:k1;(4DPGfngd&!Hn_cd(*F<lBliX,gLU)B].<Os=/`ClV%upHo6W,!_?RFB?ps%94DCLLI?ha9R1C"D"_b49?t?`=nN%JiKFr=ooD+ar4+jdGaPe+K[mM,CJV=Vg_W%?77VGPR\\@g+ZSeg8)X+$5^]"]<-R="ic'a*%q?Tq?f5O>[c,C\j/kJ\*]9jGYb&,^lW7(@&A?V'/93-4R:F-hNXVGEhG21f3W'k`c%dr(n9[#eaKT[X9.^:_8pIYnqI[CBd!Q5!L%e+A;X]!#H?R/?1!>"XFGIFuQjMeW^dp@I3&BE73Yb:[EdZNNG.>b'"Grdq\2T-b)f@8+7Rl1uSSrHOQ8;VO4f=eF[mgW3IlB03$'%ZU$8PHCrLIjisDe!L_*ZkJ%I38gEJ*:?BpH(G>(KIoR;nJ*6D2s0V368S[l$s-Y2+GVDH`:mT!)RA1lXS(f(Fn@cb*T7^NMMhpO8%^*b_]2<kIQrEAu&GNI$3:f4)jMZpgg],Gd:3Yq&m$`$0B<QHY]?,WprbXELkeV*O4Mj$nr-1:m9cQ/>(W`'5C<l4nPgB:g8nb'$W%[ni@@k>hBTOBqCHB;*#mm=cQHP^JLf1lUg.RF[;q+8H>TAu-7i-jIuYGMZoO<D?Gkqk=S]igdN3M^TdM"q,%FQ$rrSe5#GRQ)0hD%:,!;RW9OQ/GHSD\U)OEW9fU6=Y.#uTM<h3$lA;Qa96fdTI+oHc[FY;3KA37PS9^^Jafa;G)uEA)Fr,b$bLpk3q3StakEjY/hZVFY%GRd=j=:=:3+8)5>P35G.(WXH;S$IllUte#X!u-Z(c`/;a!D@Zk&gr=V.:+:U*LfKe4cIOFe,&p_g!;92,_rVt.83RuXSrooZCcUA%VFe.5N]bnr83MfN<0HGa:%%h4EJn1n$5S^Bk>/uY=,&6I/3<6\di8U#,WWt\ZN?g8BKA,aQ6`HdVeZ:NGU:[!5AXP#CFO$G7!XY^%0Mt+X\PmC=/F5QjVV80:O9j]hC^Gp;@-QP6geBj[1n<<IS_:'d["F9Gs/ULLFsgMNT,XK.+bE#pK!42enpH!jBVB<EnHa\b5nAKY%&rkPCcWB9pik9ePknkE"*"Y$#,^&mKRq"?`X=qV\auHeh6-1_I__Dd^2o0j<_TAJN0%9cHmdo3S@6-?`hu1fnjkT=J=a]G9F;bW6%HuM'4atmr]k8uqE7&bGsJ%Ip8ir!3t`tBo)fZ,E"7p$^:`*#J;P1^u"egAG0d$-NX8kQqN@!Xk&9oQS2jJ1XC4)CF4_oTF;9T/u6%N6nK2hsP#]W9,N-(U7;;(_BE,-V+S5oLJWrq8J0&_aGr,4AJaV;$kh]_nugQ;X+K\Lcr1MRPV-qFh"$5,!A\#o1B]icq-!;/sJt&%OdFhTW6e\nM)f[.AgO_l(q<$mZimd(cmEL`qdb^f&R/n]*O3@Z<CXLZcel)JSWX-]S5Q5keLCMUk.J?,l9q,^d["_rHnd%!^.1Zl%kTqBS1`4p<g)MBmEf"d0kj.e,Wfk!)-t:reRga8-&Qs9UJ=3d)3pBSqX]k"YN"mRs=X8\63L^5;P"tq=UAm'*973Z>.Vp6!WW#;-%`:.i6*1%rFVC=:FFY=nq,#Ei\$0_^Sf5jHieGcBGq`k#!J,H5Er?'nrko]oJJ,]=pr:<_alRD[S\sgdPSGrI_s5F"UVgnW"s8;op%o^DeQDu\kpqg\S>5Q8hjrOj9NpHSU0kC`fhq>\4or(2n0FcE'$Z(:j$7SrLp6GD%Wp?ppqLCmMEJ="=q5q.7Efro/oV:4D^^Q5%X%kr%l&0dJsMKfR1M`?d,M]8!PFlfL*Y.VpECiu5e4SpmR\7"*-sTl!&&J>ef_gQ+$FV'oc`M/_kqJHEm#@KB$!#?b9TOj6LgZ<t@D%YdI3r0`P&7k=an1'=Oh:EjileMFU9i'Sm8-DVSAr$l^o_@a+C5db<QOcipMi0K%U&G1mi<g:Fm=JDAcU''MlEFUb8X<Vnida<I(o%A"op\OHR%M-ERBE=*VgfS@q(`b*bA3iae:jKh`?Ip.a'DAlg'lQli2?5)t!eA]OJ=4nc4+=8:XlK6jI&,ORjET&^u\dQu_OL4%"'%mYdkF)U0QRe_P0RJ_@ddMaCqeB>QJpp=PmD6TY'p2gqI*CET@&LplH8<0jSm4]+6hlGhR@^"[-PbU([A_iGdE>sbK]e[dk_V'*-7%;r)l5Kh/rm<$+EglacEjXS^3/U@ln_"=oGnmQrHRd0":,)DsPI'V-pA$DsB>IJHB<op+7/!WOu2Ah`[C)$/Op78*5PJm3X0V6g5D%$;cJf=A,8FVRDY=kJaS0j<[-+D=nl2*@P"a_'Nj<don,fZ]q,"$\[(\is4ZpmV_-uM12i4_B%"+6l7`\;eOHI.?2[g(;h:F9BLU0%$8;=_TU(7Chicss&X)\l:FG=c?C'R,L#"NgioP?.pF-Y7!Z8XkbR<J\?5Bn"eu*^bE#DgC3A15'q8%/tbkZ#1UKC:3('BCW*DH-;%/AN#M4Y<jt*\JF68&JY+a/gYr"crhHL#@j7Ys$p@q0=t[c?nDfSI"B7aoDHVUu$&?e?-eadkf$>/9jT=D1CiXfVG)@Kim)('5C?p%!BUJH[l#>eIkMtfdDRYKb"[pO-H*[Fd6&3s85PSlU/9Th;-5W"SV@Jk#LBVNYc[-2-c?i/lH`P'mW4D0&VlOa"h7P:24MR%I9Jf>%#pllA:CYFO4nV_m9]j2GgMkiD`\^.91hCbN+W+Zu/iDGZr%Jm_$.Oc]_1K;2)tY%GG>DG=o`08Kpg$/3Z$/M1_FRLlIrKk>!WP88%*#4]HV\!bj0=BMV?4$ES6kbLAF:g#U,[Z"kn8#?Lq`I)*'l"+9lm6tdF$PZ_p*cP^g5[lUBqYMn<5n#u%iW;)MO!5C!Mia(/oh9I%!RS#8bD<((@9*t.S)T(5XmQ3[Z'XB,="pZZ!e?gZ,-3@R:^=dE7>hOE]^)J$,RJ2"J"fHHqlM$4,5V/g@"j>r53EOD9#)\3-kCt0%1c_a(3<)7$,2>4f*gN]f:8+E=>#"m5r",'uMRik,iiihXABJV"@d_Pk&BA<eDnAF-<W@.J(!5+1Zc9:7Z3t+/?O`-!+fo\XkH7"M%[lsD,\dH2RI[kS(bETId<18.f1P[MiAd60D#g<6)+t@q(PfbG\bDO/rqf=3D'\:G[8UOE#]OZmYlN4iX,oAeJiTlt3o`"7/[e8FX%;tFj%rPS^[=2dH;jOO-#2B/aH-N#^,=#rdkL;!>1&+["&F"(RSlXcFDlMXF8gO$VLp$2D9XnPoOeoS;qc*ok/o9ST[l8qU<#"qZS%,Bi+0.Q_eScDBG,hCdt-J9-F-`#BZn,V+<%^\TodmCJG?0-Pean5&dLWMjl:n@[7gX-pX&WNBMu7mS*];%i2!7li0pCGr';Nbu-t%/PFU@4*bLQ9>aj=g%U\a>F8I'dfC_qk!MO-S5R\p@T\WGQs#ZXGKSk6S/n:V:#et9B.;@_O<aQIM/\7\$X/p<eF)=Uh?`SL$R"iq%.-BlG@k`HQJ$JRY[1N$\UTaB/]0QBSk+CeuLEG+l=^OY=4K`V>H,,a((:YC&Z=m85qJ]^&h'L+NkOLGkY.*4Tf5Z3Pc3%+@T\VWA%o,,2iofB8;:tUb+[@Y#,0]2TZf<rjULTM,1pZuaZU6bfl^>XVK[;ZI/`'[&mfLk:#,g=RS^5J)8VCciblXdl8SBKmbd4'CT2fB&\%&0@1EL`_\':1'X'6s!$!ZJ"1%AZK%]@tM^%lLKd4#<fJ*jHnqDQpQ$rn2bO\Z-@rnDs.EGBG:n[\)62$Zml/f@gs$<DiUTs6`3I>%c)W;Z\`I?<H9+,J7:m23PnoC1"S<#&9AZM$XH+F&fZ1HN^r@!:"A'=,W>ue34C+AX&m9!M?(=f(mNM\[3='[>DILtM*F[\i6jXG7%N[5GbolXJVqtZaq'[kY&DnCk/YMOq0[>-0E>"FofjGp!hkI60X/Kn.>*,4Wd'#gNe-#m$uJ3X4aFQ;Neq$+,JkEMho_IGpS<`\"(%>19R0=X7SQkN56rLtkTr)5F,<*Rq2+J4th2i"4?L592r0g$cjZ\iYunYHbRP\HdN2XoX6EgjWu%`!?/Z1[G\Q/t)@maG(_CBF>DP%3d4G39?s/5\2huocbd,D5f@X9.%dDuS&e@TC$VnaZ=+O;0=sW]O']]E6F(:^B,C+EO]P6+/B:O,52A,8"to/i6K;QkBlrat!*pI#%4+^k#A4ifqP/G,/fW528q-`0o&OoK>kK0+CEMM`!DE!u"Zb47qIG>44,o"\j<5s+`5C`a]&pm.1/(l6hIjPBO@'>L3UW)]%n"sK+%8)b)9VuXbZEu/*aIM:"`&PGd>rB>W]p^eLD=W&;>@'8ZrG`Qc]]0s-3?:&;`qRLCbA*$VrOi!u0Sh$'m7$qWq[i*ltf-]$S:t1hC%,Z4>?<(jRbZ%^%-%QGq+,Z.u,iO%a6nPP#0-nXrSFSk\^iZ<nT:iCE`gdM]l\iT`^>R='U7g!-'`Ip;EW`=D\-Ii`t8L!;D'+&EP%4c5EKp/_;Qp/S8:p5QjC`%T`+O2='JW13!ifsjFab[/fO2R$78HV-SFoco>([&@t=hF8eZ[QEL<?&rh7;331^YC"V2=l^f,Q(dM\%NjS6'la8Y*e!>C[On&8K[i*8Leb(72(7Ja4f/VAJfq$>e,c$B8H8JQ;7J'u`H)LD]c9>]cIEV\JP/;9!?TC*HB=I5L;8G'9l?7hM%UW(&Z1,Lm"ZU4dG0E2qXO"6%i3"4,YJ-"t,#)H/#*T1WCTP9h]eZ9oIWK+KcgPFVsM+B&:J5[<;ED2\A$uN5Z<oe>J^2$Z[MmBOU%Y.8JRfoV5W6+I&LddD73]LrT&iN^R%AU;!Sr2`E6Ok++-$N+3M:>6BN1pX)_rKB\#f1k*Af=P"HC*lm;f=@$?N]D\7.%AX0OFhi8%JN]nko2@7XGhm]8"<dOEh92i>=0Tt$W@22W5YE9HU3Mh!$0D+S=oi:r'BM#DP<Df!#gfQ\iF]kRU0!ibPK1%3W2L+f_X7R,<"6"`%1mFjCDrf<gc9-%E5[&kd5a*;DJ:*,UoZK/oC2>8_2O!9<4uELnP[gI$"ZmK"+`GbG*^<Tp`Yp5ObNoM8O4`gpK:\BbS;KA&>SLSQ%K-N+S[L&Hfq6ZUIbT:I6!kt\`rRt3eTUuGN-%<ukfRJ;eS0dflk=gogc(Pob[TK6PkgiT4)FoXU\VL$(<$.6tR[DkRGt"b*>\l@Y%qGLrq:u3r"/UeKB+H!5^84BfX\G*3fT$OM4W&4;KrZ#;(p;H;Hr&L*?*eh*':YBi47eO,djfNM`*RNY&Arb=0C6U5%l#P"4@qF=f%a,Jr$*'d\fRBffbb;#cV]fh^o@n(.1NlNfn9Mt>V>rpr5.7$7-f?BPU'+m>?oX(Ldc-@eH;tOFE?j]b%lL9(PaP)XE[Q,f`ZK\@k%4-/Y($K%_f-Iq-!6CCgFXqI1P9&k9s2b;tU-.qCf'Xt1cIZ>[*U7(Ua]9+0+d]k()G?3B7bee4RNC^7#?A_KXrktN("YuSRe[D45%Ad[9*TX$m@XY.CL!+1pRYmGJG8cs@_\BZVDU-kNSrRr)\2^&2CHnmK#>d=['-8ar8oP#+0LJ^M/0HMtO<FWX0JgVh"0]0/=o2G,8%VT<^jTX)1u],T9Z4u<3q^FCh'U=IolMWZ&:l`=%>(d:7\WU*;kL\ufDXKa5UQ[c5k>=nc+.2s3d^\uGEUMX'=jD!sGF0.c>#A=gK%^[ji+GMr;c9pWIHk,Kk#TNW=%$5$q>&GtO+\:YK[R[b"BNE,J6Wp8$V\36(ZIZCE.NACkf\I`OV!O%l;?M"atES'RbN2"`t)h+k"%M"t7(rIoPSDC#HR/$@Z!2lP.d'QV@K?e!Zu@+(Cf!S\3:JtjhROT0IcA-#u$b'-j'VKl2H-,gbX0KlTnBm//n9aQ,Y7s)j3J[n*)%/V:S%;0t=,omHq]WPX-G993''"H:.1M?[T)8q*sdkf24nI8B1uU]L5&UP95/bo9H*$4N1oqAJq^kK$6&4/,9EFT?WFM7mCNl8Q:D%61e/_c-_;\;0Fu'RLKg-4\%LF^=i*YhJ6)jaT`<KRCSXX.)Sl$0Vji2'$\op#Z&tVY,F;PJ;";u=-ZX_28VV^3Jr2f%F/[AH_h,N%T<9q7-'tEL%ClU@WiKYn$CsFun&c>AbkKmMnCCXGB3J8cLj\nYl;d_UTZsnMiGI_]=&]9r=dZ+p9XJe=VoCN3R_]c_*/ggBj"jSL%9OiML:3=P^Uq:.,WHnUBGGi]B)P]^=o8M#tmAOVc)K4V^or'KG5&DFr.F;ub@faXRV=/]32X\r`.+-;0#j6a]/H)dA4l!H0m@J'L%aKor.*F436lHB<J*B7aM<nAR"a4f-Wm1j5_1L`0TeEVbe2[:%Gr((6c2(sgDpRGcRO5PZ80RfD,p0`*4%HSR*;.Jld(oEc;Pcm>Z%594,BkU!.,C%G<tX\K_rkg"L1?&!((Aa:\9Rem7q0#'uCntN0\3IJZ7Q]1<Ee2ESEiDo3Zmmt!.Sqt&E;"U>?6a:?uR[,-I%;N@Z%;IF?5.C7.)\_tUeQ`=G?dB+O#4.Ri+C,b6?:sA?t47N2d"p*OhI:9/rB&j$ulie;id=-E,ds"D6'doP36>p?;>k6J:2-:DNe>'+m%dYtYO:;&Yo$&]@PNYjGU]Jm/AGf1j^kjLB>$*GYk/Rlpl_.g3V3G9rk:rmRMQ;j`[1[>r;GkcfBTB#Xp^[ISLbHWF96"(3P'G#IH%A\B*6<WSs3:<`<JBT(OJk>;AoDh9I@E-$po=54G'MSfPs\r98_U<P<4NZ?(^FL]J69kIiu=6_IHI0*sf2IPGSKK^WH";L%JciW8L%!*SOm$@!mR;p1sJFp`MFk;5i>jlB+XfeRl:]^3UnW6-V%kucgODECfi.l8X!\g[W*fZ\qGUg$+iSW!_$;drT-cK+[B9n!jsqZoV`%,h?GqMmas7n'5p_H35%cY`WRR-.%@J'e-<<ch$c^//cnW$puRF8K/cn'kj-Sf.Y#`;tj,j`0S0_SLM-lSQKj]ZkasLL'7JQg7JP]%Y#:)Sp;7Eg7;RU;q;%bo(!>D0pecYAA%q/,^G49mr7KJFJ,-6;Yc9rcgee>"0U6,MQF85g]0qNKOC>ABpFNk(FsULc(;26u:Hadr%k]9!>9g&*%k32[nW4T;5048H#l2p99h:1cHf=Z"qhA`TSK@=Ch,Y0oSP8A\7/T8op("N7nVT/!#>NMS[d0%qYGArc0n&&;D5%r2(%@WH-^S;Dcm`PrRGNkg,,hb"uoe,h4a\Cn4![;$^q'T&msAZ)GC>_70f&EXa1cV3/B]k%Og?X!<<.dp+q7_B8D6XmdH<!LU=cWV[-%5BLWYh>4d![Y4ltf(%Kk4q.2(.;B`%N#$.SJ+ZcN87^8N`*^2+]LueIk=mr67c.:Xlk&sk*NWL@&#q;KB`YYMeicc^mh2<Fm""p[%ga5og8"sO8-S$3@?0ToI=q9HALXJVAgm*1/#F-JP8d.Ap$BW)&3KYFI2CoOf,8hgJ[7d+26>_JBlkL2UnF.2*56;1jd&A3iq?8e=%H+)b+&HtqQhR,edD$::Sbq9r['Z+QTm#rTJ.B!DjUFHIo^,8d7m.H]5_k<#<=-g^TI>#LC"^ns;"c3eb+@ct*'up<'*b8"/&N>O*%%gN1iE;X4\,faML9:=a`r.[`E:4Wae&rT=<<<`:435c&,F_X'0ks8V@:W+=D5O+K6k6=k%J<GeN\G%gA>IN@nM,!U<$+0-#K8Xs=%n#jIFr2'VY8En\Te.,LD;l-RQ,"_EF)qR<E=>5Msqq)u/CO,Eq92K?_!Xp'!d[Wi##,1Kl)#NVHZ0ss&<kMe8^O(AG_hV+gd4%\^%0;a:"`>Be26_:TZ#l_C6cZ(%4euJ^N0sa7&bd'=.^kB]IL?f^+390^qpj7H<3"Z@P,;<k#_f`7!&:<#!r$MT<Z%t!Ag,WO0gmcKD%o0;l$hq&[%iZt$V=XIqn9M`VAbkkl$$"WM@NSA?lhTD6FLgi0.j-3s)$T]RQW;&e="%.jLi'YbOAV'=pj5+"dA><&([k,And.sF_%$N0qs(3q:7dFX_^5Z$jqROMD\LmNMWO=BS_UmbQE]O\@*3]a]A$!Qsfi(rI.UIUeQ,P.%60B@H&&mPmU7+'$IQJ%,jTrXeeA#AVD%M0R9d[p6$.@hA990XG$)bnA9R6BP,Im,gk@Ss^#@la0N#^S9[[e>?8%hm*C:;6WI[]RZ^`W)aCmoppBdm)@%*oA=1RkO5$h".%=\%/DsGjFqL;S?;+&'f[\*AHb'=]gPX!FdCkINjjlkMl(O"e.;AD)`S;/R=C7MKkb_OiT"-oI[lj?*qr'SQB29W;%N;kfmFdJAXC#7=%#QK,4\i]hQFa)'U?[%90Ge6&mLYM2Nqg#e</@s^]Ia)r+,-i%U-3'>,^]3Wg`GT3&F$;I)_cE`N71L&kA9m<:BHpJ'-n+0E(qZJg%erS[[ht-/@n8]pL+r6\uL6pqMri\Q7aqDf',H_*N?rg'K#sS=`$VYa`/$E-;-$(:k1*CZhR*Z;Z$nsMeoSlLBREr0*oE[S+OJa?,%@&==fH#1:flP_V7@ggpA\R6D"Ze+mhml'"3f;sYh9d7p='TGqdH*J@fUJHWe-D3<1pta51M%6d!-kO/2R^n2`Ue_2>WhGo3`%i,K%F?'PIT8nfbL@Q8JfAKKnZ6a\SB#@l)Q+kF?U,Pq5fQZ6I/,XE^9*cYjVq,BNaNY!\C]6]b^6P_NpsA?u[hmlbVgtRF:E>)chGH,G%R>@S60oum#QroPe(PZK]QSGtZ*Crfll2r>#(L0_4lnV#eTj)m=J#B+pi!Rl#$rP=s4AWJa?59>gD,s/jDH:=AaC5pMYHf:2J`VuF%_Y$p,N`N]8q/Gp5"Bpaj<,\f!<\?,2O,FX%LaL;(l9GcIFn!V*#.%bO<OcfLI(<2H%b'k(pqNCMB&_>";`^u_7>u;o^%VA99Vc*[%d^7,b'c`"eT[%=IV]l/'P0GV(Su%3V_\I#K<Tt`5GH*J4c"O%"V>*LJm&r-_]#2mt#f;m`#!tX.\#Eck9![S/C+VMB"m9re1r7O2%BuHY96P:[^kApqA8^=2F*B&'!^a=_#/dQt$@;nj.E6_gPq_I5_c=C%ppBtohFT:fike2N$%%FADLELn*a/5kC;:npf?j/ZZU"+To%QJi9eV[9>6IBG?%qrfV%D<=29.67C!<9:5,4#hAiN3bf]cVa_S^M23sf:2R_D'uR_ZqW`g8eY/LU;#)E.m4_8>k=29<[1Se<TF6q%Ce'<,%JUUT$%UEGLP:6*nSWM2Gj?#*V9QOI`q(EL;a*L!&+bQpghs&j'bjBf@fgHP)E?0W:1ON;>JW$]*aX\0W/#4KHKFE@k!GC9%qZ8)=?LdVhY_Sm+f2)($K9L@P7`H-48El,R^r6;_8U'`U'*/5$2hKbkBGF`\\l975*qC4iH/L(77qgcF)'Md)rFl>f.1)0%b)6Zs%G6;h;M51Csj:KaCi[n'l]59bL(1'l.R:kG)Fc:!2lu`N?rV+2R$2g^N1@D$7T@XW^`tbBa\>aMLe5/UQBps9iGu5*EVn!LhXiPr+%R+$[-aFaf)0jTW'ZQOj(GoK8G_1tDU9MI"aJ14QOSN)3n].mp[U7n)>@+C2'eNMQ`gLaY"#0-k-WZ5.1P,]3$3q@>pm="P4meB[K%9X^.KV.JG,'pUN,CGmX;KNH94LWD=.o7Ltm"M%</UQcTHkg7jpiGg^YI]o@-eZ8;8SN+n8_]o0rZuZL[^B"NR\I?-;7YdkuFHf2F%[b>?_^B=Z&-:]C,=gWF$JWV6SP/"UeRf5K!N`9m_h@'FAl6=&8IL3_GK5;;2`hYiEa6mjr;J2lPBFNB4'(fcq`a3\)/YbBMOqDW:%(:Od=9s_6i@LrTi6or@$rG#4*oW-a(J*-7S!nMBUiY.AKHQ\?.ZXP_0W2ZHWBaGAY3c^\FCj=<`%!j>G(4AHKMdV^GU@3F+&ko9:%)V56FY21Dn#JiGc\CfBN85S>b.@,n;R]0R\bMt:3!*\o^Jp;IaCZRC.A3OqZY8Kc_aAp:rgWp7QJ22,Y<;Zgmo##NUjVt4dkobC+%-W$9Gp"!3q=@EPK+0rm=g!'2j3lXU?\PCEWDU:c)=A`1ph2g0^1_D4=k)1k6Q.!'N1[f+mBP*"DO'Tk;X$Q'6g#eQLp=-?TG<_'Z%d,WH[(XE"Yfu^BlmfNHODuVds2M-,%X2Aog<"7XY<Ige=3ao'C('&ncJR7/DG$d!J6HRn\V9:^?EpMSM<E3@%2GM<Z\#SYn8-YFI%m9:INY>42B'oDu^aGRH6P1^'$U]m$A$G[9RnOoZU;`WKgP1#WM>Rr4,GdOZhcR+(']R?j/jJ9Dj+"?AG[4q3[9/&U/qSakrrQCqT%2/@(g+1On)qfCDRh"OE<S[,_o9Xm1i47;t4=0h/$.l,hfm!(oOFVkejeC'+Q7m5C4ho'TrM;GgddPeA(c;*`;R]GeOrRM&O$Bao9%6LQs^:uhd*'.YT*VCFO7(Z088SVLknR?K,MV9tF%G7Lcd35EZ.*KC'>KOQ1pc9Xf!;KU_8XH[76;pq=0X%F4nZ)6;01AK]m#(CPJ%.l7lK.,Q=fX!*=CbsH1([\iD8e_ha;9Puu7$8irX;<E2(B`aVg4dqTe,RC6a4IR,2>+.$Xq6$X(@"9tHf"#V+M;"cO`GeDWeJ:k%%O]sn#Ro_:)oH]VP+UPXAUSQIV\FfbI"(o<&oaP%B;o[`gU@#_X7foGna"7'e6)k%^SR,<V&Z@]^FAb0^Yrg!3j)A2dg=Ie]ibXIJ%V-GM3q_qks_uV/=[,,+0@FTQf6-min+LUlUJ_DQt>TOo6hZ_P.YG>c1V)V?H+hbDD;m2p"68&lf8L?MN#>?B#W>0u@c(I&7nu8+5%/C])5cS_U)r/sJk*N:N^M>9Lj#:`bi!DR,L=\E/RWkWLi8S%1Zl_,@kiYWKs*!oUk0X1k?;T1KE,3Esk/!c'$\*7.r2&ul$Q(Xe7%<Jlt;-B]?`mSR9Gk<2ZT8.5nP*L#Xlr-VX<1)qT#8m!74A=hss'RE(j;J]#cmjV4B[7=&&0JA8G6+U]/,*<O.LJb\0"]r0@m?=r@%0uCDm>")NAc1Q0t70_,62thNpIseNMf<G^kF-C*sh4MKPO!G:]',8E%%@R)XHhVFh&'^=;ri3_^+T0G^)mDfcS7CTLqRg"grnqP]%0c4`*iZ$P8mi6u[ZMP3aH=bGN)[3rLi%e=OV)"cJ3>/j3].j*2KIcf&_r[Ui"N4l/IUt%1Jp72dk7,/*q;-..jqXED5#3+X/QFbT%-E4S5J6FBd8d%t*Zq*r&*bllUD8cB!!C`cF.sn^/Kgi"Y7&`Ds+MB$SSqKq0r$C<kiuTedAEl)#]$CRq:Y&N'(BVj<C3V@fL<o^a%^cu?O<RlXWWZ0R!.`I:trIV9%k1GZ(4e#]Ajt?#"eZ2<AMmT8CGfA"(g:.ugVlBQEk`e+iO&!jiiHY*PAH@Qp)3TN%E$C8e;#FE^%+@`Y%KKS_^F3Ra22Zq7>-7TX<)=,_,_c,6a<06LU9e3TPK8<u8m,KGWau@:U]4=7^;'hAN7^l=4K$*U5EE0*oOSFnrU>PXn*jB>0%S#59G]dZ%Ik^A'dBZ=q2;\ChQOJH+Sq72`!1eZlj/bjW6`qNmWjH\eY'HS:?$i=>5&nEgtVXl;FS%tQAhVFq,;F-[BH+INqQ?$e0%F='N[d)\erg*XPPKF$4nYMVO;WT9W:h$T1),rKPa.Sn)-beSo$4.W_)JuNp(E;tfVRoXYJdg.op7A+L>LsmjlU_.=q`C[u_8X6Gf%3%,T5Pf=o16\_5`M9`*IQ*)kbr0m3pL_ND>-&`I/(gWWF<[/9?7IcQe^j><fkLVbXS9@QHrUKVUJ0GLd3P\5q(o6*k]%?1QPkqH#%/U7MBK,>hsDip7)Q$RL85>V-::,/d',lQ@slI[CEcnR;e).Za)q4=YR4F<?9"?Pq78>kg*BQ?8d_XsF<\g6lon)#acZGD28G^C+\%OECM/8?>c[X$V!;I(njUIk0ah`E[(W=Xio<;s7plXenVjb#'sthhiQBOJ.,m*Nh4X6/2e_D/c&Gb$Lit.nB^^hrgmfKju1(iS*+D%BbZH9PM"XpQ+;j1'S1*#UIWE[hPYOo8l)GZd?I>qS2>Hr6BmkHOX5o`06#he]gABDGn]FQ"S*:-q7=F"BHC1h<Qe^tCijqeZutIi%;MU-;l4k0WNn/"l=!ib(]@9+=TWlm&-]0-u[rE\j<8*&oW![TSS08FV[d'D?f+KcF=nIt=DDZ't)d2dLdL8*mCW\h8.u,P[r]E%o%>9os2Iu5KO`''#LQpY@M@jl*O927CNMWMf].UWMgLkJZI]@j?AVP(3u=Jo__R6q:T"L:FfYUR-qFVM6^P^N)\)$@(BW`Z8lGM#1W%3kZ+^LIu<XLdOBQ.,KRZ@Ypo:!dfJf:Q:VX>L)&Dpbug/)cRckj*#rV8X18>-'Ed^Ef0`D+1=7$7<opW!P7P7Wq1H`c'W?Oi#52'%fehAJPe$TOfb?i>]#09r$$_&fT0K]:IS--B`5!6Z:L6eq"soA8mrS1VYNri#]5-$3F?A-@9ZN82]h03fJK-&'RXWtYqu'bu;m@7l%6S92>f6`hA3b9q3c6@t!YP68YjSDtL4Rpgpp!dgNoqKc\]9U;5(q4)e5Rc%P.A!6L/-^SHPj=$e#=nHdQ"se8Qon:O9?iG3kTo/L%qg?^<bXV.8m<GpHe,Wk05+=EAQD/mg>Xkb_!*5PI/*19F9U$'K)p5/`cW"Xs]95GE(4\&JY%p=Z/!iNsLSSL%@NAPnNIrt?NR<HO%4*5Qo.9TY+Ka6ZJfo53?6j^$/ZRE-]ld4$4'.)m6e%8;$,r;EKJ$QU611ZX)W=h[+l*?'?@8EtLr\E$m7A1),]eX\Pfq3Ga_&/sR%aV)t@3Mp@IGSgc&Vp&<n(ra@Gh'kZ?7,^@)X4C.5,7,>6("kMcO\IK*I54Z0rFqe+8BB/bm/V>PNmYNqD$HCE+A'!nPiSaA_u\1%%q#$[JdRc\qK:9J`f6A^QT5O/']*],_P/WsH0l_N5>%ZQ+*9G]#Iea?<)D9Yq;hhp"?B"5[<CuOnCTGfIj(Fig^9n(!I1(i5lG-sn%lV3%dgGtf+!2"0#_i?f)Lb8WmG9M*P%:g!.(I1R(-&*["`Bk(mdQm$56O7<QpZROOD6ht-B\Pj;YJZt/U`tZ5FP&X]ljYo+TK9d8%KG9N`pORT052W:6df=h>1SssEX\eK-e6VNEE_l"&,9FiO)XFX/!;tEE4b.cXYEb+!+%KoRW:]u^D&@-a0ohraR<YRe*=S`(@s10@%S`+k5@4k*9^#.s9.k+n"%kC':Wj+n'NcGU4OSc7E%c0R0me6cZ7PX#B1-?%.JM*@*LS[LWn2j.Z:rQ^&R16(4HDGEDl`%71UA^sY%,eg26/Qm.Cq=Q'L^oCl0qVIH-c'ti(Z<PN4:!`duoVuK>.:'X$A@'m$67,cQIk%N.L/OVVeePY9^"f5P`dPMVF@fL`DR.sHoqp93%ot=S5=0'nN=3KcrT)*ZCqtGM?0TBI!.3dq`+(sfbj9u39fM81-3^Y>q+H2g@Bo(*E/!]b:>DSnWU`]W=a%Wj\#&[R1nYK$L&+\j<%TF-QdEkoD+h(&sjD^5e`>g<"_g`gt(%Eesp>=gsXH\@@<rfkeV,l!F"Cf6`3TS!4E8`+MMIL^;/rLr`#ldn>e03m=/oDQ[[hi08$%](CPO#\!G?lP*hN[ip((rM/uK)G!GI]$A-XUi9>PPXHYc+h7@As+B7l(Z,1i.)FX[M^c>cRdfso(%c*@cfMU\,WX#WXi74&IJo_D%POAlZZtm*uc<p4DQZ*P2m_I2/48+jDA.-!$%3qm(^qS]WURF)62sXGUm1S62:2e!@LjHaOdAC5W^!WleX]rYHa6)-jkj.X"(60VR%4?[VBR_r&C*TWsg#+j7'S<oqHjEt3\EpP6K-T@mu?)>'WUEe@Xc(US!\B?U"Neq/Jd%9s4gf+Q/[%F.)^!amXS4V@-D`<fW^8h)K%BoDId!mdX/q:B$'9;Ec`'J-37F*4,I'M@Xh1$hUKhg@TM[i%(Xg-uiX'@Z5DNnK1dpD/g897?hUlfC?nq-L#&OOMrq(AgoC0o8lQ%c<(raF4:qar]:I\:UM^NCItEdTcf%'>FS-3P//KnC;oALh'?Cs2CV9(=1_9TltgBGZU]8^If6/#iV^:c<]ETB<%51<-E5R4LU(rY%i`THa9#DB?@r%"L:o*W%r(.U(QHCheGH!0g!$ML16u":WVAs90WjHZ.DJoPM?$D[KRd.5q('M$M5+^>Lq^u4UY1E9Lq$BI".6?Wr%.CS`k/>:(M;bs'Xi%si-Uki:55.]q!A7^KT\^#*fo'V&SJLGhe<3OK1Ej%JG]>2U`5?u,"`ACM#-Fb*q@2Q`$ZTeNK'O_a@r.nku%8Yl8V&i<gUm,Ub.=?-G2N^0[6(\_gu48>[MC5iKes0k-j.']+Mj^!^B5&bJKm::N%&?$"I-qaqq+U\U&#VZ)e"1qH%N.Iq73]XMm%b)>/ER8[6n2;LDNYusV\bjJ\e_\l=C>SRITDCVIL2'.D98_YE8$!!NBLZpJL,i&9-989jUN?0"0IYsJG[:J\fJY3Or2IK<V,<g[M%fS$;>HB\"[M+i(I^\V^)qVGiYQ&Pd-]^_OA-9G;Ncd9TL4e&V=b"(O3$*rTOjMHD:""3[7dI-&L;\1p>.kVW/'11uQ(sYFTNS<f^%M*'%HD>phr,l0NK$D'HrB6@%C,SNAL^%k;P)MjGMSLH7cDi77T7l=G&RnsEe](CiCW7sS3TEo8R3J.+kois6f1G?pM,*5@0)'G0c%(p`[)-]AD-][/P?*Jb1@j)n!]O*&tpe\>&!P_H^]Nn*`L1E<49j[0ak,<S&<V]0'PM6PFhcbYL3eI`Ir914Q.Qr.(WE0dA\f)".t%0nj,DiXeM+Ip%EOdH$M]H;<kq;lO2Y`er[%%RSq;!/`I`!!tOed`<7.5?D:l*MuOQ7_u.)e"TUEneU`3qpsA#W?aKhRdG'G#U7pL%F@I:78<5n4k-M.Y!ubO'-(g4:jn$"LF((Fc1ZRNMD&Z7/gKgbVnP73AmH7g`YFf1K2LTZ6r-<#k0MbZ%KiKZ`nPh-]U/F%ij&-<C%NN82992r(!hfLJbe!"qgL8YUjPL9@s-kX7U+fZ\@00GuqV6K[9%.d-A=HU0!'KS\r4MQ<mR7\;0TFfhU4;R_+ijirSo+LG?R\eaL%6GSB,[V!b_,:J8QkQ?!TMV^@#7qiKp[7,qY??R-eO1$!M%VLMa!TQc_[b,<F"]U\Pi7I%bJ_<6r?S,+p@eUK71c%?WYhl<\EhA$U%4':"!Cfk=8Plj&c1);H%*CY>3dS9B%_qMTep"\ososU@2++=04QPC0W>VC^m79[b)d3X,=FuA]6mad*f[\o]LZ_mC.j9AF&l8JN)%\=:;ZA.9`88V`+&0@;&&kk:X_F4C`*:IPj$[_J8%Yh#V,!r$T49?)'CUe=CVckgeH1P%EM>m]LX889"lHo-4mph#iB>UK9A:k9p\%D%!RVh)hcOJ:Ouu*bLFRCaD2>(u:$_P0/a>LHe"/e;EI7rb.8gW'1_KC!BKNMYu\JU8NRD=T5[H'N/K=K%R6d>(c'%*o<bJ^TP#u%&<4_J,t,PC,KMt"9.FK;8&1Le+R>@()UR$Ja$n[A4_+ZA-IDo8T-jB_>0n=,>.\k6E//ia$[hLoCr_pR*\`?6Xqt0DX\I&@-RV\V%Vg-Wtjp%^Pk`Zifg<=184+MB?#EN!o3'MB!6F3"T")1l9D#p_jL<iYl<nE^Nkt9a$P>np+Q_lj-qq,TZMNkeqE=tJ0C)4Jm,#^jd%kupB#Id2olKZGD6Vdjb%CFiIYXH3([9pX1TpC0kAVLMcXpf2*j'OSXIXh-gJ$2okp<;j1j()?qN&pJk?O'&;n@N$C>EQteh4=Sqn%4[e*ujgttZZq#1/(7$A6p3DN;=2I"nkt+][cGT9,)ogZ6ho`5gEGVX&p2DY34+7a%r"AkdPN@e5h*pW`]uc.Sg?W<6,e&0ukRr1!%-NWCVmcqZ8gZP0bHpljR1b("<W+#1rPfiO/:DW"?PUQ<[C1L:Q^ggc/#i(8(3\8.j0K-?]gC!b..X=oZGaYtrC'W0;:6&.870A6j%WJr`[c!cT.42b.6i;#rOP/sF+\OLDd8k`(#aO&Hj&=IXP-F;5]n3VJh_gm?P@Y[\Ka(DfsRuK4a?A8U(=:q:CYOXA>T1797>dLa,%0Z_:F2n=Bd<1h&D8QD+UL[EW^CT=WPb<$VpHI<tTP;!9<YiTDqN$G'U)OWsA%uI"n:6kf2.?JL(<!Fjm;[.H-"XnJGTZ$nI<X.r\%BecFV:ZOUP+a!5Z'>AH3`%C=eTiO'=A&hDS"hm46YF-E@*Rf@[)lBOlFPaeDWQNWtR%4@1?f1hW9)._K9qHhNEbjsmWkm`(6UXTT%[6Q]rX3YV9U87O1f3\-<Fl6?F\':AC?:uG*3d<PAfjTeA.Y/+On]Gfj8C*\\llg\qRViH+d!G-"/2lC/'?*K'cFYlo&M1K+D9Ldi%\$&Ph^:ILWT"DQf?hVuH*,B9:8Dj8n(IjV!0C>3q*Ri+Lro%VmA-UZb3)I2un-32$E"cLZE"b^1Df;*c]7'>jJ6V?jF14?W[lsKY%#=]'S[M4\Z5g]fAZCN?5]lWo5B(C51jCHYLru8[M=)fO$eP@3%=3=Oq>,l\r;kbT]%q!%Kk^53p]RG17J)fO.J2`b?N1*Yc$7_E*%4CSHhU:Cp?l;PY6(R_IU3I^'0&&3],b$=;PL<5U4.V;5JRqdRORd'ODa>X%WFl*i<l81dAgkFEV3JO!QU*ZaaX4eTET+j;.Jd&?G%2+>g$Zo#8H@i394bQcPjj>Nq)?G^';E@]!DlH\`ZiXqpHX90S(V/#&8`-&elBf<=]KPU`Y5ul_\F-:3l6W2F;,;_bQ9"\AD3"<5'%I(H3?KNo%9\k-5CH&cY;&l8O3#ktt#G=A+[&D;+61@P1P[ed1\<o7-74$U\jot<4YOslRR.^N&#L"jq_)m4/iP%bF%W38\0Ek?8W%W/I$ao>M\EN2["[Kr7:81TH0ePEY?;OUo)RA[;=]ANag&Y=1-6n+Yp!L!hOUc[aVarV/p8)PV`!ChPft*LBT$jRI]tWdT@3M<\do%T48#64LZo&o8c\a<+Ybr6r4i[HRFF7I00pKMGt"@+HM[69'qNgSXE<*:8t(a0uZ,+g)@-V?VkXLTVU;3Q`"QPAoqLG[IbD:\P_b?%(Bq,;,=30Y`PQ-Z^98#86!Y^"ntSa>n/aeW@M2:WBVTCJ?-u`87%aD;YQ#sKE??(DnYC:Zi`]QYN*:>^H+E0gq',J%n_Zq%7GhoV%@DJM-2I2GlO8<:A@*k*XLTWrd!+rrHO'A%e@rf<U]M&VX<9!6@,-:I0E&cc',e>4EjTi(FIKZ$L-cBKTCiYepB_%04plc[j<HZq0%bpstN;iDDACcXj/rYL-Cp]'sH[q#!Lem]+J4\#N*dm0VPoC)r88qN69P@Pp$<6/\`(?d1()H]t9kc=;>,-+Ot8DR*1P`7_AZn]l3%aN%rP3bZ5eNZO7`p[9)94dGBH8$k82nk(?fhebiqPM_R_&k[4iIJHf"]6Y(N:>NV<*H+m?ggi`8!aJ2TS6GF.$gt`Yqn:hVYbRfa%SLpt=biuNE-';^4"R9Nd$cTsIf<kl0K\4^M5&s6UBMNmW9QS57HO?.Srm?7qh(G<QN\>=;Vb?7>F5i,Nr]@aOe*_M]3r@kA5#t)B%Uu9Y]R(U\MI+4sD?L-QHUj:JeWfd&6Ql#^+>Z+.m8\^SLO%m1S&&1r.^/D!qhhPQGS"K0#YOCC6(o)Pf`GXOS/OD$/XN7m])V=?m%8&&?]?X+1M>U7W#iYOV:6hknNGg:lVjcn(O5&=tPKCElLR(_%3HlI_c)q]NQR.a4fIN)YT6A!E\N+KbWeCSL2SSb=&f@nGND+t<p%TIIJ86=/!#j%+mGI+orN?_+`h#YUuH?#M7JFN(Ac0%%ms<9ok>f!5%Z0DbMuj:.8Y&+TLSZL<cia=5suakJ+5RfbZhpE+i5>eds%%m*7\Kqs[k(nl<SSUq?qG^n"!"J9(8RbGP_"FAn$%<tFSUa?XOTCHI\\SNmULRcVF"@4(rb!KIFt-e5-X@(3,`csH@!"s/kh>Z=UW%Nd5M,ARHT&TYNmPqR?_*J.Q,@@-#@-P,rfl'M$4IEsMgOkSWA%FGRq=Ftr<oSZ3X1;SHJSF$cQ:$h:Sl.`TbrgL"=*34g9)47:9V%ac"BZMeg-Nh'9q'U(<smBnSL)h1>1T'WA:JmZ*;aj)P:g(_DsO.Sk#9Mq>k4[0p!aS*0!uU9oR,5LqCHE92XVjgcQ\oeb("?QnR1%<t.g1!l$uL$UIRY%=mW7&1HUb!+U;3+<(96"\cVsMmC8A(V_Qo_jEa)q'7Wb3SqtJPjINI_&E5lgGeZG2o>@#7I0Ho^S.f,;iQld%Hdn>3UNMe*r+rF,\8/^[#64I<l+Ht!/03X.Yt8i8H_-3Ulc]1h\7>8SOI[#6mKr<:o-FIbe0,C+fWXRWpFkfK^DJi+O$MQ^O?ia`%gTj-T%M"45B,6dB'ZjUnfH_Xs*>'T4Lar'.=Y]l8J)ncd7l^pP?#-idR=ZE3fk6<Rn7.MaL(_f5'LHI5(BtgI<T=#!S6"1W<Ta/R%e9Ur/Vp=VsYH^m`qA*5Gd%t*/FOk=J^-A>J&ts*C*qPJO0B^EhIW^mi=abj:GE$bO618!`,#QJ%F,[Z9RZm2]*340'ol2j:[7Ypm%4[1Rs[m,7PWlG:mJGX_C0rT$b3laHWpnKf0nOf'@BDGmu0^]SZO--8nKBku5;\A"4s0RY(>Sa+b6sR>rpQd9^o>uM$;Cf'n^C?<%%cH_c-!s<Hn:fa&abe"D.Z=4n:PBU0nA_MNb6TBlphcrnG:5sd^s,-<!iI!cTrMnkAo=<l=q%l3mMZfNIL9%o!In%@B%\4'lq/$PJ%ruClAA#RZ<`4Rs^%72i(H&\M>%3'q8$rs9Hg.(0B6\7=$k1a_]>E+?C`ir=GV))YA@0:0NJ=(*\V$3+m0>edIk+\bo)oF=TqOPV;%AT/Fm'pOS2+D##0K[Y]WLn[0p%7CW(ln5h0*E8Wi$6kU#^qABLCn#>LM8bZCC/H%j#`Qo]W/s]20`/CiHm6,hSY=#TeB4r;>nZSS%T:PS!J<4q;VJ$MKH+rY^LPT]j\*q$k;FnCPXaS'uO^IbG"en1%H`QeU>fM1kc39Pb"Ou')ql^0)%lVcS@kF/[[_tfNGH-\nL:_K1%C_!AiTG3Th-<.M>*)g"!6N3q\pm#qM)!"7hd?^\E6RD.5q8BB:TY#m2a=4UQbI$0sL>5#)V^Oi>("+EL'sT#`@8=i8dpebJnD?It%LY'9@5Z5Ic/X&7QL'3#fcDN8^&nf>(?ip0b8mgWpDRm_D"AJ,C\tOZ`EXAkM(GbCU6_\@*?17<`^#Pk6X2`!_:A@;9Y?fDg<M\nk%f>7nB@HuZA)t-)J]#7Q[b`SM=I7=c7%u(s63;?mGGKB3-<Q]L[$K(6oH2VL9hT52cb;tIOb)_<Y`s^[fg;_$S_Fnle9Rph>2Yto@%NnQ[>NdSje+dfBlTlS)P[Z]dG3aq6.OK.K0C1*Q3PQrh#6FMT=k0.]n:8]YFL)*sIX430taIpcjV%lTZVP-=6)0qROLK3T3;Pd^7%)SEO$a)Hd<Mk[.C,:c4^"6!S5'W+\Nq]cK]7g*M65_(D+I2Y:@V[7/J#`FQc&8fd)mlci`oMYicG99"D%R/X-0L/a)IdGeN,)3^\%cW8]Om0HR"pdur/o+E6F=kY582:`:&4X.[g4X]'RMJY3Rj]HD*ZE$dKDWB.DmqtUn]mFTfjH='HhI0gjFSA`)[moXNM6p:f\6<;_%+9Wl;`IX_gEE_[pgC_!?/\,`sb3nE"D?f8_4nZub'S?P,pu?Dqn3)Xq&\J"K\rPk&;ctjF2C\QLG:N@LVc8j$^2m;_EXS#!?$XYk%fYc_FZj:<=+@Ss>%j2t9J6Q1e6?3<P?Ya`8]t4NNGm("]0asj?D'$;&>=]$mB3qaRXUWT6@?AQb*e%uUUH6@l/>l#Y5&P;nG4;OX%*(pQH-6auZ2$B,*T>mf<J)=\CDQi)Lbia<%Hm"Si-]r=U`dM[Dbe];ofcsAX3*\u?74^8)+*pG90GjLGVk0IEN:<.'Wt>]d2<[i"%j0Z^FT2_Oq2.c;i."S9BTJj5q5O]"he*(=_b\V=/agO4uB4uqcghk3bE,f]F@s?H8dC;gt;;0D"&[`2'97$dQNRM<=`<ZLF+Dl9d%6A/9',4l:cr=Zr#OXHfrTWJ@;/!7Y*V.ePkE"hUk]_"uQ+^'sVRUEhgp!(Cn7D&FN7DA,ehRc!R"!.=5[_$4$ob&`I0DVM#F[M+1%$N,]GWJ4Ps$KajX9kHp9*Zp(qio?,MR[V>@o`O,tC$'[qc>7lD'gNC<68aVp]1%<\V.-K[@-22Daps@PDDMlo&@MQh6'5)((>JTf%\BXVTEUN97o-bZb6fW3Xqm00f5;h#G7"?FKG*e9^UYCC\UYpo#7#GQJ?kblZO%:Q=e"32>"'?XgJgdf6j%bNQI[4hlB(J)B%j6W5%3DUP/./'DE0bTlE]L(0(d2gaeY3gCRqr+WR\PG8/p`-!`RkFUXOiO<.4i0?>q\f\\H%!$M*^>XN*Pc'rP@im_!?l-FmX.:bSfd+i%E?W!o5RiQl%b?/&X,<r4"o+C0-nFB+la_Zt:g2?uaW`s9\:3.pNHsE;XdE5]YX:l<3Te6fKJ0-]$tBO6OsZ,Vk#&(+'lM;R;'!#?%j/L*<)UmE?q+op>=r@d1%dF!QK-Kf,MP@CLSpBP<:JiD"a>).kHQWGf5mEn-?A\aNdm.B_+SV;oTd=e5M8jCNfqon618cO)OXFMe%W_*d\LB.Y$UNdC.9ifQD6q37>pQ(\T1)\.Gk_EZJ8(U\nUW)]J>4[(JKMT(O2C"M56["u*aM+0gOpa91`U@Di;h6cHQr3Ck":["l%Nd/`F0L->(`_mQd5G[#9#hlZ;fHZ0B!lO-'9n7.[HuUnId-)fR6IP#gdRu!-)D+>PRgNe7J]ULh92kJkptR6Zloip?$3qIl]`;GV%h*6"g>\i)L=mqAW]R.KTf$t3tFe`9_?=FnbftQ)h^[GER;/u+d=oFuU?2?iGMA.oiE=/Hh=6'I32mgUSe?26r7RV9f[+8Z68r%Hu%,aU+08i:kKUcaFuKI'A.Tkk_oR%>Lb3a@5tEi`5Ub,9EE6=2.pBI'A+iM70YiS&Sn6&JH]kG#>_Ru4SS'cTo7W75L_:@'%.O*rAt%<3a[Oq:b!+JtZ.Wm;@on$iG'6^tQ5bglnCR8V@T_O,4mtb'#t71W5]K'#J&7'%f%]aGE](?4P,3$+'L%^;EYgqGCA26RcU3_]H:P%k:[a44i@%eL_l3mf_O!`kGRu,;t%dF3lT3<9BY/3Dl,?9RE7XD&7m-4!gWrpDd*l#G9JL_fP:o_3^9-(:9@GjYmmI1OW9`cl9$[0%?_[LT<AVgV*;a/VAhDDJ^Dp1IiK=>.;*S*kb&ra-[4LVp+?ekuiHiOi$OMe\*Rl?WS7Ho*OWIYW`T]]QNB9U.N='(eN:L(!$gI89%-83umIKoN?B(1KhGA1FJ$[qEM8A_[W'P;oZjLYnBV%Zb=_+O!?F9K5m]h7&'0K_5S*..UVm^(3GN;FTE=pgsO'W28/LQe5iW`Q-.%E8A<c`;ifU9-6P`,7.tW!Xn*WBnBL.dscpE&hSd74$<Mj4]6gu/`@Yc*-2`Znf;mk9HfrjrXEn0itNZk_Fo$b8Ek-"Ir6?uU=Xb@%VXP&(/cj<Fj0C9(\:*<g=q,`k.ZV#F2>d!a@!HI)cE)@)5mi!Sc3hX$ie3Dqj7&D03?,6km)3?<@']B\<@pn5*Es+u=]Oj/,O-0i%kWU>qMHhn@Z'R.W/nTfK;EQlKs)%&(a0Zp6g;aVDOHO&r7YRjO$&'/S!o5RDZSq$JTn0QW\r8=@jgJ_g%\#KBg)Mg)@mk@O*5=B-%cc&0V\PK*bj5`D<+Yl/PS2&W:4VEGV<ap'JG-_OSdaI9M6<670GnC>g/dZ%*j&TFNJgdcPTf7T5LX7(hNC_b0?lEXm_j6)rbUYHs%M;O.^3MctS)Bt0bV6eC2V?i<tE]m,.%i!s_Q;OCZBU4FPX*W8!CLK;U=q]BE_r)aj2b,h1i^m6`/]o^^0:jhrdBQ`ae+,]4kMoGJ%)/`F;3W'>N[iW=i[)HE2;Vo::V^>&,7I?#+@K>7F3n,4_O0Ht'9DtS-c&?SY@*2J%;6P+;_d4>cD:<tW+\ndJcm:Dtbn<*LYB`T.%HE#MK@pWk2idTk+`:hjGg<tq8D<5"aXhg!Qm:;OT9!-)HRA8MK$+uK=bhh)qqRG.p_OQ_6Qb"?K;%'428C7htMPada\%USk,bk-L%mrAfeq\Ftaoifc!'eXRHXX-[AZ**9VldA,FoCV9B%H=C84Jg8Z&;SqV:R@L;3:\JEOBZ1%8T?SApK=F1C!7fd0NOWnmV>fd/`(FQ%<FpeD:"2b.6bEh<s5^F`m+4tTH7K-D=8;23Wt;eu0?H+B9[s2+AW8kje5CudAZc;s&J#BA`RMu/*R9o4WG_#o7pG[@[]#H=RA/^S%(Ap)2a#<6GAU=)3o5U<^[Z!*!;tg2@.D.$@dSk%5MQ/g"*nee.#heHh^k;826FuMo\W=UV(*0^k^mSZ'rE-#pk>?.b^'/A44;"h+%KF""5b7oo#X[/K^U\VI1Rqc3LJ*&ah(`9g2FE7e2I,ME$BSjlDE/h#H5:_?e&qH``\bY<Vae<.FYSOFI7a5]Ys$TpU?EnP2E.`u8%0ICChen+_5oX;,Jnq_dt!WT5@M@c(=?pLhc/4u$=*<C?t3hVSYB9HMhcL2It\!m9O(4K#u9>jiiO]1$jiRm*u+H.e&^7r!sD)qno%G(.)o"*"GNnCfM+>tFKN5-&1dbNl'VM9;qch"6MIr]Br.kAE?54+5:5m%oSKX&3kD:em(UO;B)2Wgm)aAb%#%.VCEc?u08>Lj)$n%h.55YVB>4+k9_jJacUpAmYo4[BX2,n9]s#?ank)Z6q4+W\sDp[Z?jH8>Mi\Kac&mrG!1"kC;0%mIQHe&.n\&OM*EtoC?_Hk2puUa%>@U,[RT4ctIOf\JNP)A4^U1lU'WqJ]WJjs^M-"m!'#*1TPZd'F"-DD)s&++=q97<:@\D6MPQ,)NR@',q2bp[qdPdIU-2=eC[/c,8%U4c8./Zaq.3JMEY<n-C_J`H)ng('+Z@G1d<pW4+HDV`WNfLla9?,I4lq^$J&a5P'XTtZ)qDg2`"T@@8C(&1AN#9pm>F#YOhFk+]l%oFTt)CR5GE+:=@jL;MoF'rY^7NX#GsY#q5geF@=9jhKYCaP()#-t^Vr)Y74mEnh_5Gj<-*Yet!T&!QRq#N@10,ZWoE2.4aoNFVSW%3Bk`KO[$LUWF>bE]`ue$^=1hH\td:[all_OF/A)YNt-3ciG'L*:ZI-)X[EMo=\;(k-CNY"!iW.3q%^b2_+5)nHtQ8)iJ2%''F]NI%dHA:`?HKcKDU&;-nGCdA4g3`:)hQo?KnQCAC.%(C2BX/\6:DJ4'\L$aPkH@)!PK\F=\GQ%OMVW46?tHXgKng1M<7l^E%[h,CS\ra%&Cs,8f,@6@rm?g`90r6[mInoWrqWEEqK^!3q!JA0FhP(YRg?g*-CL.L"b&Lp=W5H2EOApo`?1\C$%0e(D:EP[ZZpOCiNEZ4"71I7%(b.O\bLS&JbI`;HY,:E5-ip0?!NNFI@9<]RTIIOJ+Ho45?'+eBTZeYq8'6``1i@KMbbQ:8WQ8,)Ti'c:"=VCu#b"G^&)iM3(1S,5%bf*]N<`miT94H1Ij$[.5eTj3uj[aiO=GL.fJ,<oEP)MH"`[NLaj@%F8V!=)YTbM2+Hl<JM$/W?s]op@`-0D!amu'&<?VL)&k&BuZ%$-IlDoF^*J=@.j8_@@0R3n7iL7:g^H'c/@634sQZ%VU2I,pG-K,.i<G/gt?(9>P9nRgY["?3V1!oQqS1G>Y[1&K_H*V/gHlSe>b(%ONu"E=:u9q2uGei;j.pjp81K)qr/nQEV55YK00mX+-rT92$rOpLIQY*gR3-`\J6BqEr@]KTB9_5]"3\bZ/t?5N[caQbm.qgi>($<%*4O_qg)0&,0-pGg4:)VE7LB@P#RX[-,`k)C>g5?aL_^.b1&FYBfF&;S@SScW23>Uu,$,n6G!pf648P@$[,lO"iRe"\R0&1mhh-Ss%gP2=E%DW[]o=<+kjD]QHWJm_dNn9\rYE*_aRs!76&Nl@/180_[n/KX&(J&o.CAa<daEKU,9Sk8C2n'8-kI%Z/8Ia`fi^3m%`C]4g%7.obq#BH3u2>5F[mBJKB=$A`pa]L$3:N?7fVb3gmg<):rc`?"0`qE+MWbaU:9FXb#N.%'_0;1eZ"&VaP5RiSuM@1!M`o8C3-ct3i%mnI&:a(!Us(f3YYIQo4!%W0`lVE]276l%c)QZ=%8@:rH!'K_!0?Z)'kfTC1%k]V3$"AR$bgh#[`06d`r?,@.p`k,)/&E88kmNKLX%&r(=sR93/?k>j&'Wnh/&OI*9AnPT:j/CYcVJ"O*M`kGo,V)1j+kkK#5T4Z)"CEnq+&1^E9"!KXEQVd<+4-a&uGsaMh<?O,?j=\l?%]E]slEG.F0-(U/h-jGmVG..[c(K66LecuGi*0K;HWi5*b@4Eo;=/O&,Hd#QZHIs!(:qTOC>'6;SF8.C)0ki0kC.-9>HL,^]E!](r%lmKBd)'F6'e'k:c^(e)G8!pY@_mZsA2R\sn@1pm+rKNel2ji6%M,YGT=/=^4&u(EU2V_*WEeBS4:8;gEOgCnUm\Uhg`*jA#!6ht@%Gru#P)rYcUk&J!F(iGIj0?5KYol60EO\_l+)-^Y$3i+GV8;1>h[R@q;$ma<h\Lm;@DJraRq9eqTG@;kJEdO5HFIei/O%tgd\JdD\%[pJl9ceUFK>Fs"'XnS0$2OL=2:%[]dbFk_fhTJM!9B:D8@U%\q[R=2$m_WZ-os3,Kp!'Q/\#-:JDS:pO4nnQg62nEN\K!QYepOWR%g2T1]q>icPDjj/oqG4kS;tRp%C)k^6Yco)+b`CNQc_oSW#mGj;**<\"L`Y/LJ%Mn`"G7JB*tGIg3;GTV@\@j^!ru8B^P!)hm0K!j%n&QVSkji-]q-..->PWD=0:mOjgQ/sf/'J>\PY\A;o8N,Vi_(\^m8Z_S>JXn5:fk"l4gZY41?"-G=h;`'@nN!`/JUa!/cgBLMM;nU%FY)HY=!WX1:XQ'3SO-qaDpH8W*rRo#5W^sqZ49DOVD=Bn@AuQh!*OT'G\U.'qClef>.)iHrfu/R^W8<)f"dQ-X$[Fh<_&ErXbnlj%#Z8uUft$=]D&Nn$0;0'"("S"oYu46*Iie,U1GeLTm+m!4=736D^&9uB9BF7hDs/saR<34;<oOI4_J6BZiT/;0IcX.GJ+(,hZ-t]#%j&@?JmPUG<](KLY[:'KWZ6ff3E)QPa'QOd%PhTuRbq$Np/igiA"f&?(KqiGX+RXP[?trr:(G*M\Ph-&,Y2u[1f?qn@ZHc)d>g$J\%2DA]\A,^agIZL>n7mmJJq:Su3PT0bK+#fl*<A4L(K<g"4V!uRbEZF0fH9Zm/2.G(qra9Jr3VmX^]4C6FqXl-d;;Z>>UVU"GC0dH<%U@ZF+M:ZfMn#k8*Fng_GVS/AR/]u@1BKZT$*h5u/q\6d#Kp7u_A`;Enrh],\q8JPDg?SqulUN-1Hg]!SD$-K*[:K!e5k#BQMc\&)%+bpiSJV.mQ4>AK3@PGuiZ46XRX'DaG066aEHoP>s2W`f)k!r!=PZ2Y2;$/>"r3Z[O.ej8>'HX-F=3R2KSNF1!2?*H3-dUP))Z21M%2tb&$;\H&8,)1JC8PK:>UdjLI<g2>5`roC]1bgF`,9J)HOoBC&G#R;C&bdJ?DY%NK\/X2t&Dujj9A?oFO`+#mFJYTV@@*c$lDr(h%!CQ4WllO]P*"RC/9Q5a^.^:%jOrh@dQY&#.9s[@T70T$'Fpc0OQf3U.GI(.(rZWbsiPDUhBIM&FbH]2pCo)N^8qi"=q]#id;#s^L%KN>JD,aaLU.Ws('bIOFrF=*jfcdFhU@NX:Tr+"ui'TPH`Ee8,ukEYcfUs'5B%NE__(=3:j"a9YWNb3mN[k2`aV>D3mD.>a6(``.Q%`?GN\j-PNQlCYB;\&n0@mgc:$?]H?B<i(-%-C+(7J\D$P"np(?lXe#U2jqp:?]@0Uh.*8\^9LOr9\HQ3i=>?im_\8==pn+fU%h1`%beh$qIIm6p'].[q(0nr*mpGO)So="D?GLK/GQFFH5n\RAgY'lb\$)+9gQ08$s.\s(^Ged"1S.s6r0MKs4I]^'qq!@ZBe@$sWukBG%^UG],=?eb@Ja[qEn'_0UqNmtaUCP%\GuI6A'9NCiL+48327`"pH(=FR*Sc%b'^G11626td:nTe-mB>$/,AOp]c+I!]jJ\:mp3E8p%-'V>uBBA>5a\F,&OSFhc/,g$V>98gslM/Urc]*$-#<.;d[%S87.+."NVlkIrW0$WK42OCtO('<a:\)aK`cI%uEU>ZE]'i8mK]b7T%8If_I.'A[pe]"2L^P4KUUF,Hm2O6p2!2ZLgBM*VFq^e*(E2K-35s:6@9)HgE=p$6[A'9oXqF/06-i1snL"+>6Z=G`Y;6@e..Ki(K%fGgo-\dY?kbg:s"6:2H<%>:/1Z72#/&/uc:g&P$YMjkpUn]I_^U7B^\I*6MY2c?);$,#_LB9mi-rTr"Q.rRSKr8khA;t7S/35<aQ%W4+GW:bsH=eO%e-mNaF1If.kKhK]Zmq^?-gSQg3k#><6W-V8@hC90;nU<0?Tk%Mm;PuB"M&Oi9QXg:Q/#JFdL]%#At:/0<^3Y&Hg%O'+pr)&2Dd;3KQ/lIC%d:e-bW!V4KL4tA9q=Qt#9bGC4mdJ78uG4qNrce6@Ohd=u7qG-n?mCP\G6K,Hn.+l\ro=Z6_aRqi>l`a8-%G?5O'OjQr<6a-daH27FV^_c6GcG?T8n`pG_X(Pq>Ki"KgJOYAU;LoE8I>T?#AA=nLjdlRfNH@ER'/Is#+OEe#&hI0[OZ"QdJW1gA%8%jAnlE3)%eTZM2l7<7,Qr-m"X(-DC>k7'o(I*&u_#XB\1^$l*MtO$-rVnJ;>BXgEZE:h`s5A&l6<?4EGX!+sT^lD#;G,:995\$<%)cIlLFcd&jlL.kcN&`+lkMA+nZ4gF8RCQD#Gccet*((q$TtPL=$@H4iAXK&L7'*<V6gLF,.n#hIQ9NM>P\mGJ;W!O,*X&],T*C'N%P@ieB(o.LP7pk\^b'L2#C5%P`)Vkh)#d67]:XrGmT.AhjjZ#KKl%jb:R!G;S/WeIOD:>nUD\QMpjE&9`au0()i9?(@@-RF?#OTcV%\''kq4`^HS:EQJ*ZRIu>6Nnnp_ob)&U;HBndU@DG&amRQ%Ge,L5XTr8\KI4)VQ4'8lc1Z@7S"*:UW#T4n%QKj8Nk^F["rEhp$U?W%igX!kp[@fPG&n1H`[M$@o2;^5rEL=/ms(>:[hIMOf?#*jmcT.7:FmpM^T4eMG%6;@:Vn:I:@Hb]B`"WQ#$0@R7n<<eV8m#I\B?c,%(9pkJG-q3u>_fIc*A>$VXA)]\F[J<FCfW46A"j$+ZlHKXb+>AE@pnqF&%bB_bhNW:&9QGVClL=G;MJkapCZ)%,8u`<:ml$K\"WYT%U.R5QGI"gq"(U#GbsHgYZ`]r=>Ke[$)5_B.Dun"nWaqN`!ZA8=<9ZGJoR0i>C>OO76sdffmL6/9'[dnA&MU'7Hm*g^6)3'n=^A+8%K5?rINTY0[4tIEZA_bSKD$rhlhC2,MfkiBp&8"M!1=?U.O`u41YXhgAbC$SL*qZ2>BI]ZcXe\O]Ng2.V/.uZS)sGE0T-io)WGs?D%Z'm*f4>S"OCrqZO88,$Wo3WXI?at:8qbMT3lNKYXH8=T""^#h"iW><rDEcKGf(7'f,(+HfmKf+fr=7d2#uncpiZRJi$thF\#W%c<%k5k6[7G"#.=bV*o8)Z?R$gA;GNC\qrj*+&"+FPM='-muE=X+Ck"(WlNTQ8dbBTb,PKML)4ASW(Y'^>R,?1!g2oL[*SmXBua*UZDh%`fs6f+%66O:+IuqEf1lBHRp[."[+d)BZPgWQTSi=4*2UQX4+cV;-IZmge5oXHS7/a4?6dWA:<ZoUN@>dO"e?t;t2PPr9P_&/rPB4%1b"IhAmZ-fO4'DQ?!5#GTl&Fa5mJkt3[,`"TBMA>Nst^Cm[$V\B7nFpK':Var$=sVQ(c!0$f2QMhQ2Ygp6!m,Pi_-cM<Lt!k*0lk%6)N@Nb1[N^.-oE`EC$H@CN8"Kl=PTd5U[#h!/5(hfXo78CXV.U<&kk-r1*Qu6$H5XXQS8PWOtsJ(b?g-:mBda-Sru]%oO23]R?$-%Lek=XS(U\G.$KB]foZ*XUuk6FqAa)=1J"C6l?(mGbr$PC*>'Ms!&r[LqVe[DJLE=Vl,4>t1PMnGe^7d]MIOB"$jp'C)b(F-4dfHl%Vem@6;OITge2L#s(WahFP,sV(@%QLKk:\2CYmXhn>/VgW_lq;]jI)(,&T*3&/!S>3AZ?=:CS=b!AR:;$!p6Dd!+=c3'[`qWc0d/M%3X9?`OFP@9bF&=R"AsJJHKp:0'Mg$HS\J]\[K0[f<?)uFLO#%CCUJblMU@F@\ZS2HVPbH;i`m`r0lT<f1(_'`B)N;7<i*8T!Pf4X%<<%AAN/=>Rc0LY_s-sBJM0'\K\^B[#<"+aL_<.(sd7#g0Y1%fj^Oq_m7Ve"ZrG]lS>j\X%s1d!Y?GO:rcLDaJ93l^;:c7*2i0fRh%&!:[r=F38^f9r4C,:0QCS.O:/UMIuo,%%>#b*N+%:75Gd(!3Ce(tk>4)(rMJs-ei79)Wsa]i1FT=e7]C*nNu(kIo;*G+HCqr#r^`%)Z`YaW(L#OLh]P;"AaK28J2QU:Q/BFl8a:sb-3eS%7)8U1H^=F+-qgV3J1J,MXhug9b7UYO)IWj3:phJbMsBI7h%.?VL=I-(P\M+%ICq+ZS(+340;-+]cj`<_A]/*j<-<%Dn:<"`H2S'qW;$p2l/O3[:i+B=T;W-!-m<-q/3PDSZED9c?DXf:$cIT2Y17b&+_ia!>p2Tm%TGb1P#/h4nbu[4T$;IF#jsr,t\idI@'$sI5>DiMVd2=9j/`pSg3bFe&G>*.3M8ZQ_Nuk5G8th$aY%t=oUZ\2)+,99_4;-.kBC?(h%2XtH`ejHgg;IlfKdn8\Mm"C+<cEPlu,@IH@a`aA*"VAe6l%hK0M,UjUK7o'`@;=UFR)K62]!HWWq8:W_4nj)%-Si'KJRhcj)N'\;%ENcXa]6OHaEAq/mqLIiiqB55;dKW0&S9'?eU-9M"55%b1N-'rfO<V[2mmMe`)+:^PDKI40Fo[1l0IE2KXKfS$%ALZ5;[?%\-iP,F%)cFh'L7g8<8Z5'ultoVm]\.WT>r"O<4+4+s>KlGOi<W\_;nJqKcX-k50>"2^ZsL:s_dE\&WBSP1)s.O?XF[7"mWXhhS+E>`1d&FE%f+4)B@9p5N5)6,(50rJ>#(u1/>S4Rm>_j>>OG4YG?Z]_l78%\%>*"r&0Y"8/\q3V4[T#2u@lud9"@WZG<"K3#bp!#'V@#(`eQogG%'LCgcif*FEJsB)F"0)9WE9Q(Bi9!^l?,a=;$P_A`CHXCH?5WuO!!>0sh0L(Z9*>D'0dm+Wo?ebs#kB`qH)')X=?_fpC`3`<O\^-]%0nWV.G\I6K7oSTp-e_h5=>Trd17q[D@2;g#==,Z`];,p]j=gefg]^.JhN]EP89a5-nZ'k5!X\H@63*t:30j+iYlL*"L=A#IJ<YbA%)rqVe9erY;Lfi#%J\=5-cG1`cEXc47\g-EM+@lY.5(W2M1PAoVe?+MsG*1g87sZ3D]V2P8&7R%$"SuAfH\@L:6[9/AB3'p#l&2*R%R/p;S7;d(@F^ZmmZVq-49!AL09,D:Q*WfTFi!fui]FZbo`H7Q1l%t&\+\X8o>C9PsJ8ajA6J\&M"+eT3bjWNTSit`iJ]1nT<4(W!%K-D5$hoR_4-MtnmkpW(XK]_7p.c)icbG?^da,>eK^)Atn'Ff^U7coA-r<=VC@$%=2\e=LL#DEd?lo/)=^7,,_dCO0j@6df]fEbi>%)$bO%HUX=_<clAYJ#92JP@8GUXO#5uj'l"p0FulK!,q(lc*eS>V7J-BH1FSG$t+eZY+7mf1k]iKHn0=p21`XF[O*;a<+3,mGdqjq%/tn)@er<<:96sXClWG*Z88V=_+K[-2m`8tO/Z[Y^\_00(X;p9G#G/smB<?EmM$9'EA18-[Ip,t*>kc28VmZcAO7#ef8%R_=PuV+[%1'D2_EAQFA!EiMfAnhta6rYcSeD7pM*`J`2/Tf?RAQ<>Xa!t01O@DPUQog(<KdS>m]#Cja<b8Vje&<:MB*&,BjP[?$hNe["jDP:8%q+9Y->cV$D$=miG6YqT-\ooN0dh?Tm_aj<^&r71n<7G80`FDD#R^q^5P#9Yr7AC#.;3ub;fRenks7HP&h5,tQ08@qF!u'4#$;`[,%"0_DjoJ86aFunpgW&c9(%kO!`]b,s\$T9=.Ht$e*efbCe.(3\O9S83U-8E2*=ZBP@PqM+36b<[Wn8aMeDCI,n2QS1/%jQE-2sKZ[%S3!h$8W\3"Q(^53:8,X6>Y*,<pnoG8&KV@H1?`L(_h0@p%hf,'lpaZqO^jZ/*8RbpZ1s!Ki95(?V1d*3JY._uBTgTFE%mXNM5>1d%Ob+[c@,PND04`'3!Uq(Sc_,L8q#lb6IFBb"oqW8\0/,Mlr1@HZ+V5M4,]X*#*/\9C81%Cn.E7hT9Z;$s1(1^m.1K==cK:3Po$:`[%kLr/ErJ*76E?!*$a;TiQD3Q^86AA=\U<V\4A.5:OdMpGT"^ehYI`\7u!S`m7jn`)n42<\"[ojb%q5:UAoc:a8R>s+iP<e8]M;bDs%EN2@ST!!ZN@bS8B&B;aU=iDc1^r4=,6)1uoDiD//^<(N,.#SJ4,sb"E1>^&T4:R=GMfqV&0-RBd94pVrRB`4s=24^4.;2nC.E[ki%HfZd[V`a,?_tn?*p9=Z=3iIDo'Ip/3$'Fdk[NWGuGWA$b"=d5CR%&UmST.e?Dh+S-_-kNDh'TO`:Qhn[nRg;88nlJrI+=l4;PXd/%FjrL.a#3+3Xjcu\-YsELbj!,5(O.dR,o\F7L;u1Z\37`=\CUkt.B7AQK9nnk[&fq5(dfL+FiBG'=jSS`"p7>#L7_TYXqW'mNTWnG%VVR5qCYqongl"]A'mInH!UZHi7Z'%e-kMOD#`GA:Y-NF4==X-7OXM[:;d2DueY50Q8V[K(mj.XsJU7Or$%4JD;m]e##g7h$m#"JY%@2502(<IQ"3NVk!8=R/RJlg44X1HY\"WThY8GKX7%1%A5Kdf)8L]s/Bn5,o_M.-HnCkIGd7YP9eD<8SfJ^-UBeUc2U+,hok[glD:%(/S5bEX2k,:FdfF9R$i)WTo'eMCbhKFr<!47/"G08Et:^B;%)<!Qr6NRM?<o-ndItF?<l5RGnCt(lgP$XMN_%BasT07G`@@5h"Ub%.b%Ib8liJA+]A\>VAlPGXB/1h/Resa%_3+<&-`^t@"B#_qgtecXSfCpPnsUt^=gT;"\3WX0pfo)ljC#RbYcI4,iK`S7sfEn3c,bk%[nRZ`PqU^+AkUX,C8:89IOXG)SFI@V7XT_:6gTZB[[n$WOj>>c*$LNaSPm]lTnmFik$^C\W>Ht4H^Li[qmKi%_[>2&Q2*)9S#$^W%VG/>@6Rul\9]7sEJLX\$BluT=Vf%9eElJFFI,-,nF\k\Q.*P5a9_-7&*9i8HfegkT44.k=,lJ=aM1Poa-mr?cTt\7BXN1k^OuE\m%_+@aBicg)K%`nudrC2c0WHWTgQ?`<(bC*]h'nX+^S!>p]8rpA71^k!&"k*@:.4m7q;NlC]l]fXmAhgu8eIsjO<f0pe\m#?\aLSes%$SoQtY5Z38Ca%PCNS3'iWA/buR:;kfF[aV,67;9Fl(RR*V=[kR\8gK9>NHE&cVfJc`PRG@MF"FUHYr=hH;P\UQd3I'gd9&'KRp=K%:P$o!]<[pkYQQ@V^*^j.k9tt+Nk55?ck7<PNE`j<*5/$Lq<2`YJ0B-/QLG`N2t^^3b)H50R<t&E`L%W[QUrk7FE^B+<?:UPE`J80%2\kjqi!L1(2C1qt"-I7*aB2BoG?&mt!!'=)2L'g@(!qt8p`:OcD49Y/]OIVPi8Q=Z]r2-''<]#ORX*Qd/PQqAgC)YN$2%JIr.9"'%fJ,g*RKf/NLV`puV#sV8j58p\?rC9/C&",TA`(IIbT$50,`tf+,Ug.Ef%8-^%E3kYRQ4DiKQHF_6[U^SGEG;5_>pg^K3MI^ANkIJ%L)KnQV@TRjB^(mJ\365,\Yei;."A#f@k&jA+*c]D<^.,#)Bj=`\lG422EQ`#VOMOT:JRQ45d_Uk?XmC[%R&`Un:Cl6*5)L5^`<i[%,7P+8/,\c'Dg4VeV.O[HE3K81@Y*.]%d.2qT`-^>g7XPNO?imTN1;LK</jJ6!46>j#EB<Ka<jA-$"$Gh;)ed\8:sSb<_NKDFWfi?%A6,(-I<Bj(-7D2*`,YGK!lc]jKiFG@5QV0?-juLf8^PBU)d\AN'Y=ugDD*iXkXfsN%kf%:V"Ls`>]/oY3rH[FQsJPR@"&)_!rYG[%+5l-lSFDLU$6nCqTUXC>?Fk=Eoc2+gl-(d&jadebE8SO&`7G+TO=9l59WAZ[URsWsi;<nF5bsBRhupL6leg=^5T69Q_+_iO=FDO;%`<&+^Zp?:snNN`Lb8XD@Y,3k^WQN/jc>Qlb[0HsBO4%+]4K.nAp_5np:Y'YsLiStP2'DKi+X&ghj6VQfD9L!Q.;&JMlnd>blmfdM%'HG'J/6iQRq+D77IE]@iHAIqjb`eQ[7Z$\J,iM'4>pfrLAWXStM$?AGki@dL]+<p^baoq^#NKjLY9[LZP,XO[U]1/%gJ:BU7?$*3%A0ge9c&s6U)+c>6&L%Ih\Qg$".]9A[<PDZu-2tV1)Zh%l,YEtkcRU<Aou?dJn]Br\&oL2U1)D@2kSgt#htojXJ^W.O9'AJ09dAb)%(PU$4UJd9RMUr!):^BfSN1oP1!k01;r1ZNr7gW46!g\crf]2,.9bL3ESjR$&'ng-b`:04t?qEnR+H%#-,%K/V\ZAbra:5;rkopPe%?7gjLi9>?a_PG9N-rcWCeL^M&K5*\[/<=Q=/7c4XliWsDm\lTH#N"t+<1B2L>65+HPP?j4g:VNR,^>Yl59Vo;%>TrnPDMhehupB6%\Z7t)!GE>R:RS40p.N)8g0?Q(F51U.4@U,%1s4Sj&gYETAEF'k)461Cbf(bPF.S<cYiME^^!j"UTiHZ,]q7%s,hL(gX/BS4&7QP)%nDKIKa%QQ3QtqE0q(#S"<<.BsdNPmiJ_+;OO;\SDrmamSifW*dF33f\pM0YApY8qu*8`5F!K#E=a;%!HHkY,YRlN0gN#4m=kosL%%g11ZU*4I3Cn4\3GUg3..Uf[BG![(o].%3gX@f->MCbeSMU<'mV.9-r7%U_j/%2JUdrK`s-CUjdp$4J6seuB.'-`SrG8:c:o]C>=a%Bq65@*,sG#+s>og#DoMdqT$ENMb@.AJEm:S7`>SX#!3;o88rpDk$+T?ZPq;mP=^_eZ1p6a)6aO3PumU,,Vst@$NsZh&YRp8L1e:(%B6m(e6&VLQW^<NPK57&l-ZTPTrDA[kf/doc606+_?YfJAiqU/uF:/(EU2Js2Z6h`WAO%uK<)DL4a/=bVG27@ER7`'u8L$2t=)mZQ%i&V&D$"+nXY3T&M,?U[CY(Aji&<gkW!4ot);c5FRMg;b=UEYc+l`jk.]Lm#&$:T`jJf75]@'iJ:]l2sYj+?Oj[U0W%VhBUZFT)&\%]:RNj^g3H%?o3'>k7G*1X.O_/BgkQ(,,ssW<!5PoA,-?A;8n2fAgVhCor/qKWD`\iR0:8.F'YcR7jFNA.*-%/"d7'I]NRoCC8p"'%/@Pl4R]dNQkJ?0n`eQGMYk%+ijTp`JVKOYb69ELqe_8_sk(,lq(Z[atOTiUdci'p.TC?T09@c[WaDd_V)f)q$1[j%HqgC*U^9CqS%m-M;@ojimHW^*7a(S"EY5t_V]WKKb'F[[ae34UP*34hF8[s!U<;+_$k>m!ZB[VQeoCU.V6!2OZ^+e"JH,s8l@cFEPJj;5)1F@b,[%1Yo>f?F8N$;J&Q_?=s>$Xa$I3FEH9+GoRgk!]Umkd\#-Y:SDor+'0SdZ&`Od<OBdTJ;[T,)0WS"8oNpTXDT"5lg/N2`oA^V,<e/!%ZEr06b`gEpJ=Dnjd3\lQY6hB8qS005AcIeIjXg.RKW*_5i&@iVFD\R<qhKcVKN-PE6;Bi)@?:1;U,;<l9Od*<MkW\2<?sfjR\Ci9%AcNhqbU4VRH#0@OaHVSeE"AG(KrgQY8,ts$mNX3Y6bL,I6s`jK#]t^b9.A+cI@te9GOo#Ug;=DfUcQb;pOUWrP+S[pl668R1;Da`%O^?\1.(o>@$VtCf3^F*S(@\T]].tBX+9dG;T6=Kb_4ek%8qb:J^nVD</T'RC%=t])=k=3jf9fo4mE7FA''U7X.NXeP/Q$g*'dBEW%'Lr@9.ImoZ=cMPUpb#q_4g*l54Dk6A2Dpp-nU:hM3:MMR(Rhf^@SU;r74sdAH'd=E`Q?R$>mBt!L'7pJYZtBF\&u!eTb&o#2,jj/%;"B(kP44]:Vj?]5\[D'?JB*Fd/N"R4*F,bkSjJSb^)OjK;Z]"e65ACaVlk4FJe5A=5Y.jf=YK3!;C"K,G^bgA5X&"FI5E;%7<C+2%,7si:.Ub-#@LYgII9r8j1[V=j'e@_$!?>"ud&TcR,A1SHp0?SLNLJC$lrQ#j^o5.q.Ho.\(^)"Ul2_4U055"j1?h`]ApGT2^RBiT%+Q.cR&'S>M$B+RTcE.Tj^5=kjPas?Dfk]UK<cds[$0`F<rA+'JM36`4P,A8P&auu'@;U98QX',JjYU/q<E_Nk;X!n+YE@]S'Q'^@%F4RVh/%g^D#@AF]c71[5L<RK%`Y[()-8&\gf;]`Q]I7[U:3aaW<]Z(f=<rV?'cHE!Q_PqLNKa+eAJ6bbV#0\*k_#H0WnOYo[Sj*C%l;_qVg"#[AHgbTlaAS#M1P?O'WWHn@&3;CJ?/qP<1_0FZJmAa1j>r[5j&dFU>GKWM<AnMTr2*(D,!*M)^;Ld>R*[Z@>B#4R?!GHd%)%J4'KPYPgD_5CN=,RXQX0jN_DnXH9/Tcruh:b1.h/>Ff7sFEfn/.P%p118>1?Oh$K;&A;c6s29&a0C[OrQsZ&CU:`d=1kIBKu@8%\>#r=KC1%=BI'lW_BEAWT0m-8$.Rn5cU>n\C:k4!rj`&k1E./9L.iHo&4W<F^IcK\&m"6?(CVL!]7KO)\`Kf9AL0c[NhN)@>!D*0%;o4d?-2Qd#=gMqP_@4H&[j&SFp"*l<$!<&^48`AV)XR-9EIR9Q4/CF]&I:$5&*:8Rl'e5Xr<l5l]3^Z,A\*,a,uZ_f*nqtj7,ZoX%!)[RQ7(r._*Wd%]W;UH@86B">7P*qQ-=,e);5I_g:ToC+EAm79nbOq9!@^9cgr0@"On^I-n4.;uKK18)4lN!KD"PlZ>/h@T7?R#0%OQ'RL=-Q8oN%(aC2F)dU"aj5#lf-g?)8N?="=tVbi=K$&A`O/IX49u[AP6G\p7i@*i=HI98G^;h#>kqn>TCMJ$MH%k`!!%7jNS(=%2'LL'"?Wmr^f"*RXD'!f!&c$pn0.Ok8jH`pC<k\Z#sj/c!a3"J(mEZEE9FQ>iLF3K_@qj&egeIL4d:ESC\@I>hOYmoEr-C+Q!q9;%L]i@/<qMqCW.!M&&"<puYPCYJ,AjoVVgLUY5Jn)MDi"Ynll=GB^>\P%fV_M53"Slo`7t<I/b.!Z,bd5E8,CiHB9Tuj0n7._6J=8i%Cd`mK?:tN4TJ?u%--h%egOZRsC4JA`1%PSJ`%oq[bV:UsSA5VN,U"-E`O">7Vnp?PU+Bag"i@&_f'bDIGDO$t7F1cqF`"3rX;V6^%F)r4"_"gj.0R0mtJVbcah<G&T<^%#c2i>H3Z=96r3J6/PS(@ce/U?-r+!OB0q`a0RQtjcV>k<^n9=pf\<f1WCHiBstM!WtG&3M)p%k?SaWG`HecfDHfU_t:T)J+,$DM0dM*__?S`*!RB?]NWCFbHL6#`F]h>b]8B^S\UOY/2u]S_P*6^;o:r/N2"(gK02/$\I3ns5'd=X%f[#_q^dWW:$MsSd#<#[A+tJdAa2H6kbgKXs=agn#&L3^=Jk(S>/s-nHRRYq$@YmTd9?@`&s0c<15mPr;k1;lT1?:IU+H+1+JKi;0%fAkM'&PeC))56qO8=C,!#!OeQoV]D1,*&"M/?0m@2<Pac8U2\cr^0E2PT?MeOL9bRfg+8IR)@OG4g+<&;?u2<Df'g:+)8dP--Tp?%6APb2Usd0(ZD*/K'8`O.X@,Vp&@QA\'IP)0-s@>X@dl'@NsMEd3q6&\g(^89]j*[O1$TH!Yt4(U(Tp9/(QnfM&9(aaUl<M\3'nC6%S`QQcn*"PuCMZS&G:jcgqdJtq@cc#<?lS&;UkpU0.)rHSHtubi#Gib%Xehm*'E2EKi6TG*aD+;:Wkc7ep4UtH/q_)+JjZ9l,"[rG%rkaMb$jTpU2?BQ=A>kC4*XeZs!+/%bpa.RsBMKuR_71U[/?==M6HOq;8f5bN8EbduLGW`IBVFK&0,9Kc7"ht"8ED::9NXuf7&'op%d6;Sm\]Osm#uQ(#*3"f++;,V#oS5+?9*$tiWlC2k;uko'-\djf">C92kXK>@g&90#KLQtVFaC-.Pi?DW&0D?2Oao%sm$<7`#X<*Z%eUj,[>t7:1"n)]461=s3;-3u'`?f%=*UBU<^#'-g*F;Onkq@ElU+,*9I_QP"O;0^1/c02a)GEEe$#'cTo[pbC+!p^*7Qt$;7.s)4%\V*?r_+hZ`6RiP.EV:ngEdKf-[XY`s^D_G=k43CrLT0k7T`aeiH`)hh,$P>8!I"PVR$JG:kuhL>j@5.4AuVpi</3D]J.%Hue2Vh2%=FgGt8l&'PC$<P$1^<BQ`%hdeHUSZW@]!*Qb'./1+WgkD;YICMR**cd79iP!O'-_FKH,l$Z66P*XUg(F0r@:;EZB#Bl3OQ?A7['^%%=d]bJjZ+ZNPV?g_E>:NrLH<PqgtQDcR<FYAYB\6"WVE;hUi[4Uo'2OZP6lR;bEr*3lbJNSl/k5Vod5GgoQU$6^>\-6;rlJJm*qA%79Fd"I(p\H7[)r\B@qE"$f:(>F:2]`nJsd0r0r.`U+aEEK;lCX]cW-X+S'Fn$>KPb_6?Q;+n?M_U/Ec]"!PPgb+Y.__#]LC!i-eN%YTdLA5.?30K2PDL9bpcNS_8mr&e5GN]0:lj:m)btI8_6!7Ihl_[!;?p"spGC,u*!N#([MTG%4Cg9C72jFrfk'&4j42agI#oapJs5%!c3!+\!R;"*l]'ld7:nQ(V411C>a/@`5W33=_I6.dFZa>)f.[:R.Ee&R4]Qe#@/oHQ5KS\.Y$([l_*B2Uo5@_l64C>FR*CgZ,71q%%-+m#'(dQ.Er#L\HM;;lMtW9Zo[-INh&+J\E;**DC#5t-qfcfU]=!EF*YG.e(_]2unr*q+\*L]&C)b#(gS'C+S)%8[hYshA)6cmY%$LUhLLtmse(#Us`+0q%uEX,f<AQL8nPmH=C&tppSXD#rjC/X$CAN'58UoO$f`n:a$39]t6AO0n7nYs?20Un0H`3jY0&qULq84\H'%0%D_&V'@"/Z?'#$\gOsKWrquoc5Z*WJI']d7+E'#=!&tqfWPAL!@C4Xcq\qa>!`P%&*<C,&t^]k`4[;!dXIj$$pIh<8-G;"jpY$t%P5Wa<@k=!;%BD*aW/$0]S]nndV)RO06YKb8b#d*d'/3*lSD+N+;SSp7%/.B_/P,.kr/(lI8.S*5e<#J0Z.f_6<L,LlC"u&NA%?!I%1(R!#O;CC;%Z>n9CNJ=`&4'1OJC4VV>H/d#A]Hbf/j-0L7=B&"egkX]Bs/?\2oG9qJH@e?2't#Q`U8C*AsUg:BT0B>]<O.5gDfWT%[&lQ1ps1)sJ0Iam&E4WEi=i%V@^Uk#ku`Kbe&<;[7P@G,Q$kut;H*G6[>MffOCY0IoOO+,P3g3j,c.2%`=Hi_\msVG'VQO7*Z,&K%ibG-bEG^KIk8+?`c,B*\I"3$=]FUaBn-jRn,h>LJo)q@^?TBR[S?u4\cl7[J5eroJJj>;n)Y%^2*bLU>">[oY&0pop1NDAkNbaql%[9leE-?s[oI\Npeo%JBiAIYbE8c:@E"r);H;-b[+3MG7mm:4lE7+q.DEa[-(0"I""WS+e/\HsoS1N%%:@OhckF)RZ8=O1cD0ak5:%]1I=9bLb2nr*-"R*>\tE;F1*WIO?]Cee+Z3U)]hs])"%rdNuKP`@M/2j*/lo-<=o;aPMeEQZ*eSmElgpQkARChWc:)E1=kfJ%*J&%>'h5>:)hsig5kD2*('*NFg?<P['l^K`tSO+;+KdJ*C0,U;"E0Id@PqA>b0`RXeG-k*`K:i[skg,YZcAnlcIfW8[[)E68e3b:L^#9%58O^p`h:&!'[bO>7,Ro,M4&sH8q)ejF;UKDON4#m_hUnt@4WQGmMYEQ-C!F6Q0X]&lZ.Zp<^YO*c-17#BMQ2g@H$TI<g(HS?4BP_%'J'TK<>CXSH;+Y/@kdTCmgl;0r_/:<EJ`Rt,tukSm\.;BOY'Z13G;siP8.M#O+]:4pG=ekMqX@(&Zs<c.+6K1P6g#/,De[E1$</&%OO/2uZi2Pu#-U7TD"&u:pbQp.Nrd;1^HVr$b*A0gB5OJ(/Z864[H$QE4*9l5a$p"Gb2ZC&.ncj2QS'X@p^YBc^kdMp#.c1SN1G!U%M-+qLf73_9V'pdDE&XRFUH@>LSLL@Lnfrb0'Wk3HS:Ou^VVb5kZZr#gN46/>#Mnm8H&g6dBdFCopDs'!X&hr;N5qE61;nTo1M<V:%+t=.D"sF`#M]L6R5tB!dj>bQnmH)DnN97gJlB02)4Itc+=ZX?"7:AHIb$%3W2QS*R>BPf8$:]Cl[a>sE)J#IVg:M<1oP$m7&1EGJ%&_'t[nJ`8.*j$QFR9I.J(MpB(KsBonWSNLQ6C;Cdg^*V8&/32f'Oo![]#ue5D?s@,qD]@!D*1t3&+.Y_AS%BC<*<O?#6H3'd)*na%qh?D=_KMpTPZ_]_KI#n><Z9"HO,Q;+/[9H-Nq/>_LbgP:VUpDX,YuX9r$oF^)Xo*INGu4s;W-2>O`ALZCc%_SN.qqIW>W:sePaIt%ZKO@0R4;oDc+)eA9':>"15K'Jf%B<R'%Rrp<8&K?(6M,sOACCZ)Kj%^SBj,<moc5%L0$lR;6d)dhKb>"lU3qV#bb(gel7`q8Dg2g%fDUSu-,rf=10HQdqodiB/pfZj1$T<tgQ+N1m3d++nYPscIJN.YK;=jr<VXgnlaTk=`(r^PqRF^8Sj_irksH@E5gof_DH>F2/2<H6%Z=K&-Kf?'f%'5>O(0fn[AC[k,3_`OMi-VH#f1t7UTqFA=8)cr1%Z?9Kcml>^b&W&tS2MoCY]r^E3:?DsPMrdh5'>&9Ll=#AMEUeO%W8`#UEVsFI.eICd9D6Q;XP+7B'F)$QlT*O$.)7:_7"F0\C_K<JT8kDN&C8IH=9:!,B&PDbM)o^Y]"+N##^D`5>.h1lj/8(Nf`H#F%L/0H]FV><jTO8JdOM[h(!kq1\YY9I1V[K(3Q,?$[(ju,1@=ae5a;-ahP1-1OhXQsr"V;h'0\@^A[<3:M2`0i91@XNE4f6/MlV<Du%kN#R_91*ro'?>[>1'M]EYP'`pg`)R0]m9fGZ,LOWPhFI^O:T1L-E_D7cNTu%94<?eNliqKFP%Vp_P/e&TGGt5)V*3K(nlW=0K->@%d@>?TZYLsh8LrR"Jj6"=(**$HGCh:sji?K^o\*c!!f*Tm&?bO$PZ7lCE7mp28hjtWK7H.U7G22a<pg[`E4HB<]Fcc!98CIBa4aOW%odMt=[feSk,Q[<,\V/M6euSJEeT5ZnEI;D9EJiH?bEueYToUZ35*IkEMdd;6]^apc&6(.JAY+1'2!Ol&AqDin&pK6B0b&Y^hI>Fr%-5*Pk=@iV))k\kc!i=OJoN,OCZGV2&RqVP$j_h5^lG1N'0`$TocIjaKDCRGo7AJ,S/nqpt2r3\H`Bd%Rd92M,P4+=g9O]&di<&Zl%/cLK#%tc\4qGa17f7sOh']D<PZHt/`98)'.i'K.G_(.S#$8U'gJg>Zr+4KCLP\aRD>gKK(2D'dMDN32cF=A<4q69"_/l$F=kfHT*%j_;(8>;i6(pN37#J6=&m'H<o!#T1..6d'V>TMWZCMf*@'1[6AMV\kX26.6lc6dB-G*O-&^Y>/^TKS9'W9e(A[5Uao1QMN'uW#GaA%lA<1>7`2'+_R[O29L,;mOpJD2?[U@,bDqhkIFgdhbUj2P;"=m#&S*NqckKQ86V2fodp^cEo7bJKF;\Y\?je(g4e&"Z%'!ck=^aEn%gn*281OGQk2[jVdHn7kT9POY\%=up;B\/9^26EP%>1\P[^T0&kL=*\pa&?ZL)JZpckiV6mS'A`UO7SL<6N-=RNaf_,g6-SbD-8f2%ceXbVI/A?hI,)DUg!Oq\lH'T=Ke]Z%)MonQs2dgu0oIT[-"+l4,8#Y5,*ha&Y..GR98@#-s8A0"1H]HDMl0/*BMk?ArkUD6$?Pi@%E%g#Zb9%@Dan=#H7?N/gB#`=QoCr$p=\iiSES8`BCZf\.2m`-E%<.9u'O"l(,$`W2aATlc!?3VH,($EWn(A.>DrHeZpE)0Vj_i(.%ZJW%0Hh>=3B:l<.-Y)bdc0Od:$n6:Q\Z["o=S3LalRd193;d0+2iUg,1("hjO!"_[G9ntXgN=KHZh^blN5>6M_V6pITP>tRZ?/N<%;8l);47XflDMiWMRpq4h(E!j<<_YK]+]C/+m&2t-qHB<26-NdbXTB$20]<fc]Wc*^1F!VoaZRWI#A7J#3(9m`8mECMWQUfZ1;mN&%q+ha&b28FXr=ApDH0IO\=Th/[\&_+id`gq.3A(CrO7EUSh.026:)7q*Xt)gK'g"dfVoX$:=8p4IH<UHi\Ss\B=]XI?5aeq++\GeU%9.a_5DQJZ$Ph#`EBdiH2&^/s1>L]3qoao!!ketq(CN#:2@<-IJr$1TSr<3s4Uj&:d^*PkfY<4r8LpUBP'8$'PfhnND$BEho6E2:9%KkGA%2/Q9Nj/X7Sd!b:QM'g/A2$E2Q^p"C3`=@W\5]rm^O<iKrXBFLF(TS$Rd.a&L'BrIoiJ5T1H0^KBY5(%5R'V;;:YNkhL]b2H%RI<$RA`K$RN23'YhBO>dF28F>AX2pleLfI4J&n('M@KpmiW4b_/V(GYfDC<;cXfq<Osbf8So[HR%c9$j#=)hC!a]$%$B?epA+/jm%pjGS),kfb395LEtEE_e-e$j!"rYK5TpmU%_X%l@.Zns%m`%l]RKlP?.hJ<!7/pkL,T8a0%A4-KVo@V-_p9roGg?qY(;^"k4Q6F@d%\pZQ^+Pma'_cK,!0j04J@0/UUnP\_o.NWA;'#K_I^!-=Q:jop`5:rL_WNn[F%1@8gPu%l><21hfHsJ?L]0W]t0f";4%h9DH0]j4=%!ncY)?thd1B:(.PE4`L$)dm[-6NoX+D.9(Y!.6SlGUO[;(Q+VZ;uR1$1b>?+:T<f8kS`XcGlUZa'XC^[0Ki[4QW.e:E;C"h)$fc@%nRd:Z-R9X8#t/9RO0'E3iP$>V8ql:I?\V&R1dtPBE4^)BEp(DIHEZMU50X&mB<!FH=(,:\@$\k1+_%EBOqZM?<('kb<ZiFlW8K&/%'W]+sb#/L[:_FWhe]DT\1a2*8.#["n\Z'7p\R&gpJj.S:).=eQ6fE[-PlQdk>Ee7m@ON.8XJ-7^aZ5]p7Q&h>U*i_jPflsVOSNN2%6VX-bbqm'<@Aq7^<E'L$9WMe!1F]^Y%rub<JT$75kcP77S3@,Y4#FdWM3nbG,a2`'a%$%b`+i[`0kh1uD3tAIMH+;F?q!<6'8Kb7%hM6",XNL*d.L^F9`1%9F@Sl%_.TjN$/-*loJu:>!bNGYLJ]tdGEqbO0Bkur%A+cpZOmYOMC]u!f00QpZd:^*ao2PpT3&RCWOf2CX%+&>=WUe6<hIq1^r/?]W(??kYeSBc9OY_/e)LY*9T!0h6M6J\mH78<SF7T%Yg*OZW!HmR?LROZKSq4Y/WN"_*rB4GJ,FlXg],Y?"$%[ac'\iiW_N7GboN@48!R'[(aE=r(3d6#j]Aa^Xe*daO(Y!iCu+"0RG;#5n/=$(6)&@%3G[n(3ne')l*gbnBqB1u_Vuh]VJ(<q9Ce%i&YAF"D$;tkscr_9?N-V[Zs6H8`k*j]_PeG:f^r"pRMtL5X#+I=bKg[U[n9UA2=j2r841<^lef(:<@d;@DZ+J?sRCt7%T^VJ.50j%CKOk%4-8l((#TlQim:qq$g=n\>g@-l0ik%7cYabr@P2Lr8aG^X'%;P<&oBTR)1&TZIKm5+cSg'k"5T53cuh/jK>qg>;_f?#k;(kD%H%Q462K!%P_MsbrEZ1GC!KFjJNbArl^Is2^i%?uZJ]'?a:b32M18+T1H2]KA=+V-8X19fC!:*F[,MO:L/cbhJjo[#]pMg.MO)6iM%0\g"A=s>`O.I^m=n@k)l85$UKDhkPlj5PC>:Ht$`&+;oAH`2NDMssKQ%2LYb-,>kfb^u.8:1=hMOa",Xo;00aU@PljP28ntIe1cD%i0B40&A69@J_(dN"tL<[+^qQMcs)Pa`nj"CU+QoS>7SqUQ`>=Rf6AHirpUSN(.L#t-C&IiW1aPQ$=FD%SeLM;/uAq@]QYA>Dkc]!%;G^S&i;f/Wa<tN&>(6TH%)]bG6Y9m\=WV3N[\?CJ"n*#i9hsUhD!kA6SrrS<1JOU19*M9rf`&jNkLZINI"`N1Yfs2I&XQ/c4e3c"%f[HDFR_dA_,26."j^^dSZ`8).F^93L!@$7B!_$T9r*YGA,7`o3"O*YRErkqX#cTGW6CUZBJs>ZBCBp+lf\'*qRM^KW>4@p0]]Q/8%$Gsh@($oA%^KA-58t+^WE]9,0:OMlV'JecZWlI;Y@L16A*(Br"k>CXp&_f^q)1*.8GGMi[:F#(RN&C$j7h>aD?*Pai8"tkVpJc`W%;cWDO>`p[*"KuSrWP8f[I*Lg6W.1T<jJ`</1dfPWW]JqFf;,ieYnSB.Ee6hL:F*_hVE0[>fM06$1JkbO8:3c@6DPN.MF^8I21fl`%%ADt]3ajBkL0\diiC:k-$Qs+lZNnqhek&ec^eI)&O<U7-gj_2>O\)[pE$,1;RFo%Kg,B?F(V+n5i(lDSoiH/$Luro@T:T%D,k`ct%Ru-0E9rDha_.ls!AnI1/<qBEnP]O(\pt`?oLm^6A@d$Sq[h;)0@dgn:e=;1T6r9(S1DsLj*ES*$_mD:=1JuM#^]h2]LYa;177G2t%$iW,hKTUE).kcq&&FTO',CaYpRj7\bfDKkH@57B,5:!h&K5hD(jU#JI3ld.^KZ;uRM'6srB6DJVj1`3TEq4gEbS'^l`F!2@9g("@%<W5%)jt_2`!P)otCB:\_!m%ss.7G+!5(3f#a?K#1g`h*OnZA5+aR%475R##_jERrQN,[+SGl2RmA[hFgk`sU^mW0,m$e)b&7Ud,V%cB_AZk/IZQ-Q\Z(X.ZGuQUgA-m^e@_^.;PbK$7!\2b2[j;>&'i)1k8m?4o%GNEjIK5m5'Bi[`5:&\HY0euLORP!+J8.X&d5AZgbr%cMDV)e9SoObF?I/0DjLc;jD)LAt`pk'BM?uH+KZSP;7f-,n,3h"A/*W7T.Z.rD;#L7!>+fL0oC:8dW#+Gnn:U.bH(4aLh9JYYl_h%7"')t;!_"]+8(o<*2OZB>k9[b[hKjf-mNZZ:q0Z7-._fQU/):K%$<eeo8p%=&c$CR>5r8pj3_<.cF$iagXe'n#BbZQ,VY(Q_gso<%,`n,ZScVU:0MlUj&3S@<;2>jC=6,@V.oY?@?c2dHA=/G]'dD1%,:TN")jC?lTsW/.0?C<:gN>b@F!?m$!'8duRkYp-0;WgSU7qQO%(ja$mY6f\\(c`DmS:q\X-)SmSp$:,H%riPOm+c\[S7_"<*A\9A2A-ku9ZI8R]D*kL)poW(:8&L@Q]Rra:Br'jOH@LGqld6qDnM*u%b$!ul_Np`qhB>dgE.oD@_*eJX"^sq'Te9s-cc&Z6$kr"B/Q@F&Lnk\((=PJgLm36V?s]Eu0#FBn-[NH&>qjjFUU;[7hR\EkT]CX6%-$?+%+pUH/i]<7<biCE'$9fhoW%(@-#q^Unn.,oe*p-6`0nK`d"'$Lh'pYN5-.,6H6LY=OWD(B@AFt"r[Qu_rQ1Y2JH//Y`?7h6E%d1A/E!`)C^d&ClURTj_t?]g@Vc"3?-Gc+I:.3TMrCl;.;/(T-D3i<*A]N!Ms$=iW99l[VFr#\g(5S[:BoiIB<Ms"t[<ZB<mPpqjL%LAjPVC$T[K(mrT$d3<ZF>;\0J<fo7aY`Vtr3995M$lq*o6J2@759d;dE&M_l)em0A^]SIr,\.KFJ1cej7gSQ1Ol\DMMAasY5k<2'%h>M:D7pBW^FbktGK%m@(\/T[$0Fl&2?_j46VdWc?$R#S[J;IqL$I*?W,Zs-2ba?KF1LV5qJ6TPBc2@R2o,(.)0j\b1ZV4:tKV!b`%Xm#g,"t%6pY9XDVGW4@8F%DiCQ7YC+WG(W(W]tB,V<[CObL/d'IdQ/EU%T^O"%d4O;)-Z1:i_]\-c[j&@Ib`SRlH.r^63JTg9cuN%R8hDkbs8?QpLncNo1U%3!<>Esq8m1;G-@+i&LKt_KWp'#Fe[#JjD/K:U*/?>1Sc"NaP:pjQ+bpE-/RfUF712PpjOG))=BB>j9=p"%<.Rf'5)A3Gh56!n>\!];0`L#_Fk#7T"H!?3hW&Jlb9Xs0"!d-&)d$X"E6T,^*C*"o27_0iNh9uJRaNrsq\bt-%15,8ljes%767$D%MkH]W6S>"6r70N8FSr7aM/i2ihklUMY;(D4c)hoW/W;2#L2^]10F6hBGI@C45c\9K%"pXnr\fi<+F!e\*TKetT"hm\\1/=sH^D.!%73rti2Z=aEq&A-Gf;13IcNH;4YO@j$>QFt0>\$668G%4r:-tdab8I5-NVEO/R>0u<Y6;KX#d_7[R$XV<@SX!.aolGZ+p8'g=EQt5%I*'Tm137dA13?1U^5a$4-(IL_jJuQ32,F_5qfhPRTe!onUg$Arg2r-YWoBl6mWZaFk(+"I31]*c4X[>1QS0CHf'cZQD$T[BRFVjS%*$.W+e9?B+G4<E)QCccmCAK)/4b4u;S4-1=#0eEQBodEX3*,)IM97S]IPTg^@p=?L&/"8.m`$*_^X\&'7cQYR?!e!k)%(5;G!=?2%-@=U)3\B_9#VP+b5ku)li<4<!,-?4Ui.HjZ+*]MBZO&jmGq"9P`=`P<9I%#&2F_3`)c*[dB@:`fUC+[!&p89b&X$Ju;pjH@PPM4V%^C#Ws]%(;BVj=ZQbY85kpae=-jOu&&R,%.@%-1_-p&\dVU3(5Z_-k(W6conq6:6T[PU[-3(D6TsE;s/]NLg*t9Bb5-o">`++3dY^%)p]C"SL"0<.#7n.AB@6gNj[s,_2#@\CQd$TQSL]r`[!BWeKO7I>*L[NZ[a4$[K2)Q:)B1oS)?)s%JJl+<tP/<W+Nj8EEuLq8H63j%Gd<S"S&f^(32q#lZf]\Y0Yu@Ddgul#DW*hZTq1-ab\Tl1=CB\=4,%^Q6HHGSS>H@d61dLcOs$DG/gAB`N=)sG=%!;O6&Le\1#ROh%a8qeIjKr/94\APXqqq)'m1o1iO(lP,&eXA\_PT<.nN4SFh6eTM`;/!K?C^u+l"l?+%$U$%o7!bp>"I5QkCe#A#WR4o+<kpSRc.>Y%<3(U]<VD[TXCP,&:r-OEMdV9IgkMD@\6aFa5XKnrQ'Ru$-nt-KVKgL79G[//mdV6GGHITpD4&k.>FZE4s-LeT[":b7I/g@=o4PNj%SD[[k27I`"EUDW!$!q[5L*9tWI3,-e)5g&R9&M3AU5H(E#kMRG^O6G5&Ss0f4h$E-Ta4d8J'(acrCp0epH^:L%F\;8AYk@Z5.t?$%9[(`WEHbQ(_k*_#6P%n<(8?c3nYN.dq28D=p<#QGH"Fd2JTLGM75f@s*DEB<KOSL<M[b_2/:L-uq#_#2nP.KRJ10js4kWR8$D/=E%ef"8AWdjoSIS#jZla&Ui@PMIU`J5(.cLZM:CO9C$VGm&1&&12s=PauZWc6qECOF1ABt0E4L9lN8NOq4??JA_uZ?n&VjK,)h2gOIV%oHf5!+^pAL(.tg\aRg.N9CN>')j%FUATo@n2W#Ro-__4#r-*2=dRR1tJh=n"EVeO`k?qOe%K%-_+GPU\pK%C6,BVLfCm^u,3P13F%7+<jXMWI,7=_L<>$(U+*V*n;F"tuZJ-cfMIZCa4M*I&EsJ/h6Ef-OmWlMWf-A+9Qnf!]8*(!/=+aM`qY0%d9T]jeA/X\4=X=mt/Z%*Wu#bSrE>DVI>Q(M3,W?M8QE>K8l&+"c__@"#7D#Z7;.Z'n"C/e`hQlK``a6*!Ja5+>E=_REFY]@2u8CB"ClOib$^D!-VtAk/6i#%Anb0`/3a\n!@eP6N\]Z?j;0:9%28]C(EfQ1!!lD>#djJ>SA.q"Q@Y\W2/^Y]oIo/gX=6P=6r2`>8Fp;H<,bPT@iSp;@gXa&=NWV#%&A2l(f0#t8JdcSAH;#KjT+lr9LN&K%VT'Zu8?Y^K5@8I;AMGUYluVr4Uq^KN)d+D+k[AskJegGqi*%d^+&rmJ$OgNrftme-+S)Zt%XG_p-:*L3R^0VUBA4?qpR*eO#1_'g9fIF'X'Iq^iOdV6IQ#+j,O^0`nm.*7#`f<SJ^+?^2?:`(!WKlqE"a?#RCYuj&8F'j#pPhLZ%h&QBGf4fAqUO];gEBi.u$r^oe$5nef'jssARjFp,"CpDAP=%,a(ZcZ(Uc95M'^<CV&um*A.`NCP7u-\"#Pd-m&X.]-lAQs5E17V^%+Ck="G8nAtl/l@dI3m`*:Zl+o3mFkX(_\&)E>WBX'$;T^%CJ0S=QjuQKSiR,No?p7^$P#ImP"C/O&85g9jBbl"-8I-n%$ctj5+&R%Dg8'W,)`<2n2-6>_N]M5]PRtp_4%:2j2%Y1p$@2(XIskcnhR,KJX(GZmoqc)0i=DfXC3'2BnGaZAb;AN`e./hbK%s"V8eaGf@Ukl%9C_3]>);-NNB(*'TDYN<_3:p<lY"6D]WoM>@f;AmkL]*iJ5^-0-7tq^."#RXSKc9;AtTads)%nJD-K1Oi"58^3/#lGh3\`>GitZK%UMp$RHN^CSLQS`5!o,JQ'0$*q0">G^GY<9u:,oc,CkiQDQZApAqN/nl?BeF*E!iY5\'NW_J.'Z3RcsFIIjTQ<:ojcr@0.YFFM?`G%mB54Ne`EP`+5#VT]Q21h78--6S!^O9>>0dl'(TLi4pgjI6Bl5jZp&e^Z$`/&bhN140nec"7(&P.*/]?Ri\5Bc#"Ma_Sn5>>m'^f0%'Y7.eFZ(Jm+]5i?!15pFS;/SaW(OjVB!]TO/;QDfF.I`i$H*!8]pQs;&7i#O<9Fc(lR8,j8s>]M<s?;\CeI=:Ln^/X5T"T,.Q8Y>%m>-_HbZSCtn:h#bQ)rE%mq2K+ANh\\:Xr0#ej(pEI,l!aMsE]cKM+lK-Cl>!$kgtD$FR`\J5OD4r+hcKi`+rfjI<%oTfbq0.L-lE%fsoNS'!)r\*OA>GW(N9#UK^8(S,,i.(-c<r&3;?`QR0MD`@T!gGOV6#qpnNiHKu=VV=$Y!/Vr0Sa%D[me523m.]eSsi4_P@)!AZ'%ndeB7+R=E4YHsC*GabHn1F\,TTn*^6o2LT+'!gG._+/*LXG^D15++:n6Ci<M)r;*L,Hj8eE/:SCBQ"2Si<:=\gRZ]q!KL63G6S92%d1mIk]l';Sm4iSsWgjn5Qft=`7.2V!\+]:aGeLe/?hUk.fC$1RSNB4tLt?8QIit]_$?m/rE3mq"dB;$_#<i7L9I^qT=+C/,]A%g"%^?fSn&8]aip_^=AWdM]2`68Md"l;T.;,u1sEkFr[Z[*T\LZr`0Fb#iRm=l_+F_ehE:$Ol0]Ie#+ne>@H)`BW)N7XiC!TMWUV\_+l%UKqliZ3$]/15-9L@$CZi-%sN'eEWtjcp*H]`.'_:)A.r`+_>"2FGlTe0q6#/ZbO<(_U9q19og3?O:ZEU2Q@bq/h?q5$oh%a/b<*o%6@b:b;Z8*SX_dGODP4S!_[P9pgd?Fn*Z+K/'0_8cJXM*]=_(GNh=%8'ZjBQ1M09s&Tpd,92hPmuXF%T<HSL0\9*PR(8ZA<"\Wku'%,,d%#o\h)E9Vb!3O-"6DYWY<[+BV)Q![_JVI/n.;C)r^+WI-]B]lFO)j('g$#QCN.h&m1o18in=`I`)MT:n+Xp/^ZtZ&!K4*qcT'%U`Uc\o#&5G7pQs#12tNW'@??7.ArUV]6AM'`$+c<TP2PhX9=J9X3'!E!Paob2cj08gj@iiZ<[jqU:h0NW`\Ie$++?EMS9dH[46CA%-Q]rGbga0=&DDqg/SGNIF=[U/C87@n_8]T;Z^0Sf]e@>Jg.QDmD(3a:[\\4(k6J<fk?PochVNIJ/CHtROErnPG#=.8pbh2-+URuj%1W)jF;3EPu+leO#:fDq$W['5;;p&*D=3ur@,k3hO>qGBu=qhZ_;PLrteCsH>ldSln>>ug:$E@QX5r>>]KZ%La09$Y@:_W4AU)N.[%j(c4GkRdT%O#WEcC[4Z`j?^*?Hl\)39EL#ZAM"_'h#h/G4T04P!"]LYbEqIurQ^e:)(imN!"\X+6Lt`g,)>cmqgeec2Y?IZ:2l?h%giY'S]AGVJ](0$%7a&]?#o29PTl+,S_.YS]8YBcOPbU8HjQb^YJn;&N%?nTm!.U(C(&_4cF3U>Pk1g678X"N-qG`fL*Rmnf&LueB%W`'eWN3oe>8hAALMM?^QqfgkS`R,T4J)SZ!7E@ru4M3(b2g_6t4rsL-@-`1C9LL<)*+gK/=#l"<R;YFhGSjd,%TYANOWp0i4P@mo%8sC-/9:K_X+9Idh4-f&\9;Epu5]HYH]Ui56,'#C9hH/>bp)siiV)-"-TSU"okT#^]oW)fM],=(g5?_:t\"Z:>npVJJV+A`)Ut90l%<M`%#3e_>teCH2%Ra'0"kK@t&(eeTY6S'B<(M8*DPQlRn5O+MnS7Sp$R'Tq<^q-C2/i)()\P)SR)`,'qEG;q9""nG414NQ@R9=&$%D@S/6OLeIk":*4ukfis8\dD5?iGbr!kZ:_Qhd7)K#ji2/]:@5^&Pfi"D(PsCfVG*rU^$Xse@m2#Q7PZm.6a,`Z.uai2`aj;[FRkV%`Ph21ZV,?:U?UU<3/f@Shj,PsU*'$t^j7g<UF8gcD>ND2`=en8)O,V//8:A1VL?cr*g'&CJn!UZ%h<=&<hVOR#kF(Z.+V%_(n'e4%Ui%LU"ITm[8#nq0<9?@E!<@Wo.GJ'j"<rD)a6b"b$V4[@@Hj>%.aV1K,^bh>e?PN@-mMQ7)t0nBM3k;f_7M::ZrZsA-euW8^]!]a%GQ7NseURRr5QBoUn,E1^O'fZ9r9ee/iO_=&ruZagm_A_irJrU]qTF(IIK/E@5Q;UPU@8-&op7=]qXOHtr6KlgnbXthq60hh^EL-/%nXojLGQ7=(s38ae!Epi8q#~>%AI9_PrivateDataEnd